{
  "data": [
    {
      "type": "node--ems_article",
      "id": "67f995c0-d96d-4e02-883c-097365e8b0a2",
      "attributes": {
        "title": "How do I protect my investment in bespoke software?",
        "sticky": true,
        "body": {
          "value": "\u003Cp\u003EIt\u2019s not about money only. When we create something, we would like it not to go down the sink too quickly. Sure nothing lasts forever, but if what we create shows to be useful for as long as it can, all the better.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EHow to do this when technologies crop up as quickly as mushrooms after a rain storm and disappear as quickly?\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cstrong\u003ESoftware development is about problem solving\u003C\/strong\u003E. It isn\u2019t about technologies.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EWhen you write a piece of software, you are describing a way to solve a problem.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIf you document it well and your description of how to solve a problem is clear enough, when you have to change programming language, framework, libraries, or need to use the newest flavour of JavaScript, you have documented solutions that you can reuse.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EYou don\u2019t need to throw everything away.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EA well-documented and well-structured software not only is easier to modify, adapt and troubleshoot. It protects your investment because it documents a solution that is technology independent.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EWhen you switch to a new technology, that solution comes with you.\u003C\/p\u003E\r\n",
          "format": "basic_html",
          "processed": "\u003Cp\u003EIt\u2019s not about money only. When we create something, we would like it not to go down the sink too quickly. Sure nothing lasts forever, but if what we create shows to be useful for as long as it can, all the better.\u003C\/p\u003E\n\n\u003Cp\u003EHow to do this when technologies crop up as quickly as mushrooms after a rain storm and disappear as quickly?\u003C\/p\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ESoftware development is about problem solving\u003C\/strong\u003E. It isn\u2019t about technologies.\u003C\/p\u003E\n\n\u003Cp\u003EWhen you write a piece of software, you are describing a way to solve a problem.\u003C\/p\u003E\n\n\u003Cp\u003EIf you document it well and your description of how to solve a problem is clear enough, when you have to change programming language, framework, libraries, or need to use the newest flavour of JavaScript, you have documented solutions that you can reuse.\u003C\/p\u003E\n\n\u003Cp\u003EYou don\u2019t need to throw everything away.\u003C\/p\u003E\n\n\u003Cp\u003EA well-documented and well-structured software not only is easier to modify, adapt and troubleshoot. It protects your investment because it documents a solution that is technology independent.\u003C\/p\u003E\n\n\u003Cp\u003EWhen you switch to a new technology, that solution comes with you.\u003C\/p\u003E",
          "summary": ""
        }
      },
      "relationships": {
        "field_ems_topic": {
          "data": {
            "type": "taxonomy_term--ems_topic",
            "id": "5be1f4f5-8078-4558-b58c-838706976409"
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/67f995c0-d96d-4e02-883c-097365e8b0a2\/relationships\/field_ems_topic",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/67f995c0-d96d-4e02-883c-097365e8b0a2\/field_ems_topic"
          }
        },
        "field_image": {
          "data": {
            "type": "file--file",
            "id": "6fc34301-b7c5-4856-8aef-d8eef1c7595a",
            "meta": {
              "alt": "How do I protect my investment in bespoke software?",
              "title": "",
              "width": 396,
              "height": 400
            }
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/67f995c0-d96d-4e02-883c-097365e8b0a2\/relationships\/field_image",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/67f995c0-d96d-4e02-883c-097365e8b0a2\/field_image"
          }
        }
      },
      "links": {
        "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/67f995c0-d96d-4e02-883c-097365e8b0a2"
      }
    },
    {
      "type": "node--ems_article",
      "id": "e4c3234d-98ab-409b-be74-5d9ae2a9bd47",
      "attributes": {
        "title": "How do I make my application easy to manage in production?",
        "sticky": true,
        "body": {
          "value": "\u003Cp\u003EWhen you are in production, you don\u2019t have much time to fix bugs. If you are slow, you lose money and people remember that your website didn\u2019t work and don\u2019t come back.\u003C\/p\u003E\r\n\r\n\u003Cp\u003E\u003Cstrong\u003EYou don\u2019t have time to understand cryptic error messages or to guess what to do to fix them\u003C\/strong\u003E.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EYou don\u2019t have time to understand what a function does or what a variable contains. The original developer may be on holiday or she may not be able to remember what that variable was about if its name doesn\u2019t help.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EA good structure helps too. If the software is easy to browse, errors are easier to find.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EA production manual is a good idea.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EI was managing a team whose goal was to design the production activities to be performed on a group of servers delivering virtual ISP services.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EI knew that a production manual was what we needed to ensure a smooth operation.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EEvery event was documented in the manual along with it\u2019s troubleshooting measures and the log of every case of occurrence.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIn many cases I have written such a high quality software that production was going on event-less. This is the case of my PLC software and the software I have written for Intel Corporation.\u003C\/p\u003E\r\n",
          "format": "basic_html",
          "processed": "\u003Cp\u003EWhen you are in production, you don\u2019t have much time to fix bugs. If you are slow, you lose money and people remember that your website didn\u2019t work and don\u2019t come back.\u003C\/p\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EYou don\u2019t have time to understand cryptic error messages or to guess what to do to fix them\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp\u003EYou don\u2019t have time to understand what a function does or what a variable contains. The original developer may be on holiday or she may not be able to remember what that variable was about if its name doesn\u2019t help.\u003C\/p\u003E\n\n\u003Cp\u003EA good structure helps too. If the software is easy to browse, errors are easier to find.\u003C\/p\u003E\n\n\u003Cp\u003EA production manual is a good idea.\u003C\/p\u003E\n\n\u003Cp\u003EI was managing a team whose goal was to design the production activities to be performed on a group of servers delivering virtual ISP services.\u003C\/p\u003E\n\n\u003Cp\u003EI knew that a production manual was what we needed to ensure a smooth operation.\u003C\/p\u003E\n\n\u003Cp\u003EEvery event was documented in the manual along with it\u2019s troubleshooting measures and the log of every case of occurrence.\u003C\/p\u003E\n\n\u003Cp\u003EIn many cases I have written such a high quality software that production was going on event-less. This is the case of my PLC software and the software I have written for Intel Corporation.\u003C\/p\u003E",
          "summary": ""
        }
      },
      "relationships": {
        "field_ems_topic": {
          "data": {
            "type": "taxonomy_term--ems_topic",
            "id": "5be1f4f5-8078-4558-b58c-838706976409"
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/e4c3234d-98ab-409b-be74-5d9ae2a9bd47\/relationships\/field_ems_topic",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/e4c3234d-98ab-409b-be74-5d9ae2a9bd47\/field_ems_topic"
          }
        },
        "field_image": {
          "data": {
            "type": "file--file",
            "id": "2c0db057-82e3-4b72-9750-e277c4e562e8",
            "meta": {
              "alt": "How do I make my application easy to manage in production?",
              "title": "",
              "width": 400,
              "height": 300
            }
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/e4c3234d-98ab-409b-be74-5d9ae2a9bd47\/relationships\/field_image",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/e4c3234d-98ab-409b-be74-5d9ae2a9bd47\/field_image"
          }
        }
      },
      "links": {
        "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/e4c3234d-98ab-409b-be74-5d9ae2a9bd47"
      }
    },
    {
      "type": "node--ems_article",
      "id": "9cc254fb-0210-4508-8e64-699f9c208006",
      "attributes": {
        "title": "How do I create my application?",
        "sticky": true,
        "body": {
          "value": "\u003Cp\u003EWhat if you ask for my help? I created applications for: IBM, Intel Corporation, the Olympus satellite project, major telecommunication and energy companies, industrial plants, Virtual ISPs, banks and credit card companies.\u003C\/p\u003E\r\n\r\n\u003Cp\u003ESure, keep in mind that the age of the requirements sculpted in stone has long gone.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EEven before the\u0026nbsp;\u003Ca href=\u0022http:\/\/agilemanifesto.org\/\u0022\u003Eagile manifesto\u003C\/a\u003E\u0026nbsp;I was changing, re-writing or even ignoring analysis documents written by world-renowned consulting firms.\u003C\/p\u003E\r\n\r\n\u003Cp\u003ENow you write a page of requirements and create a working prototype. That prototype will inspire you to make changes or add functions that you couldn\u2019t even think of when you were writing the requirements.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EGet inspired by\u0026nbsp;\u003Ca href=\u0022http:\/\/gettingreal.37signals.com\/\u0022\u003EGetting Real\u003C\/a\u003E\u0026nbsp;for your next application. There you find a modern way of making software.\u003C\/p\u003E\r\n\r\n\u003Cp\u003ESoftware creation is problem solving. When you solve a problem you end up with a sequence of steps to be followed to solve the problem. The programming language you use doesn\u2019t matter. What matters is something that matters every time you want to solve a problem. The sequence of steps has to be very clear and easy to understand.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIf I want to solve the problem of going to Paris, I may say:\u003C\/p\u003E\r\n\r\n\u003Col\u003E\r\n\t\u003Cli\u003Ego to the St. Pancreas railway station\u003C\/li\u003E\r\n\t\u003Cli\u003Etake the train\u003C\/li\u003E\r\n\u003C\/ol\u003E\r\n\r\n\u003Cp\u003EYou may say that something is missing, I need a ticket.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EAnd I reply that this is implied in the step no. 1. You will say that this can\u2019t be. Step no. 1 is only about going to the railway station. The purchase of a ticket can\u2019t be implied. You are right. Step no. 1 can\u2019t include something that is not explicitly declared otherwise it\u2019s a mess.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe problem solving sequence gets confusing and improvements and troubleshooting gets hard to do. Unfortunately this scenario happens very often when writing software.\u003C\/p\u003E\r\n",
          "format": "basic_html",
          "processed": "\u003Cp\u003EWhat if you ask for my help? I created applications for: IBM, Intel Corporation, the Olympus satellite project, major telecommunication and energy companies, industrial plants, Virtual ISPs, banks and credit card companies.\u003C\/p\u003E\n\n\u003Cp\u003ESure, keep in mind that the age of the requirements sculpted in stone has long gone.\u003C\/p\u003E\n\n\u003Cp\u003EEven before the\u00a0\u003Ca href=\u0022http:\/\/agilemanifesto.org\/\u0022\u003Eagile manifesto\u003C\/a\u003E\u00a0I was changing, re-writing or even ignoring analysis documents written by world-renowned consulting firms.\u003C\/p\u003E\n\n\u003Cp\u003ENow you write a page of requirements and create a working prototype. That prototype will inspire you to make changes or add functions that you couldn\u2019t even think of when you were writing the requirements.\u003C\/p\u003E\n\n\u003Cp\u003EGet inspired by\u00a0\u003Ca href=\u0022http:\/\/gettingreal.37signals.com\/\u0022\u003EGetting Real\u003C\/a\u003E\u00a0for your next application. There you find a modern way of making software.\u003C\/p\u003E\n\n\u003Cp\u003ESoftware creation is problem solving. When you solve a problem you end up with a sequence of steps to be followed to solve the problem. The programming language you use doesn\u2019t matter. What matters is something that matters every time you want to solve a problem. The sequence of steps has to be very clear and easy to understand.\u003C\/p\u003E\n\n\u003Cp\u003EIf I want to solve the problem of going to Paris, I may say:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003Ego to the St. Pancreas railway station\u003C\/li\u003E\n\t\u003Cli\u003Etake the train\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EYou may say that something is missing, I need a ticket.\u003C\/p\u003E\n\n\u003Cp\u003EAnd I reply that this is implied in the step no. 1. You will say that this can\u2019t be. Step no. 1 is only about going to the railway station. The purchase of a ticket can\u2019t be implied. You are right. Step no. 1 can\u2019t include something that is not explicitly declared otherwise it\u2019s a mess.\u003C\/p\u003E\n\n\u003Cp\u003EThe problem solving sequence gets confusing and improvements and troubleshooting gets hard to do. Unfortunately this scenario happens very often when writing software.\u003C\/p\u003E",
          "summary": ""
        }
      },
      "relationships": {
        "field_ems_topic": {
          "data": {
            "type": "taxonomy_term--ems_topic",
            "id": "5be1f4f5-8078-4558-b58c-838706976409"
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/9cc254fb-0210-4508-8e64-699f9c208006\/relationships\/field_ems_topic",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/9cc254fb-0210-4508-8e64-699f9c208006\/field_ems_topic"
          }
        },
        "field_image": {
          "data": {
            "type": "file--file",
            "id": "1b342a99-313f-4d25-8028-151d35f338ef",
            "meta": {
              "alt": "How do I create my application?",
              "title": "",
              "width": 400,
              "height": 327
            }
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/9cc254fb-0210-4508-8e64-699f9c208006\/relationships\/field_image",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/9cc254fb-0210-4508-8e64-699f9c208006\/field_image"
          }
        }
      },
      "links": {
        "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/9cc254fb-0210-4508-8e64-699f9c208006"
      }
    },
    {
      "type": "node--ems_article",
      "id": "205fb41f-3048-46d1-ad6a-2e3fab25f730",
      "attributes": {
        "title": "React",
        "sticky": true,
        "body": {
          "value": "\u003Cp\u003EReact is a JavaScript library that forces you to think in terms of components. This model of thinking fits user interfaces well. Depending on your background it might feel alien at first. You will have to think very carefully about the concept of state and where it belongs.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EBecause state management is a difficult problem, a variety of solutions have appeared. In this book, we\u0027ll start by managing state ourselves and then push it to a Flux implementation known as Alt. There are also implementations available for several other alternatives, such as Redux, MobX, and Cerebral.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EReact is pragmatic in the sense that it contains a set of escape hatches. If the React model doesn\u0027t work for you, it is still possible to revert back to something lower level. For instance, there are hooks that can be used to wrap older logic that relies on the DOM. This breaks the abstraction and ties your code to a specific environment, but sometimes that\u0027s the pragmatic thing to do.\u003C\/p\u003E\r\n",
          "format": "basic_html",
          "processed": "\u003Cp\u003EReact is a JavaScript library that forces you to think in terms of components. This model of thinking fits user interfaces well. Depending on your background it might feel alien at first. You will have to think very carefully about the concept of state and where it belongs.\u003C\/p\u003E\n\n\u003Cp\u003EBecause state management is a difficult problem, a variety of solutions have appeared. In this book, we\u0027ll start by managing state ourselves and then push it to a Flux implementation known as Alt. There are also implementations available for several other alternatives, such as Redux, MobX, and Cerebral.\u003C\/p\u003E\n\n\u003Cp\u003EReact is pragmatic in the sense that it contains a set of escape hatches. If the React model doesn\u0027t work for you, it is still possible to revert back to something lower level. For instance, there are hooks that can be used to wrap older logic that relies on the DOM. This breaks the abstraction and ties your code to a specific environment, but sometimes that\u0027s the pragmatic thing to do.\u003C\/p\u003E",
          "summary": ""
        }
      },
      "relationships": {
        "field_ems_topic": {
          "data": {
            "type": "taxonomy_term--ems_topic",
            "id": "f7d7ad62-0d02-4f1e-954b-3912adb939bc"
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/205fb41f-3048-46d1-ad6a-2e3fab25f730\/relationships\/field_ems_topic",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/205fb41f-3048-46d1-ad6a-2e3fab25f730\/field_ems_topic"
          }
        },
        "field_image": {
          "data": {
            "type": "file--file",
            "id": "b5e2ad23-3154-481a-a178-5eee1579dc2d",
            "meta": {
              "alt": "React",
              "title": "",
              "width": 391,
              "height": 377
            }
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/205fb41f-3048-46d1-ad6a-2e3fab25f730\/relationships\/field_image",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/205fb41f-3048-46d1-ad6a-2e3fab25f730\/field_image"
          }
        }
      },
      "links": {
        "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/205fb41f-3048-46d1-ad6a-2e3fab25f730"
      }
    },
    {
      "type": "node--ems_article",
      "id": "83f1711e-e47b-456e-990d-1ffa1840be33",
      "attributes": {
        "title": "HTML 5",
        "sticky": true,
        "body": {
          "value": "\u003Cp\u003EHTML5\u0026nbsp;is a markup language used for structuring and presenting content on the World Wide Web. It is the fifth and current major version of the HTML standard.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIt was published in October 2014 by the World Wide Web Consortium (W3C)[2][4] to improve the language with support for the latest multimedia, while keeping it both easily readable by humans and consistently understood by computers and devices such as web browsers, parsers, etc. HTML5 is intended to subsume not only HTML 4, but also XHTML 1 and DOM Level 2 HTML.[5]\u003C\/p\u003E\r\n\r\n\u003Cp\u003EHTML5 includes detailed processing models to encourage more interoperable implementations; it extends, improves and rationalizes the markup available for documents, and introduces markup and application programming interfaces (APIs) for complex web applications.[6] For the same reasons, HTML5 is also a candidate for cross-platform mobile applications, because it includes features designed with low-powered devices in mind.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EMany new syntactic features are included. To natively include and handle multimedia and graphical content, the new \u0026lt;video\u0026gt;, \u0026lt;audio\u0026gt; and \u0026lt;canvas\u0026gt; elements were added, and support for scalable vector graphics (SVG) content and MathML for mathematical formulas. To enrich the semantic content of documents, new page structure elements such as \u0026lt;main\u0026gt;, \u0026lt;section\u0026gt;, \u0026lt;article\u0026gt;, \u0026lt;header\u0026gt;, \u0026lt;footer\u0026gt;, \u0026lt;aside\u0026gt;, \u0026lt;nav\u0026gt; and \u0026lt;figure\u0026gt;, are added. New attributes are introduced, some elements and attributes have been removed, and others such as \u0026lt;a\u0026gt;, \u0026lt;cite\u0026gt; and \u0026lt;menu\u0026gt; have been changed, redefined or standardized.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThe APIs and Document Object Model (DOM) are now fundamental parts of the HTML5 specification[6] and HTML5 also better defines the processing for any invalid documents.[7]\u003C\/p\u003E\r\n",
          "format": "basic_html",
          "processed": "\u003Cp\u003EHTML5\u00a0is a markup language used for structuring and presenting content on the World Wide Web. It is the fifth and current major version of the HTML standard.\u003C\/p\u003E\n\n\u003Cp\u003EIt was published in October 2014 by the World Wide Web Consortium (W3C)[2][4] to improve the language with support for the latest multimedia, while keeping it both easily readable by humans and consistently understood by computers and devices such as web browsers, parsers, etc. HTML5 is intended to subsume not only HTML 4, but also XHTML 1 and DOM Level 2 HTML.[5]\u003C\/p\u003E\n\n\u003Cp\u003EHTML5 includes detailed processing models to encourage more interoperable implementations; it extends, improves and rationalizes the markup available for documents, and introduces markup and application programming interfaces (APIs) for complex web applications.[6] For the same reasons, HTML5 is also a candidate for cross-platform mobile applications, because it includes features designed with low-powered devices in mind.\u003C\/p\u003E\n\n\u003Cp\u003EMany new syntactic features are included. To natively include and handle multimedia and graphical content, the new \u0026lt;video\u0026gt;, \u0026lt;audio\u0026gt; and \u0026lt;canvas\u0026gt; elements were added, and support for scalable vector graphics (SVG) content and MathML for mathematical formulas. To enrich the semantic content of documents, new page structure elements such as \u0026lt;main\u0026gt;, \u0026lt;section\u0026gt;, \u0026lt;article\u0026gt;, \u0026lt;header\u0026gt;, \u0026lt;footer\u0026gt;, \u0026lt;aside\u0026gt;, \u0026lt;nav\u0026gt; and \u0026lt;figure\u0026gt;, are added. New attributes are introduced, some elements and attributes have been removed, and others such as \u0026lt;a\u0026gt;, \u0026lt;cite\u0026gt; and \u0026lt;menu\u0026gt; have been changed, redefined or standardized.\u003C\/p\u003E\n\n\u003Cp\u003EThe APIs and Document Object Model (DOM) are now fundamental parts of the HTML5 specification[6] and HTML5 also better defines the processing for any invalid documents.[7]\u003C\/p\u003E",
          "summary": ""
        }
      },
      "relationships": {
        "field_ems_topic": {
          "data": {
            "type": "taxonomy_term--ems_topic",
            "id": "f7d7ad62-0d02-4f1e-954b-3912adb939bc"
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/83f1711e-e47b-456e-990d-1ffa1840be33\/relationships\/field_ems_topic",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/83f1711e-e47b-456e-990d-1ffa1840be33\/field_ems_topic"
          }
        },
        "field_image": {
          "data": {
            "type": "file--file",
            "id": "a3c179a3-5998-430a-87c7-f3416c781de4",
            "meta": {
              "alt": "HTML5",
              "title": "",
              "width": 512,
              "height": 512
            }
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/83f1711e-e47b-456e-990d-1ffa1840be33\/relationships\/field_image",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/83f1711e-e47b-456e-990d-1ffa1840be33\/field_image"
          }
        }
      },
      "links": {
        "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/83f1711e-e47b-456e-990d-1ffa1840be33"
      }
    },
    {
      "type": "node--ems_article",
      "id": "73ad5828-c64a-46a4-8517-89d917991484",
      "attributes": {
        "title": "How do I make my application easy to troubleshoot?",
        "sticky": false,
        "body": {
          "value": "\u003Cp\u003EThis was my graduation thesis. I created a laser sensor which allowed a robot to determine the position of an object more accurately and avoid dropping it. It was based on the same technology used to make laser light shows. The program architecture was based on components.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EThis component architecture was what today is called object-oriented programming. You can benefit from it even if your programming language is not object-oriented.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EIt made the software much easier to troubleshoot and to expand.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EWorking for Intel Corporation, I structured the application so well that very few errors were found at testing time. Structure is everything to create an easy-to-troubleshoot application.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EI have written a lot of PLC software. You can\u2019t even test it but in production, when you have only 15 minutes to fix any error or the industrial plant has to be stopped.\u003C\/p\u003E\r\n\r\n\u003Cp\u003ESure I had to make the application easy to troubleshoot.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EWorking in Camberley, UK, to create a prototype and having only 2 months to make it, I had to give the prototype a good structure in order for it to be quickly built without renouncing to quality.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EI have worked for years in a production environment and I know what an application has to look like for it to easy to troubleshoot when you have stringent SLAs to respect.\u003C\/p\u003E\r\n\r\n\u003Cp\u003EStructure, documentation and good error handling make an application easy to troubleshoot and I have dealt with them many times.\u003C\/p\u003E\r\n",
          "format": "basic_html",
          "processed": "\u003Cp\u003EThis was my graduation thesis. I created a laser sensor which allowed a robot to determine the position of an object more accurately and avoid dropping it. It was based on the same technology used to make laser light shows. The program architecture was based on components.\u003C\/p\u003E\n\n\u003Cp\u003EThis component architecture was what today is called object-oriented programming. You can benefit from it even if your programming language is not object-oriented.\u003C\/p\u003E\n\n\u003Cp\u003EIt made the software much easier to troubleshoot and to expand.\u003C\/p\u003E\n\n\u003Cp\u003EWorking for Intel Corporation, I structured the application so well that very few errors were found at testing time. Structure is everything to create an easy-to-troubleshoot application.\u003C\/p\u003E\n\n\u003Cp\u003EI have written a lot of PLC software. You can\u2019t even test it but in production, when you have only 15 minutes to fix any error or the industrial plant has to be stopped.\u003C\/p\u003E\n\n\u003Cp\u003ESure I had to make the application easy to troubleshoot.\u003C\/p\u003E\n\n\u003Cp\u003EWorking in Camberley, UK, to create a prototype and having only 2 months to make it, I had to give the prototype a good structure in order for it to be quickly built without renouncing to quality.\u003C\/p\u003E\n\n\u003Cp\u003EI have worked for years in a production environment and I know what an application has to look like for it to easy to troubleshoot when you have stringent SLAs to respect.\u003C\/p\u003E\n\n\u003Cp\u003EStructure, documentation and good error handling make an application easy to troubleshoot and I have dealt with them many times.\u003C\/p\u003E",
          "summary": ""
        }
      },
      "relationships": {
        "field_ems_topic": {
          "data": {
            "type": "taxonomy_term--ems_topic",
            "id": "5be1f4f5-8078-4558-b58c-838706976409"
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/73ad5828-c64a-46a4-8517-89d917991484\/relationships\/field_ems_topic",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/73ad5828-c64a-46a4-8517-89d917991484\/field_ems_topic"
          }
        },
        "field_image": {
          "data": {
            "type": "file--file",
            "id": "62ff974a-9660-4990-a59d-a916dfd2d8fd",
            "meta": {
              "alt": "How do I make my application easy to troubleshoot?",
              "title": "",
              "width": 400,
              "height": 265
            }
          },
          "links": {
            "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/73ad5828-c64a-46a4-8517-89d917991484\/relationships\/field_image",
            "related": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/73ad5828-c64a-46a4-8517-89d917991484\/field_image"
          }
        }
      },
      "links": {
        "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article\/73ad5828-c64a-46a4-8517-89d917991484"
      }
    }
  ],
  "jsonapi": {
    "version": "1.0",
    "meta": {
      "links": {
        "self": "http:\/\/jsonapi.org\/format\/1.0\/"
      }
    }
  },
  "links": {
    "self": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article?fields%5Bnode--ems_article%5D=title%2Cbody%2Csticky%2Cfield_ems_topic%2Cfield_image\u0026page%5Blimit%5D=6\u0026page%5Boffset%5D=0\u0026q=%2Fjsonapi%2Fnode%2Fems_article",
    "next": "https:\/\/backend.emanuelesantanche.com\/jsonapi\/node\/ems_article?fields%5Bnode--ems_article%5D=title%2Cbody%2Csticky%2Cfield_ems_topic%2Cfield_image\u0026page%5Boffset%5D=6\u0026page%5Blimit%5D=6\u0026q=\/jsonapi\/node\/ems_article"
  }
}