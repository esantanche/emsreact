[
  {
    "nid": "90",
    "title": "PHP tutorial, how to make your code beautiful using photography composition rules",
    "body": "\u003Cp dir=\u0022ltr\u0022\u003EA PHP tutorial about how photography composition rules can help make PHP code easy and beautiful to read and more valuable.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThis is what I want to talk about in this article.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EBrowsing the web I have found an\u00a0\u003Ca href=\u0022http:\/\/www.photographymad.com\/pages\/view\/10-top-photography-composition-rules\u0022\u003Earticle\u003C\/a\u003E\u00a0that describes some rules that photographers use to make photos more beautiful.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI have asked myself if and how PHP coding can benefit from these rules as well.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThe result of my brainwork follows.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EArt helps art\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI have already talked about software creation as art in my article about\u00a0\u003Ca href=\u0022http:\/\/emanuelesantanche.com\/php-frameworks-how-to-choose\/\u0022\u003EPHP frameworks\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPhotography is art as well; how can it be of help to the art of software creation?\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIf you are a beginner photographer, if you follow some rules when you are composing a photo, you create more beautiful photos.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ETo compose a photo means to choose the point from where you will shoot the photo, which subjects to include, what to give prominence to and to make many other choices.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EWhen creating software, if we create beautiful software, we enjoy this beauty as we enjoy the beauty of a photo. Furthermore, our software will be more durable and valuable\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhile a photo is static, software is a living thing. It will benefit from its beauty because it will be easier to change and to adapt to the unavoidable changing of requirements.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ENow let\u2019s see how we can use rules borrowed from photography to make our code look better.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EThe rule of thirds\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIn photography this rule is about not putting the most important subject at the centre of the photo. We don\u2019t want our photo to look like a mugshot. We want to make the photo lighter by giving space to other subjects of minor importance.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWriting software we can do the same thing. Actually we do it all the time. We don\u2019t put all the important code in a single file.\u00a0\u003Cstrong\u003EWe balance the code among many files\u003C\/strong\u003E. Doing this our composition is lighter. It isn\u2019t burdened by the presence of a single heavy file full of critical code.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003ELeading Lines\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThe rule of thirds wasn\u2019t much of a surprise for me. When developing software we use the same rule all the time. The rule of leading lines, instead, has been a surprise because it has given me a new idea to use to make my code better.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhen we look at a photo, our eyes are naturally captured by lines. Placing lines differently in a photo, we can change how we view the photo. A photo will draw our look differently if the lines run from left to right or from top to bottom.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EHow do I see lines in PHP code? I see lines of execution. Let me explain.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhen we create a program, we aim to build a functionality. We imagine the software\u2019s user typing some information and getting the wanted result, so we hope.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWe imagine the user typing some typical information.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EBut a user might type atypical information as well. They might type a name where a number is required, and so on.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EOur execution line is disturbed by many exceptions and special cases\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThis way our look can\u2019t benefit from following the leading line of execution. There are branches and bushes all around.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EIt could be a good idea to highlight the main execution line using custom colours for syntax highlighting\u003C\/strong\u003E. Many\u00a0\u003Ca href=\u0022http:\/\/emanuelesantanche.com\/php-ide-comprehensive-facilities-for-php-programmers\/\u0022\u003EPHP IDEs\u003C\/a\u003E\u00a0allow customization of syntax highlighting.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWe could use lighter colours for the parts of code that disturb the main execution line.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003ESymmetry and Patterns\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPhotos portraying symmetrical objects or patterns can make for a very eye-catching composition.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EIn software we can introduce symmetry in our name conventions and in the organization of files\u003C\/strong\u003E. Patterns of code (we can call them templates as well) can be used to reduce building time and the probability of mistakes.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EUsing symmetry and patterns, code can be read and understood in less time.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EViewpoint\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThis is easy. Change the viewpoint and you change a photo dramatically.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EWe humans have this wonderful feature that we each see the world in his or her own way\u003C\/strong\u003E. When we want to standardise people, we destroy this diversity. It\u2019s a bit like destroying a tropical forest or making a rare species become extinct.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EOn the other hand, it\u2019s smarter to take advantage of this diversity. It can bring a richness of solutions and ideas.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EBackground\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESometimes you want to take a shot of a subject and you don\u2019t want the background to detract from it. Your photo would lack impact if the background is too busy.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhen writing a PHP script, it may happen that the most important step is blended among many other less important ones.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ETo prevent this busy background of steps from detracting from the main one,\u00a0\u003Cstrong\u003Eit\u2019s a good idea to merge the steps coming before the main one in a single \u201cpre\u201d function. The steps coming after can go into a \u201cpost\u201d function\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EFor instance, if you have to run a query against a database, the most important step is the query itself. So you can group all the preparatory steps in a function and, similarly, all the closing steps in a another function.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThis will highlight the main step, which is the query.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EDepth\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPhotos are two-dimensional. How do you convey a sense of depth using a two-dimensional medium?\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou include in your photo objects which are near you, at a medium distance and far away.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EYou use this idea when writing software by creating functions which break down a task in more and more detailed levels\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou write a function that calls three other functions which each call another three functions, and so on until you get to the lowest level of detail.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt may seem that to write a single function at greater length and in more detail may be better. Instead, it adds beauty, and reading easiness, to your code if you add depth to it.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EFraming\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EObjects such as trees, archways and holes create frames around a subject, thus creating a focused image.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EDeveloping PHP code, we have PHP frameworks. They create a frame around our code\u003C\/strong\u003E. They take care of basic functionalities and design choices so that we can focus on the high level functionalities we need to create.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003ECropping\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou crop a photo if you want to draw attention to a detail. You crop tight around it to prevent it from drowning in a sea of other subjects.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EIn your PHP code there might be details that you want to examine more closely now and then. You can tag them\u003C\/strong\u003E. I use the tag FIXME a lot. I have even defined a keyboard shortcut to insert it where I need it.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI use it to remind myself which parts of my code need more work.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou can define a tag and use it to mark all the code that needs to be changed to introduce or modify a functionality. Later, you make the changes and delete the tags.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EUsing a PHP IDE, you can define a custom syntax highlighting which you switch on when you want to examine code lines which have been given a tag.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ELet\u2019s call this \u201ccode cropping\u201d.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EExperimentation\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ERules are made to be broken in PHP code writing as well as in photography.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EA rule has to make sense for it to add beauty and value to your code. Don\u2019t apply them blindly otherwise you may end up doing more harm than good.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EConclusion\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThis experiment of borrowing creative practices from photography seems to have produced interesting results.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EThey will help to write more beautiful and valuable software\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI don\u2019t recommend using these techniques when writing a prototype. When your software still needs to find a final form, it\u2019s better to write prototypes to showcase basic functionalities.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EAt this stage of software creation we don\u2019t need to care about the beauty in our code. We want to create it fast and use it to stimulate the development of more complete and stable requirements.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESo, at this stage, our software doesn\u2019t need to be beautiful because that would be a waste. We will destroy this software once it has accomplished its function.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhen we have stable requirements, we can begin to create new software in a final form and then we need beautiful code because this software has to last and to be easily maintained.\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/photographer.jpg"
  },
  {
    "nid": "89",
    "title": "Php editor, an indispensable tool",
    "body": "\u003Cp dir=\u0022ltr\u0022\u003EA php editor is a must-have tool for a php developer. Even if you are a beginner you need something more than a standard text editor when you write your php scripts.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EA basic php editor offers many functionalities that help greatly and eliminate many distractions that make your creative efforts more difficult.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ELet\u2019s look at these basic functionalities.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ESyntax highlighting\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EEvery language keyword is highlighted in a different colour. You will see that the keywords: if, switch, else, return, case, are rendered in a colour different from the ones used for other parts of your script.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou will know at first glance which keywords are standard parts of the php language and which ones are variables, strings or constants.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EAuto-completion\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EJust type the first letters of a keyword and you will be presented with a list of the keywords beginning with those letters. After you choose a keyword from this list, the editor will show information about that keyword. If the keyword you chose is the name of a function, the editor will show a description of the function and its parameters.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ESnippets\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EJust type \u201cif\u201d followed by the tab key, or other standard key, and you get the brackets automatically. Or just type \u201ctable\u201d and you get the full structure of an html table.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EWizards\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPress a button and you will be guided through many dialogs that help you choose the parameters needed to write html, php or css constructs.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ESymbol browser\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou want to modify a function but you can\u2019t remember which file it is in. The symbol browser lists all your functions and takes you to where they are defined with just a click.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ESearch and replace in multiple files\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhat if you have to change a name or a symbol used in many files? It happens more often than you might imagine.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EJust tell the editor what you want to change and it will make the change in all the open files or even in an entire directory.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ELet\u2019s look at a few php editors.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EFree php editors, multi-platform\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ELet\u2019s begin with free php editors, free as in free beer.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThe following are also multi-platform. You can use them on Linux, Windows and Mac.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EGeany\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.geany.org\/\u0022\u003EGeany\u003C\/a\u003E\u00a0is a light editor, it\u2019s fast and it does everything we need.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt highlights syntax. It\u2019s possible to customise the colours used to highlight.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt auto-completes syntax keywords and shows the parameters to be given to a function. It doesn\u2019t show information about what a function is for.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESnippets are supported and customisable. There are no wizards to insert html or css. There is a symbol browser instead, and you get the powerful search-and-replace function extended to all open files.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI\u2019m writing about Geany here, on the php editor\u2019s page because it\u2019s so light that you can use it as your everyday text editor. At the same time\u00a0\u003Cstrong\u003Eit has functionalities that qualify it as a\u00a0\u003Ca href=\u0022http:\/\/emanuelesantanche.com\/php-ide-comprehensive-facilities-for-php-programmers\/\u0022\u003EPHP IDE\u003C\/a\u003E\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWith Geany you can check the syntax of your php scripts and you can debug them as well.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EBluefish\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/bluefish.openoffice.nl\/index.html\u0022\u003EBluefish\u003C\/a\u003E\u00a0has the\u00a0\u003Cstrong\u003Ewizards\u003C\/strong\u003E\u00a0that Geany lacks. I recommend Bluefish if you do a lot of html or css writing. Geany is better if you do more pure php scripting.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EBluefish features syntax highlighting and\u00a0\u003Cstrong\u003Eyou can customise the colours used to highlight more easily\u003C\/strong\u003E\u00a0than in Geany.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EBluefish\u2019s autocompletion is fully functional\u003C\/strong\u003E. It explains the function that you choose and its parameters. If you move your mouse over the name of a function, you get the description of it.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThere is snippet support via a plugin and there are many wizards that help with writing html, css and php code.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EThere is no symbol browser\u003C\/strong\u003E. Unlike Geany,\u00a0\u003Cstrong\u003EBluefish is a pure editor and hasn\u2019t any IDE functionalities\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EjEdit\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.jedit.org\/\u0022\u003EjEdit\u003C\/a\u003E\u00a0is Java based. If you like the look and feel of Java applications, jEdit is for you.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EAutocompletion\u003C\/strong\u003E\u00a0in jEdit has to be activated pressing CTRL+b, which is\u00a0\u003Cstrong\u003Enot so convenient\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESyntax is highlighted and colours are highly customisable.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EjEdit indents your code if it gets messed up\u003C\/strong\u003E. You have to configure this function a bit to make it work.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThere are loads of\u00a0\u003Cstrong\u003Eplugins\u003C\/strong\u003E\u00a0to implement a lot of functionalities. You can use snippets and even download them from a snippet repository.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhat about a symbol browser? You have to use a plugin named CtagsInterface which is a bit buggy.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EOn the other hand,\u00a0\u003Cstrong\u003Ethe search and replace function is great\u003C\/strong\u003E. It allows you to search and replace in all the open files and even in a directory.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThere are no wizards.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EKomodo Edit\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.activestate.com\/komodo-edit\u0022\u003EKomodo Edit\u003C\/a\u003E\u00a0is a younger brother of\u00a0\u003Ca href=\u0022http:\/\/www.activestate.com\/komodo-ide\u0022\u003EKomodo IDE\u003C\/a\u003E. While the latter is a full PHP IDE, the former\u00a0is a reduced version featuring editing functions only.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EKomodo Edit is multi-platform but not Java based. It\u2019s based instead on the same code used by Firefox.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt has customisable colour schemes and\u00a0\u003Cstrong\u003Every good auto completion\u003C\/strong\u003E\u00a0function. Syntax highlighting is easy to customise.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou can jump to the definition of a function when you find it called in your script. There isn\u2019t a symbol browser.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt\u2019s possible to search and replace a string in the current file, in all open files and in a directory.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EKomodo offers\u00a0\u003Cstrong\u003Esyntax check\u003C\/strong\u003E\u00a0performed in real-time.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThere are a lot of useful snippets.\u00a0\u003Cstrong\u003EKomodo is not as light as Geany\u003C\/strong\u003E.\u00a0Anyway, if you like it, you will find yourself at home if you choose Komodo IDE as your PHP IDE.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EFree php editors, Linux only\u003C\/h2\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EGphpedit\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.gphpedit.org\/\u0022\u003EGphpedit\u003C\/a\u003E\u00a0is even lighter than Geany, but it lacks many useful aspects.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou will find that Gphpedit and Geany are similar because the code they are based on is the same.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EGphpedit\u2019s search functionalities are very basic while auto-completion is good. It doesn\u2019t add parentheses and braces if you begin an if statement.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIf you have php installed, Gphpedit will check the syntax of your code.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThe symbol browser is the same as Geany. Snippets are not provided.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EGphpedit could be a bit richer\u003C\/strong\u003E\u00a0and focused on php support. It\u2019s light, but Geany is light too and richer.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EFree php editors, Windows only\u003C\/h2\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ENotepad++\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.notepad-plus-plus.org\/\u0022\u003ENotepad++\u003C\/a\u003E\u00a0lives in Windows only but it is based on the same Scintilla component used by Geany.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt offers customisable syntax highlighting.\u00a0\u003Cstrong\u003EThe customisation options will make the most exigent of developers happy\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ENotepad++ offers auto completion function with word completion, function completion and \u00a0function parameters hint.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThe interface is very customisable. When you have many open files, it may be not enough to have them open in different tabs, you may want to arrange the tabs according to your preferences.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou can search and replace in open files and even in directories.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThe symbol browser is called Function List. Snippets are managed through plugins.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003ENotepad++ is complete\u003C\/strong\u003E, only wizards are missing, but there are many other useful functionalities.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EDev-PHP Editor\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/devphp.sourceforge.net\/\u0022\u003EDev-PHP\u003C\/a\u003E\u00a0comes in two versions, editor and IDE.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EHere I\u2019m going to review the editor version of Dev-PHP. It features configurable syntax highlighting.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIts auto completion function offers completion of function name and parameters hints. Wizards produce the code needed for loops or other constructs. Just fill in the variable parts. Code snippets are customisable.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThere is a symbol browser that helps to find your functions quickly.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt\u2019s possible to search in all the open files and in directories.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EDev-PHP is more than an editor, it has\u00a0\u003Cstrong\u003EIDE functionalities\u003C\/strong\u003E\u00a0and it\u2019s quite complete.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003ECommercial php editors, Windows only\u003C\/h2\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EDzSoft PHP Editor\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.dzsoft.com\/php-editor.html\u0022\u003EDzSoft PHP Editor\u003C\/a\u003E\u00a0is actually a full IDE. You can run and syntax-check your code.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EAs editor, it features a\u00a0\u003Cstrong\u003Every good symbol browser\u003C\/strong\u003E\u00a0similar to the one offered by Geany. It\u2019s also possible to jump to a function\u2019s definition from a line where it is called.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESyntax highlighting is present and customisable.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EAuto-completion of function names and parameters hints are provided. However\u00a0\u003Cstrong\u003Eto complete a function\u2019s name you have to press ctrl+enter and choose the function from a list\u003C\/strong\u003E. You can type quickly the first 3-4 letters of the function\u2019s name and the editor will find the function. You don\u2019t get a description of the function or its parameters.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThere is the interesting possibility of choosing among\u00a0\u003Cstrong\u003Emany shortcut schemes\u003C\/strong\u003E. This is useful if you are accustomed to the shortcuts used in another editor.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou can quickly insert snippets of code: here they are called code templates.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt\u2019s possible to search all files in a directory, but there is no replace. Search and replace are fully supported only for the current file.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EConclusion\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPersonally, I prefer to stick to\u00a0\u003Cstrong\u003Emulti platform php editors\u003C\/strong\u003E\u00a0because you never know if you will have to work on a Windows machine. Naturally I use Linux and LAMP platforms, but it may happen that I need to work on Windows machines and I want to use the same editor I use on Linux.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI don\u2019t like the look and feel of Java applications and I prefer not to pay if there isn\u2019t a real need.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESo, I would have to choose between Geany, Bluefish and Komodo Edit. The latter isn\u2019t as light as Geany.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI would use Bluefish for html\/css work and Geany for PHP. Geany is also IDE and it may offer enough functions to obviate the need to learn another IDE.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIf you work a lot on Windows computers, you can consider the Windows-only PHP editors I have reviewed above.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI would choose Notepad++ if I want a pure php editor.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIf you want a PHP IDE running under Windows only, use Dev-PHP Editor. DzSoft PHP Editor\u2019s autocomplete function isn\u2019t so good\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/PHP_Editor.jpg"
  },
  {
    "nid": "88",
    "title": "PHP IDE, comprehensive facilities for PHP programmers",
    "body": "\u003Cp dir=\u0022ltr\u0022\u003EA PHP IDE (\u003Ca href=\u0022http:\/\/en.wikipedia.org\/wiki\/Integrated_development_environment\u0022\u003EIntegrated Development Environment\u003C\/a\u003E) is a program which integrates many functionalities which help developers create quality code more quickly.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI have reviewed many\u00a0\u003Ca href=\u0022http:\/\/emanuelesantanche.com\/php-editor-an-indispensable-tool\/\u0022\u003EPHP Editors\u003C\/a\u003E\u00a0and explained why they are indispensable tools when creating PHP code.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPHP Editors offer auto completion, syntax highlighting and symbol browsing. Some of them offer wizards that help with writing common code constructs.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPHP IDEs take these functionalities to the next level and add more interesting ones.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EFirst, I will describe these functionalities. Later, I\u2019ll see how these functionalities are implemented in some PHP IDEs.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ESyntax checker\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EA good PHP IDE has to check your code\u2019s syntax by just pressing a button or, better, in real time. It\u2019s better if this happens automatically, without needing to configure it.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EDebugger\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EA debugger executes your code showing the result of its execution alongside the code itself. Obviously you can slow down the execution and stop it to take time to inspect variables and execution flow. The best PHP IDEs have an integrated debugger needing little set-up.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EVersioning System\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EGenerally, a PHP file is edited by one developer only. Sometimes two or more developers need to edit the same file. A versioning system makes this possible, avoiding conflicts or incongruent versions of the file. Such a system also keeps trace of every change made to a file along with its reason. This helps to solve problems caused by changes.\u00a0\u003Cstrong\u003EA good PHP IDE supports many versioning systems without needing to install plugins or additional software\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ERefactoring\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EA developer has to make naming choices continuously. She has to give a name to variables, functions, files, classes, and so on. It may happen that some choices are revealed to be poor, conflicting or unclear.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ETo remedy these problems is not simply an aesthetic pastime. A variable whose name has nothing to do with its content, can cause misunderstandings, mistakes and loss of time.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPHP IDEs offer functionalities, which go under the name of refactoring, that globally change names to more meaningful ones. Attention has to be paid not to alter a code\u2019s behaviour.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ERefactoring is not only about changing names. More advanced PHP IDEs have more sophisticated refactoring functionalities meant to\u00a0\u003Cstrong\u003Eimprove code quality without altering its working\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EPHPdoc\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIf you write comments about functions following the PHPdoc standard, a tool named phpDocumentor will collect all the comments you have written and make an html documentation which is easy to navigate.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EWhen you change a function, just change the comments about it and the documentation will be changed accordingly and automatically\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EEvery PHP project should have at least this sort of documentation, and a PHP IDE should support this.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EPHPUnit\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThis is less important. It\u2019s needed if you do test-driven development. This means that first you define a test which a piece of code has to pass to be declared functional, and then you write that code. PHPUnit is software which you have to install and which your PHP IDEs has to seamlessly interface.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EIntegration with frameworks\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIf a PHP IDE somehow integrates with one or more PHP frameworks, it\u2019s a good plus.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ENow I\u2019m going to review some PHP IDEs. They all will be\u00a0\u003Cstrong\u003Emultiplatform\u003C\/strong\u003E.\u00a0\u003Cstrong\u003EYou don\u2019t want to learn another PHP IDE if this means that you have to change platform\u003C\/strong\u003E. PHP IDEs need quite a lot of time to learn.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EGeany\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI\u2019ve reviewed\u00a0\u003Ca href=\u0022http:\/\/www.geany.org\/\u0022\u003EGeany\u003C\/a\u003E\u00a0as a PHP Editor. It has a few IDE functionalities as well.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIf you install the php interpreter on your computer, Geany will check the syntax of your code. Not in real time.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EUsing a plugin, Geany will interface your versioning system. You can interface Geany to\u00a0\u003Ca href=\u0022http:\/\/en.wikipedia.org\/wiki\/Apache_Subversion\u0022\u003ESubversion\u003C\/a\u003E\u00a0(also named SVN).\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EUnfortunately Geany doesn\u2019t work with xdebug or other php debugger. To debug your code you have to use echo, var_dump or similar commands. However, this way to debug php code is perfectly fine for small and medium projects.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThere is no integration with frameworks and forget about PHPUnit.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EGeany is very light and good for small projects\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ENetbeans\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022https:\/\/netbeans.org\/\u0022\u003ENetbeans\u003C\/a\u003E\u00a0is a java application.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhen I started it, I cringed when I saw the fonts it used.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EHappily, I found that I could fix it.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EExecuting this command:\u003C\/p\u003E\n\n\u003Cblockquote\u003E\n\u003Cp dir=\u0022ltr\u0022\u003Eexport _JAVA_OPTIONS=\u201d-Dawt.useSystemAAFontSettings=on -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel\u201d\u003C\/p\u003E\n\u003C\/blockquote\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EBefore running Netbeans, I instructed Java to use system fonts instead of its own. I also set the default look-and-feel to GTK, which looks much better than the standard one.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EDoing this, Netbeans\u2019 look-and-feel is acceptable. You can enjoy the functionalities and forget about the look-and-feel.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003ENetbeans checks your syntax in real time\u003C\/strong\u003E\u00a0and without needing to configure anything. It gives you abundant hints about mistakes and keywords.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ENetbeans interfaces with the well-known, and widely-used, debugger Xdebug. You have just to do some configuration.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003ESupport for versioning systems is integrated\u003C\/strong\u003E. Subversion, CVS and Mercurial are the versioning systems used.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003ERefactoring is a menu item\u003C\/strong\u003E. Ready to use straight out of the box.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhat about PHPdoc? Just type \u201c\/**\u201d and hit Enter precisely before a function\u2019s definition. Netbeans will create a PHPdoc compliant comment including the description of the function\u2019s parameters. This is great.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPHPUnit is supported.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ENetbeans will help you write code for these PHP frameworks: Zend, CakePHP, Yii, Symfony2, FuelPHP. Just install the specific plugin.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EEclipse helios for php developers\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.eclipse.org\/downloads\/packages\/eclipse-php-developers\/heliosr\u0022\u003EEclipse\u003C\/a\u003E\u00a0is the base for many other PHP IDEs. Here I\u2019ll review the version of Eclipse named Helios and customised for PHP developers.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EEclipse checks your syntax automatically in real time and nothing needs to be configured.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EXdebug and Zend debugger are supported. The latter is very good.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EYou can interface with a SVN repository by using a plugin named Subeclipse\u003C\/strong\u003E\u00a0that you find in the menu item \u201cHelp -\u0026gt; Eclipse Marketplace\u201d.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EA couple of refactoring functions are offered via a menu item named Refactoring. Netbeans has more of them.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhen you type \u201c\/**\u201d and hit enter, the same miracle as with Netbeans occurs. You get a skeleton phpdoc comment with the parameters of your function. Just do it before a function\u2019s definition.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPHPUnit is supported and needs some configuration as it happens in Netbeans. This is expected as PHPUnit is an external product.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EZend Framework is based on Eclipse and you can install software that enables Eclipse to create Zend projects.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWith some dirty tricks you can have at least autocompletion for the most common functions of any framework.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EAptana Studio 3\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.aptana.org\/\u0022\u003EAptana Studio\u003C\/a\u003E\u00a0is for\u00a0\u003Cstrong\u003EAjax applications\u003C\/strong\u003E. It\u2019s a son of Eclipse and it\u2019s fully customised to help build Ajax applications.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESo, you find\u00a0\u003Cstrong\u003Egreat support for Javascript\u003C\/strong\u003E. There is even an integrated debugger for Javascript.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EAptana isn\u2019t only Javascript. It supports also HTML5, CSS3, Ruby, Rails, PHP and Python.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThere is no refactoring, PHPUnit and PHPDoc are supported. You can debug php code using the usual Xdebug if you install and configure it.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EPHPStorm\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.jetbrains.com\/phpstorm\/\u0022\u003EPHPStorm\u003C\/a\u003E\u00a0is a commercial product.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EDebugging for Javascript and PHP are integrated. No need to install anything.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EVersioning is well-supported. Many Version Control Systems are supported including Subversion, Mercurial, Git, Perforce, CVS, and TFS.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESyntax checking is quite advanced and there are no problems with PHPUnit and PHPDoc.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EEven frameworks are supported out-of-the-box. There is integrated support for Symfony2, Yii and Zend.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003ERefactoring functions are way more sophisticated than the ones featured by Netbeans or Eclipse\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EBe sure to run PHPStorm on a very powerful computer.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EKomodo IDE\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022https:\/\/www.activestate.com\/komodo-ide\u0022\u003EKomodo IDE\u003C\/a\u003E\u00a0is another commercial product. I have reviewed Komodo Edit, the free editor that is a simplified version of Komodo IDE.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EKomodo IDE shines for its debugging capabilities\u003C\/strong\u003E. You can even see inside what is transmitted between client and server via the http protocol! If there is no encryption you can see passwords travelling from your PC to the server!\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt supports not only the php language, but also javascript, css and html that are all needed to build web applications.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIncredibly,\u00a0\u003Cstrong\u003Erefactoring functions are missing\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EZend Studio\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.zend.com\/products\/studio\/\u0022\u003EZend Studio\u003C\/a\u003E\u00a0is as elephant-like as Zend and both are commercial products.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EZend Studio offers integrated, out-of-the-box debugging facilities for PHP and Javascript.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESyntax highlighting and code auto completion are good at least for PHP and Javascript. They could be improved for html and css. There is real-time syntax checking.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EObviously Zend Studio integrates very well with Zend\u003C\/strong\u003E. I would definitely use Zend Studio for a Zend project.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ERefactoring is quite good and support for PHPdoc and PHPUnit is provided.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou can use your favourite Versioning System because Zend Studio will likely support it without needing plugins.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ECode Lobster\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EUPDATE\u003C\/strong\u003E: Just an additional review about CodeLobster\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.codelobster.com\/\u0022\u003ECodeLobster\u003C\/a\u003E PHP Edition is a free portable IDE primarily intended for creating and editing PHP, HTML, CSS, JavaScript files. It supports Drupal CMS, Joomla CMS, Smarty template engine, Twig, JQuery library, CodeIgniter framework, CakePHP framework, Symfony framework, Laravel framework, Phalcon framework, Yii framework and WordPress blogging platform. It includes PHP debugger, dynamic help, advanced autocomplete for all languages and frameworks and HTML\/CSS inspector like FireBug has.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EConclusion\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPHP IDEs need time to learn. They are more complex than PHP editors and offer more sophisticated functions.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EFor small projects\u00a0\u003Cstrong\u003EGeany\u003C\/strong\u003E\u00a0is good. It\u2019s light and has a neat interface.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003ENetbeans\u003C\/strong\u003E\u00a0is better when projects get bigger and more complex. It has many functions ready to use without annoying hassle.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI would use\u00a0\u003Cstrong\u003EEclipse helios for php developers\u003C\/strong\u003E\u00a0if I needed a plugin to solve a particular problem. Eclipse has more than 1,000 plugins. I guess that I\u2019ll find something to suit my needs.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EAptana Studio\u003C\/strong\u003E\u00a0is good if you develop Ajax applications even if you have to renounce some functions.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EPHPStorm\u003C\/strong\u003E\u00a0is an interesting product. It\u2019s easy to use and offers a lot of tools without needing any strange configurations or installation procedures. Debuggers are integrated and this is a very good thing.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EKomodo IDE\u003C\/strong\u003E\u00a0should be considered if you need strong debugging tools.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EZend Studio\u003C\/strong\u003E\u00a0is the elephant. Use it if you have to develop using Zend framework.\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/php-ide.jpg"
  },
  {
    "nid": "87",
    "title": "Php frameworks, how to choose",
    "body": "\u003Cp dir=\u0022ltr\u0022\u003EPhp frameworks are tools that it\u2019s common to find in a developer\u2019s studio.\u003C\/p\u003E\n\n\u003Cp\u003EArtists make use of tools to forge their artistic creations. Php developers are artists creating php software and php frameworks are some of their tools.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EDoes a php developer need php frameworks in the same way as a painter needs pigments?\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ENot exactly. You can create software without frameworks. If you create clean and well-designed software, you can do without frameworks.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhile there is no need to explain why a painter needs pigments, there is a need to explain why developers use frameworks.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EThe process of the artistic creation of software\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EA team of php developers is like an\u00a0\u003Ca href=\u0022http:\/\/en.wikipedia.org\/wiki\/Artist_collective\u0022\u003Eartist collective\u003C\/a\u003E. A group of artists working together to create an artwork.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EArtistic creations have some characteristics that are common to every form of art.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EDurability\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EWe want to enjoy an artistic creation as long as possible\u003C\/strong\u003E. Even if it isn\u2019t a masterpiece, it\u2019s always a proof of human creativity.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EThis is why we need documentation\u003C\/strong\u003E. Even for the restoration of a painting documentation would be great. Imagine if Van Gogh had left detailed documentation about his painting techniques, the pigments he used and the materials.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt would be much easier to restore his paintings so that future generations can enjoy them. Unfortunately, that documentation has to be recreated by the hard work of investigation.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESoftware is artwork that isn\u2019t static. It\u2019s a collection of instructions by which a computer transforms information to serve a purpose.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIts durability is more difficult to protect.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ESoftware isn\u2019t prone to wear and tear like a painting, but it has to be easy to change and maintain because changes in hardware or other software can easily make it stop working or become no longer useful.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt can also happen that software has to change if it is to continue to serve its purpose.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ECertainly software that no longer works or that works but is no longer useful should stay in museums like any other human artwork.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EBut software is made to work and we enjoy it more if it works and is useful.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThis is why documentation is so important when creating software.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003EThere is no durability for software without documentation.\u003C\/strong\u003E\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ECollaboration\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EMany artworks need the collaboration of many artists to be created.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPhp software is no exception. Large php applications are created by teams of developers.\u00a0\u003Cstrong\u003EThere is a need for organization and collaboration if a large php application has to be built successfully.\u003C\/strong\u003E\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003EStructure\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ECan\u2019t we write just a single long php script? Yes, we can. But how will many developers collaborate? Will they edit the script at the same time? It won\u2019t work. We need to divide the software into many files and have each file assigned to a different developer. Two developers can\u2019t work on the same file.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EStructure also means that we need to know precisely what each file is for. This helps developers with their creative efforts.\u00a0\u003Cstrong\u003EEvery part of the software can be created successfully if the role of each of them is well-defined.\u003C\/strong\u003E\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt\u2019s like an orchestra. Every musician has to know what the other musicians are going to play in order for the orchestra to give life to a symphony.\u003C\/p\u003E\n\n\u003Ch3 dir=\u0022ltr\u0022\u003ETricks of the trade\u003C\/h3\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EEvery art has its tricks of the trade. It\u2019s true that creativity longs for novelty, but why reinvent the wheel? Before experimenting with new sounds when creating music it may be a good idea to have a look at existing ones.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIn the same way, before creating new software to perform a task it\u2019s good to see if this has already been done.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Cstrong\u003ETo use existing code to perform a task reduces errors and helps other developers\u003C\/strong\u003E\u00a0deal with your code if they are familiar with the code you used for that task.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EHow php frameworks help with the process of the artistic creation of software\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EPhp frameworks help developers to:\u003C\/p\u003E\n\n\u003Cul\u003E\u003Cli\u003Eimprove the durability of their artworks (programs)\u003C\/li\u003E\n\t\u003Cli\u003Ecollaborate with other developers\u003C\/li\u003E\n\t\u003Cli\u003Egive a structure to their code so that they \u201cknow what the other musicians are playing\u201d\u003C\/li\u003E\n\t\u003Cli\u003Etake advantage of the \u201ctricks of the trade\u201d that other developers created\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cp dir=\u0022ltr\u0022\u003ELet\u2019s have a look to a few of them.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003ECodeIgniter\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/ellislab.com\/codeigniter\u0022\u003ECodeIgniter\u003C\/a\u003E\u00a0is light and fast. It\u2019s easy to configure and learn. It has a rich set of ready-to-use functions that save you time.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt\u2019s flexible. You aren\u2019t forced into strict rules. This may be seen as a minus point, but CodeIgniter is mainly used for small-medium applications so lack of structure is less of a problem.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt has a large community that helps.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ECodeIgniter is the base for a CMS (Content Management System) called ExpressionEngine. It\u2019s software similar to the well-known WordPress.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EThis is why it\u2019s particularly suitable for creating CMSs.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003ECakePHP\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/cakephp.org\/\u0022\u003ECakePHP\u003C\/a\u003E\u00a0will look familiar to developers who used Ruby on Rails. It\u2019s a php framework simple enough for beginners but powerful as well.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt uses quite strict conventions that help to improve clarity and make development easier. On the other hand, these strict conventions may not suit your needs for flexibility.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ECakePHP is good for rapid prototyping and comes with a lot of features to help with implementing common tasks.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003ELaravel\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/laravel.com\/\u0022\u003ELaravel\u003C\/a\u003E\u00a0is the php framework for web artisans. I like this. I agree, software development is craftsmanship.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EWhat strikes one about Laravel is its elegance. I wouldn\u2019t recommend this php framework to a beginner, but it\u2019s perfect if you want to go to the next level. In particular Laravel is great if you come from CodeIgniter.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ELaravel is more complex and powerful than CodeIgniter. It features code originating from more complex php frameworks and made easier.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EYiiFramework\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.yiiframework.com\/\u0022\u003EYiiFramework\u003C\/a\u003E\u00a0is a newcomer. It focuses on performance. It requires a lot of command line work that makes it less suitable for beginners.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt\u2019s known for being the best choice if you want to develop social applications.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EDon\u2019t expect complexity and esoteric features. YiiFramework is newer than other php frameworks, so expect a less developed community.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EFuelPHP\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/fuelphp.com\/\u0022\u003EFuelPHP\u003C\/a\u003E\u00a0is another newcomer. You can learn HMVC by using it. HMVC is an evolution of MVC and it isn\u2019t for beginners.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EFuelPHP makes use of command line utilities like YiiFramework. Its functionalities are rich but don\u2019t expect the complexity of bigger php frameworks.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EAs with any other newcomer in the php frameworks arena, its community needs time to grow.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EDooPHP\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/www.doophp.com\/\u0022\u003EDooPHP\u003C\/a\u003E\u00a0fits into the light-and-fast category. It is easy to learn and use, but it is best suited for intermediate developers because it can lack documentation and community support.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EKohana\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/kohanaframework.org\/\u0022\u003EKohana\u003C\/a\u003E\u00a0follows the HMVC pattern. As I have already pointed out this is not for beginners.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EAdd to this insufficient documentation and you know that you are better off building your muscles with some easier php framework.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EKohana too is in the light-and-fast category, but this doesn\u2019t mean that it isn\u2019t powerful.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EZend\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ELet\u2019s pass to the elephants of the category. And I mean it literally since Zend\u2019s logo is an elephant.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EYou use\u00a0\u003Ca href=\u0022http:\/\/framework.zend.com\/\u0022\u003EZend\u003C\/a\u003E\u00a0only for huge applications that justify the complexity of Zend.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ETo use Zend for a small-medium application is like using a sledgehammer to crack a nut.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EJust have a look at their website and you will find a rich gallery of big names.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EAnticipate devoting a long time to learning it.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EZend has been created by the creators of PHP itself, so it can be a good place to learn PHP.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003ESymfony\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003E\u003Ca href=\u0022http:\/\/symfony.com\/\u0022\u003ESymfony\u003C\/a\u003E\u00a0is an old php framework and it\u2019s one of the big guys together with Zend.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003ELike Zend, Symfony is used for big applications that have to fit enterprise requirements.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EIt\u2019s not for beginners, but it has a large community so help is readily available. There is also a rich collection of tutorials on their website.\u003C\/p\u003E\n\n\u003Ch2 dir=\u0022ltr\u0022\u003EConclusion\u003C\/h2\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EI know that a few years in a corporation can kill the artist in the most creative of developers. They would make Van Gogh paint using a printing press.\u003C\/p\u003E\n\n\u003Cp dir=\u0022ltr\u0022\u003EHowever, there are alternatives. In any case,\u00a0\u003Cstrong\u003Ephp frameworks are one of the most important tools to consider when setting up your workshop\u003C\/strong\u003E.\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Php_frameworks.jpg"
  },
  {
    "nid": "86",
    "title": "Bounce processing, when SMTP server doesn\u2019t return bounces properly",
    "body": "\u003Ch2\u003EWhat bounce processing is\u003C\/h2\u003E\n\n\u003Cp\u003EWhen you send an email, it\u2019s possible that it\u2019s returned to you because of technical problems or mistakes made when writing the email.\u003C\/p\u003E\n\n\u003Cp\u003EOne of these mistakes may be that the recipient\u2019s email address is wrong.\u003C\/p\u003E\n\n\u003Ch2\u003E\u003Cspan\u003ECRM sending mass emails\u003C\/span\u003E\u003C\/h2\u003E\n\n\u003Cp\u003EMany CRMs, Customer Relationship Management system, have the capability of sending mass mailing.\u003C\/p\u003E\n\n\u003Cp\u003EThey can send the same newsletter to hundreds or thousands of recipients.\u003C\/p\u003E\n\n\u003Ch2\u003E\u003Cspan\u003ECRM processing bounces\u003C\/span\u003E\u003C\/h2\u003E\n\n\u003Cp\u003EIf an email is returned because of any problem, the CRM will process it.\u003C\/p\u003E\n\n\u003Cp\u003EIf an email is returned because the email address of the recipient is wrong, the CRM will put the contact on hold.\u003C\/p\u003E\n\n\u003Ch2\u003E\u003Cspan\u003ECiviCRM and bounce processing\u003C\/span\u003E\u003C\/h2\u003E\n\n\u003Cp\u003EI\u2019m using CiviCRM as CRM. When I send a mailing to many contacts, CiviCRM sets the \u201cReturn-Path\u201d header in the email to be something like: return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com.\u003C\/p\u003E\n\n\u003Cp\u003EWhen an email is returned because of errors, it should be sent to return@emanuelesantanche.com.\u003C\/p\u003E\n\n\u003Cp\u003EThe additional part b.19.5.9c232c48e0ba219a in the email address will tell CiviCRM which mailing and contact the original email was about.\u003C\/p\u003E\n\n\u003Cp\u003EBy using this information, CiviCRM will put the contact on hold, sometimes immediately, sometimes after a few failures occurred.\u003C\/p\u003E\n\n\u003Ch2\u003E\u003Cspan\u003ESMTP server not returning bounces correctly\u003C\/span\u003E\u003C\/h2\u003E\n\n\u003Cp\u003EIt happens that the SMTP server I\u2019m using, and many others, don\u2019t process bounces properly.\u003C\/p\u003E\n\n\u003Cp\u003EThey should send the failure message to return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com and the email should show up in the return@emanuelesantanche.com mailbox.\u003C\/p\u003E\n\n\u003Cp\u003ECiviCRM should have nothing else to do than check the recipient, return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com, and do its processing.\u003C\/p\u003E\n\n\u003Cp\u003EInstead, the SMTP server sends the email back to where it was from, emanuele@emanuelesantanche.com.\u003C\/p\u003E\n\n\u003Cp\u003EIf CiviCRM checks the recipient, it doesn\u2019t find the information it needs to process the bounce.\u003C\/p\u003E\n\n\u003Ch2\u003E\u003Cspan\u003EScanning the entire email\u2019s body\u003C\/span\u003E\u003C\/h2\u003E\n\n\u003Cp\u003EThe solution is to scan the entire body of the returned email because somewhere there will be written that address CiviCRM needs.\u003C\/p\u003E\n\n\u003Cp\u003ECiviCRM uses a regular expression like:\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\n\u003C\/p\u003E\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E\u0027\/Return-Path: \u0027\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003Epreg_quote\u003C\/span\u003E\u003Cspan\u003E(\u003C\/span\u003E\u003Cspan\u003E$dao\u003C\/span\u003E\u003Cspan\u003E-\u0026amp;\u003C\/span\u003Egt\u003Cspan\u003E;\u003C\/span\u003Elocalpart\u003Cspan\u003E)\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003E\u0027(b)\u0027\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003E$twoDigitString\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003E\u0027([0-9a-f]{16})@\u0027\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003Epreg_quote\u003C\/span\u003E\u003Cspan\u003E(\u003C\/span\u003E\u003Cspan\u003E$dao\u003C\/span\u003E\u003Cspan\u003E-\u0026amp;\u003C\/span\u003Egt\u003Cspan\u003E;\u003C\/span\u003Edomain\u003Cspan\u003E)\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003E\u0027\/\u0027\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003ELet\u2019s say that the returned email contains the headers of the original email:\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\n\u003C\/p\u003E\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003EReturn-Path:return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EReceived:from crm.emanuelesantanche.com (cpc19-finc14-2-0-cust228.4-2.cable.virginm.net [82.28.208.229]) by mx.zohomail.com\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Ewith SMTPS id 1444752405240749.4338448238343; Tue, 13 Oct 2015 09:06:45 -0700 (PDT)\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EDate:Tue, 13 Oct 2015 17:06:44 +0100\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThe regular expression above will find the line:\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\n\u003C\/p\u003E\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003EReturn-Path:return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003Eand CiviCRM will process the bounce correctly.\u003C\/p\u003E\n\n\u003Ch2\u003E\u003Cspan\u003EProblem solved?\u003C\/span\u003E\u003C\/h2\u003E\n\n\u003Cp\u003EYes, you got it, the regular expression above won\u2019t find the line with the return path because it looks for a space that is missing.\u003C\/p\u003E\n\n\u003Cp\u003EIt should be:\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\n\u003C\/p\u003E\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u0027\/Return-Path:\u0027 . preg_quote($dao-\u0026amp;gt;localpart) . \u0027(b)\u0027 . $twoDigitString . \u0027([0-9a-f]{16})@\u0027 . preg_quote($dao-\u0026amp;gt;domain) . \u0027\/\u0027\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003ENote the space after \u2018Return-Path:\u2019, I removed it.\u003C\/p\u003E\n\n\u003Cp\u003ENow the regular expression will match.\u003C\/p\u003E\n\n\u003Ch2\u003E\u003Cspan\u003EFixing CiviCRM code\u003C\/span\u003E\u003C\/h2\u003E\n\n\u003Cp\u003EI had to fix CiviCRM code for the regular expression to work correctly.\u003C\/p\u003E\n\n\u003Cp\u003EI changed this php file: \/sites\/all\/modules\/civicrm\/CRM\/Utils\/Mail\/EmailProcessor.php\u003C\/p\u003E\n\n\u003Cp\u003EThis is the change:\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\n\u003C\/p\u003E\u003Col start=\u0022170\u0022\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ a tighter regex for finding bounce info in soft bounces\u2019 mail bodies\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ EMS 2015-10-15 fixing return path regex\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/$rpRegex = \u0027\/Return-Path: \u0027 . preg_quote($dao-\u0026amp;gt;localpart) . \u0027(b)\u0027 . $twoDigitString . \u0027([0-9a-f]{16})@\u0027 . preg_quote($dao-\u0026amp;gt;domain) . \u0027\/\u0027;\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E$rpRegex\u003C\/span\u003E \u003Cspan\u003E=\u003C\/span\u003E \u003Cspan\u003E\u0027\/Return-Path:\\s*\u0027\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003Epreg_quote\u003C\/span\u003E\u003Cspan\u003E(\u003C\/span\u003E\u003Cspan\u003E$dao\u003C\/span\u003E\u003Cspan\u003E-\u0026amp;\u003C\/span\u003Egt\u003Cspan\u003E;\u003C\/span\u003Elocalpart\u003Cspan\u003E)\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003E\u0027(b)\u0027\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003E$twoDigitString\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003E\u0027([0-9a-f]{16})@\u0027\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003Epreg_quote\u003C\/span\u003E\u003Cspan\u003E(\u003C\/span\u003E\u003Cspan\u003E$dao\u003C\/span\u003E\u003Cspan\u003E-\u0026amp;\u003C\/span\u003Egt\u003Cspan\u003E;\u003C\/span\u003Edomain\u003Cspan\u003E)\u003C\/span\u003E \u003Cspan\u003E.\u003C\/span\u003E \u003Cspan\u003E\u0027\/\u0027\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EI used the regular expression:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u0027\/Return-Path:\\s*\u0027 . preg_quote($dao-\u0026amp;gt;localpart) . \u0027(b)\u0027 . $twoDigitString . \u0027([0-9a-f]{16})@\u0027 . preg_quote($dao-\u0026amp;gt;domain) . \u0027\/\u0027;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003Eto make it work either there is a space or not.\u003C\/p\u003E\n\n\u003Cp\u003EPrecisely \u2018\\s\u2019 will match any whitespace should occur between \u2018Return-Path:\u2019 and the following.\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/CiviCRM_and_bounce_processing.png"
  },
  {
    "nid": "85",
    "title": "Configuring postfix to relay email through Zoho Mail",
    "body": "\u003Cp\u003EThis has taken me quite some time to figure out.\u003C\/p\u003E\n\n\u003Cp\u003EFirst of all you need the Zoho email address you want to use when relaying emails through Zoho.\u003C\/p\u003E\n\n\u003Cp\u003EIt has to be one of the email addresses you configured by using Zoho control panel. In my case I created one to use only to relay email.\u003C\/p\u003E\n\n\u003Cp\u003ELet\u2019s say that this email address is application@example.com. It will have a password as well, say applicationpassword.\u003C\/p\u003E\n\n\u003Cp\u003EWhen configuring postfix, you edit many files. Let\u2019s see them one by one.\u003C\/p\u003E\n\n\u003Ch3\u003EGeneric\u003C\/h3\u003E\n\n\u003Cp\u003EThe file \/etc\/postfix\/generic maps local users to email addresses.\u003C\/p\u003E\n\n\u003Cp\u003EIf email is sent to a local user such root, the address will be replaced with the one you specify.\u003C\/p\u003E\n\n\u003Cp\u003EIn my case I have a single line like:\u003C\/p\u003E\n\n\u003Cp\u003Eroot application@example.com\u003C\/p\u003E\n\n\u003Cp\u003EAfter editing this file remember to use the command:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Epostmap generic\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch3\u003EPassword\u003C\/h3\u003E\n\n\u003Cp\u003EThe file \/etc\/postfix\/password contains the passwords postfix has to use to connect to the smtp server.\u003C\/p\u003E\n\n\u003Cp\u003EIt\u2019s content will be something like:\u003C\/p\u003E\n\n\u003Cp\u003Esmtp.zoho.com:587 application@example.com:applicationpassword\u003C\/p\u003E\n\n\u003Cp\u003EYou need to do postmap password.\u003C\/p\u003E\n\n\u003Ch3\u003Etls_policy\u003C\/h3\u003E\n\n\u003Cp\u003EThe file \/etc\/postfix\/tls_policy contains the policies to be used when sending encrypted emails by using the TLS protocol, the one I\u2019m using in this case.\u003C\/p\u003E\n\n\u003Cp\u003EThe file contains just this line:\u003C\/p\u003E\n\n\u003Cp\u003Esmtp.zoho.com:587 encrypt\u003C\/p\u003E\n\n\u003Cp\u003EBy doing so we force the use of TLS every time we send an email.\u003C\/p\u003E\n\n\u003Cp\u003EYou need to do postmap tls_policy.\u003C\/p\u003E\n\n\u003Ch3\u003Esmtp_header_checks\u003C\/h3\u003E\n\n\u003Cp\u003EThe file \/etc\/postfix\/smtp_header_checks contains rules to be used to rewrite the headers of the emails about to be sent.\u003C\/p\u003E\n\n\u003Cp\u003EThis is the most important file in our case.\u003C\/p\u003E\n\n\u003Cp\u003EIt rewrites the sender so that it always matches our Zoho account, application@example.com.\u003C\/p\u003E\n\n\u003Cp\u003ENo more \u2018Relaying disallowed\u2019 errors!\u003C\/p\u003E\n\n\u003Cp\u003EThis is its content:\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\/^From:.*\/ REPLACE From: LOCALHOST System \u0026amp;lt;application@emanuelesantanche.com\u0026amp;gt;;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003E\u00a0\u003C\/p\u003E\n\n\u003Cp\u003ENo need for postmap here.\u003C\/p\u003E\n\n\u003Cp\u003EYou need to install the package postfix-pcre otherwise no rewriting will happen.\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003Eapt-get install\u003C\/strong\u003E postfix-pcre\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003E\u00a0\u003C\/p\u003E\n\n\u003Ch3\u003EMain.cf\u003C\/h3\u003E\n\n\u003Cp\u003EThis is the main configuration file postfix uses.\u003C\/p\u003E\n\n\u003Cp\u003EReplace yourhostname with the hostname of your server, the one where postfix is installed on and that is sending emails through Zoho.\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E# TLS parameters\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtp_tls_policy_maps = hash:\/etc\/postfix\/tls_policy\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtpd_tls_cert_file=\/etc\/ssl\/certs\/ssl-cert-snakeoil.pem\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtpd_tls_key_file=\/etc\/ssl\/private\/ssl-cert-snakeoil.key\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtpd_use_tls=yes\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtpd_tls_session_cache_database = btree:${data_directory}\/smtpd_scache\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtp_tls_session_cache_database = btree:${data_directory}\/smtp_scache\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtp_header_checks = pcre:\/etc\/postfix\/smtp_header_checks\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Emyhostname = yourhostname\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Ealias_maps = hash:\/etc\/aliases\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Ealias_database = hash:\/etc\/aliases\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Emydestination = yourhostname, localhost.com, localhost\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Erelayhost = smtp.zoho.com:587\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtp_sasl_auth_enable = yes\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtp_sasl_password_maps = hash:\/etc\/postfix\/password\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtp_sasl_security_options =\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esmtp_generic_maps = hash:\/etc\/postfix\/generic\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003E\u00a0\u003C\/p\u003E\n\n\u003Ch3\u003Emaster.cf\u003C\/h3\u003E\n\n\u003Cp\u003EIn the file \/etc\/postfix\/master.cf I uncommented this line:\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Esmtps inet n - - - - smtpd\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003E\u00a0\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Postfix_and_Zoho.png"
  }
]