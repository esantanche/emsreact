[
  {
    "nid": "90",
    "title": "PHP tutorial, how to make your code beautiful using photography composition rules",
    "body": "<p dir="
    ltr
    ">A PHP tutorial about how photography composition rules can help make PHP code easy and beautiful to read and more valuable.<\/p>\n\n<p dir="
    ltr
    ">This is what I want to talk about in this article.<\/p>\n\n<p dir="
    ltr
    ">Browsing the web I have found an <a href="
    http:
    \
    /
    \
    /www.photographymad.com
    \
    /pages
    \
    /view
    \
    /10-top-photography-composition-rules
    ">article<\/a> that describes some rules that photographers use to make photos more beautiful.<\/p>\n\n<p dir="
    ltr
    ">I have asked myself if and how PHP coding can benefit from these rules as well.<\/p>\n\n<p dir="
    ltr
    ">The result of my brainwork follows.<\/p>\n\n<h2 dir="
    ltr
    ">Art helps art<\/h2>\n\n<p dir="
    ltr
    ">I have already talked about software creation as art in my article about <a href="
    http:
    \
    /
    \
    /emanuelesantanche.com
    \
    /php-frameworks-how-to-choose
    \
    /
    ">PHP frameworks<\/a>.<\/p>\n\n<p dir="
    ltr
    ">Photography is art as well; how can it be of help to the art of software creation?<\/p>\n\n<p dir="
    ltr
    ">If you are a beginner photographer, if you follow some rules when you are composing a photo, you create more beautiful photos.<\/p>\n\n<p dir="
    ltr
    ">To compose a photo means to choose the point from where you will shoot the photo, which subjects to include, what to give prominence to and to make many other choices.<\/p>\n\n<p dir="
    ltr
    "><strong>When creating software, if we create beautiful software, we enjoy this beauty as we enjoy the beauty of a photo. Furthermore, our software will be more durable and valuable<\/strong>.<\/p>\n\n<p dir="
    ltr
    ">While a photo is static, software is a living thing. It will benefit from its beauty because it will be easier to change and to adapt to the unavoidable changing of requirements.<\/p>\n\n<p dir="
    ltr
    ">Now let’s see how we can use rules borrowed from photography to make our code look better.<\/p>\n\n<h2 dir="
    ltr
    ">The rule of thirds<\/h2>\n\n<p dir="
    ltr
    ">In photography this rule is about not putting the most important subject at the centre of the photo. We don’t want our photo to look like a mugshot. We want to make the photo lighter by giving space to other subjects of minor importance.<\/p>\n\n<p dir="
    ltr
    ">Writing software we can do the same thing. Actually we do it all the time. We don’t put all the important code in a single file. <strong>We balance the code among many files<\/strong>. Doing this our composition is lighter. It isn’t burdened by the presence of a single heavy file full of critical code.<\/p>\n\n<h2 dir="
    ltr
    ">Leading Lines<\/h2>\n\n<p dir="
    ltr
    ">The rule of thirds wasn’t much of a surprise for me. When developing software we use the same rule all the time. The rule of leading lines, instead, has been a surprise because it has given me a new idea to use to make my code better.<\/p>\n\n<p dir="
    ltr
    ">When we look at a photo, our eyes are naturally captured by lines. Placing lines differently in a photo, we can change how we view the photo. A photo will draw our look differently if the lines run from left to right or from top to bottom.<\/p>\n\n<p dir="
    ltr
    ">How do I see lines in PHP code? I see lines of execution. Let me explain.<\/p>\n\n<p dir="
    ltr
    ">When we create a program, we aim to build a functionality. We imagine the software’s user typing some information and getting the wanted result, so we hope.<\/p>\n\n<p dir="
    ltr
    ">We imagine the user typing some typical information.<\/p>\n\n<p dir="
    ltr
    ">But a user might type atypical information as well. They might type a name where a number is required, and so on.<\/p>\n\n<p dir="
    ltr
    "><strong>Our execution line is disturbed by many exceptions and special cases<\/strong>.<\/p>\n\n<p dir="
    ltr
    ">This way our look can’t benefit from following the leading line of execution. There are branches and bushes all around.<\/p>\n\n<p dir="
    ltr
    "><strong>It could be a good idea to highlight the main execution line using custom colours for syntax highlighting<\/strong>. Many <a href="
    http:
    \
    /
    \
    /emanuelesantanche.com
    \
    /php-ide-comprehensive-facilities-for-php-programmers
    \
    /
    ">PHP IDEs<\/a> allow customization of syntax highlighting.<\/p>\n\n<p dir="
    ltr
    ">We could use lighter colours for the parts of code that disturb the main execution line.<\/p>\n\n<h2 dir="
    ltr
    ">Symmetry and Patterns<\/h2>\n\n<p dir="
    ltr
    ">Photos portraying symmetrical objects or patterns can make for a very eye-catching composition.<\/p>\n\n<p dir="
    ltr
    "><strong>In software we can introduce symmetry in our name conventions and in the organization of files<\/strong>. Patterns of code (we can call them templates as well) can be used to reduce building time and the probability of mistakes.<\/p>\n\n<p dir="
    ltr
    ">Using symmetry and patterns, code can be read and understood in less time.<\/p>\n\n<h2 dir="
    ltr
    ">Viewpoint<\/h2>\n\n<p dir="
    ltr
    ">This is easy. Change the viewpoint and you change a photo dramatically.<\/p>\n\n<p dir="
    ltr
    "><strong>We humans have this wonderful feature that we each see the world in his or her own way<\/strong>. When we want to standardise people, we destroy this diversity. It’s a bit like destroying a tropical forest or making a rare species become extinct.<\/p>\n\n<p dir="
    ltr
    ">On the other hand, it’s smarter to take advantage of this diversity. It can bring a richness of solutions and ideas.<\/p>\n\n<h2 dir="
    ltr
    ">Background<\/h2>\n\n<p dir="
    ltr
    ">Sometimes you want to take a shot of a subject and you don’t want the background to detract from it. Your photo would lack impact if the background is too busy.<\/p>\n\n<p dir="
    ltr
    ">When writing a PHP script, it may happen that the most important step is blended among many other less important ones.<\/p>\n\n<p dir="
    ltr
    ">To prevent this busy background of steps from detracting from the main one, <strong>it’s a good idea to merge the steps coming before the main one in a single “pre” function. The steps coming after can go into a “post” function<\/strong>.<\/p>\n\n<p dir="
    ltr
    ">For instance, if you have to run a query against a database, the most important step is the query itself. So you can group all the preparatory steps in a function and, similarly, all the closing steps in a another function.<\/p>\n\n<p dir="
    ltr
    \
    u0022>This
    will
    highlight
    the
    main
    step,
    which
    is
    the
    query.<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Depth<
    \
    /h2>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Photos
    are
    two-dimensional.
    How
    do
    you
    convey
    a
    sense
    of
    depth
    using
    a
    two-dimensional
    medium
    ?
    <
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    include
    in
    your
    photo
    objects
    which
    are
    near
    you,
    at
    a
    medium
    distance
    and
    far
    away.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>You
    use
    this
    idea
    when
    writing
    software
    by
    creating
    functions
    which
    break
    down
    a
    task
    in
    more
    and
    more
    detailed
    levels<
    \
    /strong>.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    write
    a
    function
    that
    calls
    three
    other
    functions
    which
    each
    call
    another
    three
    functions,
    and
    so
    on
    until
    you
    get
    to
    the
    lowest
    level
    of
    detail.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >It
    may
    seem
    that
    to
    write
    a
    single
    function
    at
    greater
    length
    and
    in
    more
    detail
    may
    be
    better.
    Instead,
    it
    adds
    beauty,
    and
    reading
    easiness,
    to
    your
    code
    if
    you
    add
    depth
    to
    it.<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Framing<
    \
    /h2>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Objects
    such
    as
    trees,
    archways
    and
    holes
    create
    frames
    around
    a
    subject,
    thus
    creating
    a
    focused
    image.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>Developing
    PHP
    code,
    we
    have
    PHP
    frameworks.
    They
    create
    a
    frame
    around
    our
    code<
    \
    /strong>.
    They
    take
    care
    of
    basic
    functionalities
    and
    design
    choices
    so
    that
    we
    can
    focus
    on
    the
    high
    level
    functionalities
    we
    need
    to
    create.<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Cropping<
    \
    /h2>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    crop
    a
    photo
    if
    you
    want
    to
    draw
    attention
    to
    a
    detail.
    You
    crop
    tight
    around
    it
    to
    prevent
    it
    from
    drowning
    in
    a
    sea
    of
    other
    subjects.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>In
    your
    PHP
    code
    there
    might
    be
    details
    that
    you
    want
    to
    examine
    more
    closely
    now
    and
    then.
    You
    can
    tag
    them<
    \
    /strong>.
    I
    use
    the
    tag
    FIXME
    a
    lot.
    I
    have
    even
    defined
    a
    keyboard
    shortcut
    to
    insert
    it
    where
    I
    need
    it.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >I
    use
    it
    to
    remind
    myself
    which
    parts
    of
    my
    code
    need
    more
    work.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    can
    define
    a
    tag
    and
    use
    it
    to
    mark
    all
    the
    code
    that
    needs
    to
    be
    changed
    to
    introduce
    or
    modify
    a
    functionality.
    Later,
    you
    make
    the
    changes
    and
    delete
    the
    tags.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Using
    a
    PHP
    IDE,
    you
    can
    define
    a
    custom
    syntax
    highlighting
    which
    you
    switch
    on
    when
    you
    want
    to
    examine
    code
    lines
    which
    have
    been
    given
    a
    tag.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Let
    ’
    s
    call
    this
    “
    code
    cropping
    ”
    .<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Experimentation<
    \
    /h2>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Rules
    are
    made
    to
    be
    broken
    in
    PHP
    code
    writing
    as
    well
    as
    in
    photography.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >A
    rule
    has
    to
    make
    sense
    for
    it
    to
    add
    beauty
    and
    value
    to
    your
    code.
    Don
    ’
    t
    apply
    them
    blindly
    otherwise
    you
    may
    end
    up
    doing
    more
    harm
    than
    good.<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Conclusion<
    \
    /h2>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >This
    experiment
    of
    borrowing
    creative
    practices
    from
    photography
    seems
    to
    have
    produced
    interesting
    results.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>They
    will
    help
    to
    write
    more
    beautiful
    and
    valuable
    software<
    \
    /strong>.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >I
    don
    ’
    t
    recommend
    using
    these
    techniques
    when
    writing
    a
    prototype.
    When
    your
    software
    still
    needs
    to
    find
    a
    final
    form,
    it
    ’
    s
    better
    to
    write
    prototypes
    to
    showcase
    basic
    functionalities.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >At
    this
    stage
    of
    software
    creation
    we
    don
    ’
    t
    need
    to
    care
    about
    the
    beauty
    in
    our
    code.
    We
    want
    to
    create
    it
    fast
    and
    use
    it
    to
    stimulate
    the
    development
    of
    more
    complete
    and
    stable
    requirements.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >So,
    at
    this
    stage,
    our
    software
    doesn
    ’
    t
    need
    to
    be
    beautiful
    because
    that
    would
    be
    a
    waste.
    We
    will
    destroy
    this
    software
    once
    it
    has
    accomplished
    its
    function.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >When
    we
    have
    stable
    requirements,
    we
    can
    begin
    to
    create
    new
    software
    in
    a
    final
    form
    and
    then
    we
    need
    beautiful
    code
    because
    this
    software
    has
    to
    last
    and
    to
    be
    easily
    maintained.<
    \
    /p>
    ","
    langcode
    ":"
    English
    ","
    field_ems_topic
    ":"
    Talking
    about
    my
    experiences
    ","
    sticky
    ":"
    Off
    ","
    field_image
    ":"
    \
    /sites
    \
    /default
    \
    /files
    \
    /2018-08
    \
    /photographer.jpg
    "},{"
    nid
    ":"
    89
    ","
    title
    ":"
    Php
    editor,
    an
    indispensable
    tool
    ","
    body
    ":"
    <p
    dir=
    "ltr"
    >A
    php
    editor
    is
    a
    must-have
    tool
    for
    a
    php
    developer.
    Even
    if
    you
    are
    a
    beginner
    you
    need
    something
    more
    than
    a
    standard
    text
    editor
    when
    you
    write
    your
    php
    scripts.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >A
    basic
    php
    editor
    offers
    many
    functionalities
    that
    help
    greatly
    and
    eliminate
    many
    distractions
    that
    make
    your
    creative
    efforts
    more
    difficult.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Let
    ’
    s
    look
    at
    these
    basic
    functionalities.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Syntax
    highlighting<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Every
    language
    keyword
    is
    highlighted
    in
    a
    different
    colour.
    You
    will
    see
    that
    the
    keywords: if,
    switch,
    else,
    return,
    case,
    are
    rendered
    in
    a
    colour
    different
    from
    the
    ones
    used
    for
    other
    parts
    of
    your
    script.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    will
    know
    at
    first
    glance
    which
    keywords
    are
    standard
    parts
    of
    the
    php
    language
    and
    which
    ones
    are
    variables,
    strings
    or
    constants.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Auto-completion<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Just
    type
    the
    first
    letters
    of
    a
    keyword
    and
    you
    will
    be
    presented
    with
    a
    list
    of
    the
    keywords
    beginning
    with
    those
    letters.
    After
    you
    choose
    a
    keyword
    from
    this
    list,
    the
    editor
    will
    show
    information
    about
    that
    keyword.
    If
    the
    keyword
    you
    chose
    is
    the
    name
    of
    a
    function,
    the
    editor
    will
    show
    a
    description
    of
    the
    function
    and
    its
    parameters.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Snippets<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Just
    type
    “
    if
    ”
    followed
    by
    the
    tab
    key,
    or
    other
    standard
    key,
    and
    you
    get
    the
    brackets
    automatically.
    Or
    just
    type
    “
    table
    ”
    and
    you
    get
    the
    full
    structure
    of
    an
    html
    table.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Wizards<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Press
    a
    button
    and
    you
    will
    be
    guided
    through
    many
    dialogs
    that
    help
    you
    choose
    the
    parameters
    needed
    to
    write
    html,
    php
    or
    css
    constructs.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Symbol
    browser<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    want
    to
    modify
    a
    function
    but
    you
    can
    ’
    t
    remember
    which
    file
    it
    is
    in.
    The
    symbol
    browser
    lists
    all
    your
    functions
    and
    takes
    you
    to
    where
    they
    are
    defined
    with
    just
    a
    click.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Search
    and
    replace
    in
    multiple
    files<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >What
    if
    you
    have
    to
    change
    a
    name
    or
    a
    symbol
    used
    in
    many
    files
    ?
    It
    happens
    more
    often
    than
    you
    might
    imagine.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Just
    tell
    the
    editor
    what
    you
    want
    to
    change
    and
    it
    will
    make
    the
    change
    in
    all
    the
    open
    files
    or
    even
    in
    an
    entire
    directory.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Let
    ’
    s
    look
    at
    a
    few
    php
    editors.<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Free
    php
    editors,
    multi-platform<
    \
    /h2>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Let
    ’
    s
    begin
    with
    free
    php
    editors,
    free
    as
    in
    free
    beer.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >The
    following
    are
    also
    multi-platform.
    You
    can
    use
    them
    on
    Linux,
    Windows
    and
    Mac.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Geany<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><a
    href=
    "http:\/\/www.geany.org\/"
    >Geany<
    \
    /a>
    is
    a
    light
    editor,
    it
    \
    u2019s
    fast
    and
    it
    does
    everything
    we
    need.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >It
    highlights
    syntax.
    It
    ’
    s
    possible
    to
    customise
    the
    colours
    used
    to
    highlight.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >It
    auto-completes
    syntax
    keywords
    and
    shows
    the
    parameters
    to
    be
    given
    to
    a
    function.
    It
    doesn
    ’
    t
    show
    information
    about
    what
    a
    function
    is
    for.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Snippets
    are
    supported
    and
    customisable.
    There
    are
    no
    wizards
    to
    insert
    html
    or
    css.
    There
    is
    a
    symbol
    browser
    instead,
    and
    you
    get
    the
    powerful
    search-and-replace
    function
    extended
    to
    all
    open
    files.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >I
    ’
    m
    writing
    about
    Geany
    here,
    on
    the
    php
    editor
    ’
    s
    page
    because
    it
    ’
    s
    so
    light
    that
    you
    can
    use
    it
    as
    your
    everyday
    text
    editor.
    At
    the
    same
    time
    <strong>it
    has
    functionalities
    that
    qualify
    it
    as
    a
    <a
    href=
    "http:\/\/emanuelesantanche.com\/php-ide-comprehensive-facilities-for-php-programmers\/"
    >PHP
    IDE<
    \
    /a><
    \
    /strong>.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >With
    Geany
    you
    can
    check
    the
    syntax
    of
    your
    php
    scripts
    and
    you
    can
    debug
    them
    as
    well.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Bluefish<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><a
    href=
    "http:\/\/bluefish.openoffice.nl\/index.html"
    >Bluefish<
    \
    /a>
    has
    the
    <strong>wizards<
    \
    /strong>
    that
    Geany
    lacks.
    I
    recommend
    Bluefish
    if
    you
    do
    a
    lot
    of
    html
    or
    css
    writing.
    Geany
    is
    better
    if
    you
    do
    more
    pure
    php
    scripting.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Bluefish
    features
    syntax
    highlighting
    and
    <strong>you
    can
    customise
    the
    colours
    used
    to
    highlight
    more
    easily<
    \
    /strong>
    than
    in
    Geany.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>Bluefish
    ’
    s
    autocompletion
    is
    fully
    functional<
    \
    /strong>.
    It
    explains
    the
    function
    that
    you
    choose
    and
    its
    parameters.
    If
    you
    move
    your
    mouse
    over
    the
    name
    of
    a
    function,
    you
    get
    the
    description
    of
    it.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >There
    is
    snippet
    support
    via
    a
    plugin
    and
    there
    are
    many
    wizards
    that
    help
    with
    writing
    html,
    css
    and
    php
    code.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>There
    is
    no
    symbol
    browser<
    \
    /strong>.
    Unlike
    Geany,
    <strong>Bluefish
    is
    a
    pure
    editor
    and
    hasn
    ’
    t
    any
    IDE
    functionalities<
    \
    /strong>.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >jEdit<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><a
    href=
    "http:\/\/www.jedit.org\/"
    >jEdit<
    \
    /a>
    is
    Java
    based.
    If
    you
    like
    the
    look
    and
    feel
    of
    Java
    applications,
    jEdit
    is
    for
    you.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>Autocompletion<
    \
    /strong>
    in
    jEdit
    has
    to
    be
    activated
    pressing
    CTRL
    +
    b,
    which
    is
    <strong>not
    so
    convenient<
    \
    /strong>.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Syntax
    is
    highlighted
    and
    colours
    are
    highly
    customisable.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>jEdit
    indents
    your
    code
    if
    it
    gets
    messed
    up<
    \
    /strong>.
    You
    have
    to
    configure
    this
    function
    a
    bit
    to
    make
    it
    work.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >There
    are
    loads
    of
    <strong>plugins<
    \
    /strong>
    to
    implement
    a
    lot
    of
    functionalities.
    You
    can
    use
    snippets
    and
    even
    download
    them
    from
    a
    snippet
    repository.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >What
    about
    a
    symbol
    browser
    ?
    You
    have
    to
    use
    a
    plugin
    named
    CtagsInterface
    which
    is
    a
    bit
    buggy.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >On
    the
    other
    hand,
    <strong>the
    search
    and
    replace
    function
    is
    great<
    \
    /strong>.
    It
    allows
    you
    to
    search
    and
    replace
    in
    all
    the
    open
    files
    and
    even
    in
    a
    directory.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >There
    are
    no
    wizards.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Komodo
    Edit<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><a
    href=
    "http:\/\/www.activestate.com\/komodo-edit"
    >Komodo
    Edit<
    \
    /a>
    is
    a
    younger
    brother
    of
    <a
    href=
    "http:\/\/www.activestate.com\/komodo-ide"
    >Komodo
    IDE<
    \
    /a>.
    While
    the
    latter
    is
    a
    full
    PHP
    IDE,
    the
    former
    is
    a
    reduced
    version
    featuring
    editing
    functions
    only.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Komodo
    Edit
    is
    multi-platform
    but
    not
    Java
    based.
    It
    ’
    s
    based
    instead
    on
    the
    same
    code
    used
    by
    Firefox.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >It
    has
    customisable
    colour
    schemes
    and
    <strong>very
    good
    auto
    completion<
    \
    /strong>
    function.
    Syntax
    highlighting
    is
    easy
    to
    customise.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    can
    jump
    to
    the
    definition
    of
    a
    function
    when
    you
    find
    it
    called
    in
    your
    script.
    There
    isn
    ’
    t
    a
    symbol
    browser.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >It
    ’
    s
    possible
    to
    search
    and
    replace
    a
    string
    in
    the
    current
    file,
    in
    all
    open
    files
    and
    in
    a
    directory.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Komodo
    offers
    <strong>syntax
    check<
    \
    /strong>
    performed
    in
    real-time.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >There
    are
    a
    lot
    of
    useful
    snippets.
    <strong>Komodo
    is
    not
    as
    light
    as
    Geany<
    \
    /strong>.
    Anyway,
    if
    you
    like
    it,
    you
    will
    find
    yourself
    at
    home
    if
    you
    choose
    Komodo
    IDE
    as
    your
    PHP
    IDE.<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Free
    php
    editors,
    Linux
    only<
    \
    /h2>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Gphpedit<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><a
    href=
    "http:\/\/www.gphpedit.org\/"
    >Gphpedit<
    \
    /a>
    is
    even
    lighter
    than
    Geany,
    but
    it
    lacks
    many
    useful
    aspects.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    will
    find
    that
    Gphpedit
    and
    Geany
    are
    similar
    because
    the
    code
    they
    are
    based
    on
    is
    the
    same.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Gphpedit
    ’
    s
    search
    functionalities
    are
    very
    basic
    while
    auto-completion
    is
    good.
    It
    doesn
    ’
    t
    add
    parentheses
    and
    braces
    if
    you
    begin
    an
    if
    statement.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >If
    you
    have
    php
    installed,
    Gphpedit
    will
    check
    the
    syntax
    of
    your
    code.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >The
    symbol
    browser
    is
    the
    same
    as
    Geany.
    Snippets
    are
    not
    provided.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>Gphpedit
    could
    be
    a
    bit
    richer<
    \
    /strong>
    and
    focused
    on
    php
    support.
    It
    ’
    s
    light,
    but
    Geany
    is
    light
    too
    and
    richer.<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Free
    php
    editors,
    Windows
    only<
    \
    /h2>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Notepad
    +
    +
    <
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><a
    href=
    "http:\/\/www.notepad-plus-plus.org\/"
    >Notepad
    +
    +
    <
    \
    /a>
    lives
    in
    Windows
    only
    but
    it
    is
    based
    on
    the
    same
    Scintilla
    component
    used
    by
    Geany.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >It
    offers
    customisable
    syntax
    highlighting.
    <strong>The
    customisation
    options
    will
    make
    the
    most
    exigent
    of
    developers
    happy<
    \
    /strong>.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Notepad
    +
    +
    offers
    auto
    completion
    function
    with
    word
    completion,
    function
    completion
    and
    function
    parameters
    hint.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >The
    interface
    is
    very
    customisable.
    When
    you
    have
    many
    open
    files,
    it
    may
    be
    not
    enough
    to
    have
    them
    open
    in
    different
    tabs,
    you
    may
    want
    to
    arrange
    the
    tabs
    according
    to
    your
    preferences.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    can
    search
    and
    replace
    in
    open
    files
    and
    even
    in
    directories.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >The
    symbol
    browser
    is
    called
    Function
    List.
    Snippets
    are
    managed
    through
    plugins.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><strong>Notepad
    +
    +
    is
    complete<
    \
    /strong>,
    only
    wizards
    are
    missing,
    but
    there
    are
    many
    other
    useful
    functionalities.<
    \
    /p>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >Dev-PHP
    Editor<
    \
    /h3
    \
    u003E
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><a
    href=
    "http:\/\/devphp.sourceforge.net\/"
    >Dev-PHP<
    \
    /a>
    comes
    in
    two
    versions,
    editor
    and
    IDE.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Here
    I
    ’
    m
    going
    to
    review
    the
    editor
    version
    of
    Dev-PHP.
    It
    features
    configurable
    syntax
    highlighting.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Its
    auto
    completion
    function
    offers
    completion
    of
    function
    name
    and
    parameters
    hints.
    Wizards
    produce
    the
    code
    needed
    for
    loops
    or
    other
    constructs.
    Just
    fill
    in
    the
    variable
    parts.
    Code
    snippets
    are
    customisable.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >There
    is
    a
    symbol
    browser
    that
    helps
    to
    find
    your
    functions
    quickly.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >It
    ’
    s
    possible
    to
    search
    in
    all
    the
    open
    files
    and
    in
    directories.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Dev-PHP
    is
    more
    than
    an
    editor,
    it
    has
    <strong>IDE
    functionalities<
    \
    /strong>
    and
    it
    ’
    s
    quite
    complete.<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Commercial
    php
    editors,
    Windows
    only<
    \
    /h2>
    \
    n
    \
    n<h3
    dir=
    "ltr"
    >DzSoft
    PHP
    Editor<
    \
    /h3>
    \
    n
    \
    n<p
    dir=
    "ltr"
    ><a
    href=
    "http:\/\/www.dzsoft.com\/php-editor.html"
    >DzSoft
    PHP
    Editor<
    \
    /a>
    is
    actually
    a
    full
    IDE.
    You
    can
    run
    and
    syntax-check
    your
    code.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >As
    editor,
    it
    features
    a
    <strong>very
    good
    symbol
    browser<
    \
    /strong>
    similar
    to
    the
    one
    offered
    by
    Geany.
    It
    ’
    s
    also
    possible
    to
    jump
    to
    a
    function
    ’
    s
    definition
    from
    a
    line
    where
    it
    is
    called.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Syntax
    highlighting
    is
    present
    and
    customisable.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Auto-completion
    of
    function
    names
    and
    parameters
    hints
    are
    provided.
    However
    <strong>to
    complete
    a
    function
    ’
    s
    name
    you
    have
    to
    press
    ctrl
    +
    enter
    and
    choose
    the
    function
    from
    a
    list<
    \
    /strong>.
    You
    can
    type
    quickly
    the
    first
    3-4
    letters
    of
    the
    function
    ’
    s
    name
    and
    the
    editor
    will
    find
    the
    function.
    You
    don
    ’
    t
    get
    a
    description
    of
    the
    function
    or
    its
    parameters.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >There
    is
    the
    interesting
    possibility
    of
    choosing
    among
    <strong>many
    shortcut
    schemes<
    \
    /strong>.
    This
    is
    useful
    if
    you
    are
    accustomed
    to
    the
    shortcuts
    used
    in
    another
    editor.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >You
    can
    quickly
    insert
    snippets
    of
    code: here
    they
    are
    called
    code
    templates.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >It
    ’
    s
    possible
    to
    search
    all
    files
    in
    a
    directory,
    but
    there
    is
    no
    replace.
    Search
    and
    replace
    are
    fully
    supported
    only
    for
    the
    current
    file.<
    \
    /p>
    \
    n
    \
    n<h2
    dir=
    "ltr"
    >Conclusion<
    \
    /h2>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >Personally,
    I
    prefer
    to
    stick
    to
    <strong>multi
    platform
    php
    editors<
    \
    /strong>
    because
    you
    never
    know
    if
    you
    will
    have
    to
    work
    on
    a
    Windows
    machine.
    Naturally
    I
    use
    Linux
    and
    LAMP
    platforms,
    but
    it
    may
    happen
    that
    I
    need
    to
    work
    on
    Windows
    machines
    and
    I
    want
    to
    use
    the
    same
    editor
    I
    use
    on
    Linux.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >I
    don
    ’
    t
    like
    the
    look
    and
    feel
    of
    Java
    applications
    and
    I
    prefer
    not
    to
    pay
    if
    there
    isn
    ’
    t
    a
    real
    need.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >So,
    I
    would
    have
    to
    choose
    between
    Geany,
    Bluefish
    and
    Komodo
    Edit.
    The
    latter
    isn
    ’
    t
    as
    light
    as
    Geany.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >I
    would
    use
    Bluefish
    for
    html
    \
    /css
    work
    and
    Geany
    for
    PHP.
    Geany
    is
    also
    IDE
    and
    it
    may
    offer
    enough
    functions
    to
    obviate
    the
    need
    to
    learn
    another
    IDE.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >If
    you
    work
    a
    lot
    on
    Windows
    computers,
    you
    can
    consider
    the
    Windows-only
    PHP
    editors
    I
    have
    reviewed
    above.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr"
    >I
    would
    choose
    Notepad
    +
    +
    if
    I
    want
    a
    pure
    php
    editor.<
    \
    /p>
    \
    n
    \
    n<p
    dir=
    "ltr\u0022>If you want a PHP IDE running under Windows only, use Dev-PHP Editor. DzSoft PHP Editor’s autocomplete function isn’t so good<\/p>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/PHP_Editor.jpg"
  },
  {
    "nid": "88",
    "title": "PHP IDE, comprehensive facilities for PHP programmers",
    "body": "<p dir="
    ltr
    ">A PHP IDE (<a href="
    http:
    \
    /
    \
    /en.wikipedia.org
    \
    /wiki
    \
    /Integrated_development_environment
    ">Integrated Development Environment<\/a>) is a program which integrates many functionalities which help developers create quality code more quickly.<\/p>\n\n<p dir="
    ltr
    ">I have reviewed many <a href="
    http:
    \
    /
    \
    /emanuelesantanche.com
    \
    /php-editor-an-indispensable-tool
    \
    /
    ">PHP Editors<\/a> and explained why they are indispensable tools when creating PHP code.<\/p>\n\n<p dir="
    ltr
    ">PHP Editors offer auto completion, syntax highlighting and symbol browsing. Some of them offer wizards that help with writing common code constructs.<\/p>\n\n<p dir="
    ltr
    ">PHP IDEs take these functionalities to the next level and add more interesting ones.<\/p>\n\n<p dir="
    ltr
    ">First, I will describe these functionalities. Later, I’ll see how these functionalities are implemented in some PHP IDEs.<\/p>\n\n<h3 dir="
    ltr
    ">Syntax checker<\/h3>\n\n<p dir="
    ltr
    ">A good PHP IDE has to check your code’s syntax by just pressing a button or, better, in real time. It’s better if this happens automatically, without needing to configure it.<\/p>\n\n<h3 dir="
    ltr
    ">Debugger<\/h3>\n\n<p dir="
    ltr
    ">A debugger executes your code showing the result of its execution alongside the code itself. Obviously you can slow down the execution and stop it to take time to inspect variables and execution flow. The best PHP IDEs have an integrated debugger needing little set-up.<\/p>\n\n<h3 dir="
    ltr
    ">Versioning System<\/h3>\n\n<p dir="
    ltr
    ">Generally, a PHP file is edited by one developer only. Sometimes two or more developers need to edit the same file. A versioning system makes this possible, avoiding conflicts or incongruent versions of the file. Such a system also keeps trace of every change made to a file along with its reason. This helps to solve problems caused by changes. <strong>A good PHP IDE supports many versioning systems without needing to install plugins or additional software<\/strong>.<\/p>\n\n<h3 dir="
    ltr
    ">Refactoring<\/h3>\n\n<p dir="
    ltr
    ">A developer has to make naming choices continuously. She has to give a name to variables, functions, files, classes, and so on. It may happen that some choices are revealed to be poor, conflicting or unclear.<\/p>\n\n<p dir="
    ltr
    ">To remedy these problems is not simply an aesthetic pastime. A variable whose name has nothing to do with its content, can cause misunderstandings, mistakes and loss of time.<\/p>\n\n<p dir="
    ltr
    ">PHP IDEs offer functionalities, which go under the name of refactoring, that globally change names to more meaningful ones. Attention has to be paid not to alter a code’s behaviour.<\/p>\n\n<p dir="
    ltr
    ">Refactoring is not only about changing names. More advanced PHP IDEs have more sophisticated refactoring functionalities meant to <strong>improve code quality without altering its working<\/strong>.<\/p>\n\n<h3 dir="
    ltr
    ">PHPdoc<\/h3>\n\n<p dir="
    ltr
    ">If you write comments about functions following the PHPdoc standard, a tool named phpDocumentor will collect all the comments you have written and make an html documentation which is easy to navigate.<\/p>\n\n<p dir="
    ltr
    "><strong>When you change a function, just change the comments about it and the documentation will be changed accordingly and automatically<\/strong>.<\/p>\n\n<p dir="
    ltr
    ">Every PHP project should have at least this sort of documentation, and a PHP IDE should support this.<\/p>\n\n<h3 dir="
    ltr
    ">PHPUnit<\/h3>\n\n<p dir="
    ltr
    ">This is less important. It’s needed if you do test-driven development. This means that first you define a test which a piece of code has to pass to be declared functional, and then you write that code. PHPUnit is software which you have to install and which your PHP IDEs has to seamlessly interface.<\/p>\n\n<h3 dir="
    ltr
    ">Integration with frameworks<\/h3>\n\n<p dir="
    ltr
    ">If a PHP IDE somehow integrates with one or more PHP frameworks, it’s a good plus.<\/p>\n\n<p dir="
    ltr
    ">Now I’m going to review some PHP IDEs. They all will be <strong>multiplatform<\/strong>. <strong>You don’t want to learn another PHP IDE if this means that you have to change platform<\/strong>. PHP IDEs need quite a lot of time to learn.<\/p>\n\n<h3 dir="
    ltr
    ">Geany<\/h3>\n\n<p dir="
    ltr
    ">I’ve reviewed <a href="
    http:
    \
    /
    \
    /www.geany.org
    \
    /
    ">Geany<\/a> as a PHP Editor. It has a few IDE functionalities as well.<\/p>\n\n<p dir="
    ltr
    ">If you install the php interpreter on your computer, Geany will check the syntax of your code. Not in real time.<\/p>\n\n<p dir="
    ltr
    ">Using a plugin, Geany will interface your versioning system. You can interface Geany to <a href="
    http:
    \
    /
    \
    /en.wikipedia.org
    \
    /wiki
    \
    /Apache_Subversion
    ">Subversion<\/a> (also named SVN).<\/p>\n\n<p dir="
    ltr
    ">Unfortunately Geany doesn’t work with xdebug or other php debugger. To debug your code you have to use echo, var_dump or similar commands. However, this way to debug php code is perfectly fine for small and medium projects.<\/p>\n\n<p dir="
    ltr
    ">There is no integration with frameworks and forget about PHPUnit.<\/p>\n\n<p dir="
    ltr
    "><strong>Geany is very light and good for small projects<\/strong>.<\/p>\n\n<h3 dir="
    ltr
    ">Netbeans<\/h3>\n\n<p dir="
    ltr
    "><a href="
    https:
    \
    /
    \
    /netbeans.org
    \
    /
    ">Netbeans<\/a> is a java application.<\/p>\n\n<p dir="
    ltr
    ">When I started it, I cringed when I saw the fonts it used.<\/p>\n\n<p dir="
    ltr
    ">Happily, I found that I could fix it.<\/p>\n\n<p dir="
    ltr
    ">Executing this command:<\/p>\n\n<blockquote>\n<p dir="
    ltr
    ">export _JAVA_OPTIONS=”-Dawt.useSystemAAFontSettings=on -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel”<\/p>\n<\/blockquote>\n\n<p dir="
    ltr
    ">Before running Netbeans, I instructed Java to use system fonts instead of its own. I also set the default look-and-feel to GTK, which looks much better than the standard one.<\/p>\n\n<p dir="
    ltr
    ">Doing this, Netbeans’ look-and-feel is acceptable. You can enjoy the functionalities and forget about the look-and-feel.<\/p>\n\n<p dir="
    ltr
    "><strong>Netbeans checks your syntax in real time<\/strong> and without needing to configure anything. It gives you abundant hints about mistakes and keywords.<\/p>\n\n<p dir="
    ltr
    ">Netbeans interfaces with the well-known, and widely-used, debugger Xdebug. You have just to do some configuration.<\/p>\n\n<p dir="
    ltr
    "><strong>Support for versioning systems is integrated<\/strong>. Subversion, CVS and Mercurial are the versioning systems used.<\/p>\n\n<p dir="
    ltr
    "><strong>Refactoring is a menu item<\/strong>. Ready to use straight out of the box.<\/p>\n\n<p dir="
    ltr
    ">What about PHPdoc? Just type “\/**” and hit Enter precisely before a function’s definition. Netbeans will create a PHPdoc compliant comment including the description of the function’s parameters. This is great.<\/p>\n\n<p dir="
    ltr
    ">PHPUnit is supported.<\/p>\n\n<p dir="
    ltr
    ">Netbeans will help you write code for these PHP frameworks: Zend, CakePHP, Yii, Symfony2, FuelPHP. Just install the specific plugin.<\/p>\n\n<h3 dir="
    ltr
    ">Eclipse helios for php developers<\/h3>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /www.eclipse.org
    \
    /downloads
    \
    /packages
    \
    /eclipse-php-developers
    \
    /heliosr
    ">Eclipse<\/a> is the base for many other PHP IDEs. Here I’ll review the version of Eclipse named Helios and customised for PHP developers.<\/p>\n\n<p dir="
    ltr
    ">Eclipse checks your syntax automatically in real time and nothing needs to be configured.<\/p>\n\n<p dir="
    ltr
    ">Xdebug and Zend debugger are supported. The latter is very good.<\/p>\n\n<p dir="
    ltr
    "><strong>You can interface with a SVN repository by using a plugin named Subeclipse<\/strong> that you find in the menu item “Help -&gt; Eclipse Marketplace”.<\/p>\n\n<p dir="
    ltr
    ">A couple of refactoring functions are offered via a menu item named Refactoring. Netbeans has more of them.<\/p>\n\n<p dir="
    ltr
    ">When you type “\/**” and hit enter, the same miracle as with Netbeans occurs. You get a skeleton phpdoc comment with the parameters of your function. Just do it before a function’s definition.<\/p>\n\n<p dir="
    ltr
    ">PHPUnit is supported and needs some configuration as it happens in Netbeans. This is expected as PHPUnit is an external product.<\/p>\n\n<p dir="
    ltr
    ">Zend Framework is based on Eclipse and you can install software that enables Eclipse to create Zend projects.<\/p>\n\n<p dir="
    ltr
    ">With some dirty tricks you can have at least autocompletion for the most common functions of any framework.<\/p>\n\n<h3 dir="
    ltr
    ">Aptana Studio 3<\/h3>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /www.aptana.org
    \
    /
    ">Aptana Studio<\/a> is for <strong>Ajax applications<\/strong>. It’s a son of Eclipse and it’s fully customised to help build Ajax applications.<\/p>\n\n<p dir="
    ltr
    ">So, you find <strong>great support for Javascript<\/strong>. There is even an integrated debugger for Javascript.<\/p>\n\n<p dir="
    ltr
    ">Aptana isn’t only Javascript. It supports also HTML5, CSS3, Ruby, Rails, PHP and Python.<\/p>\n\n<p dir="
    ltr
    ">There is no refactoring, PHPUnit and PHPDoc are supported. You can debug php code using the usual Xdebug if you install and configure it.<\/p>\n\n<h3 dir="
    ltr
    ">PHPStorm<\/h3>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /www.jetbrains.com
    \
    /phpstorm
    \
    /
    ">PHPStorm<\/a> is a commercial product.<\/p>\n\n\u003Cp dir="
    ltr
    ">Debugging for Javascript and PHP are integrated. No need to install anything.<\/p>\n\n<p dir="
    ltr
    ">Versioning is well-supported. Many Version Control Systems are supported including Subversion, Mercurial, Git, Perforce, CVS, and TFS.<\/p>\n\n<p dir="
    ltr
    ">Syntax checking is quite advanced and there are no problems with PHPUnit and PHPDoc.<\/p>\n\n<p dir="
    ltr
    ">Even frameworks are supported out-of-the-box. There is integrated support for Symfony2, Yii and Zend.<\/p>\n\n<p dir="
    ltr
    "><strong>Refactoring functions are way more sophisticated than the ones featured by Netbeans or Eclipse<\/strong>.<\/p>\n\n<p dir="
    ltr
    ">Be sure to run PHPStorm on a very powerful computer.<\/p>\n\n<h3 dir="
    ltr
    ">Komodo IDE<\/h3>\n\n<p dir="
    ltr
    "><a href="
    https:
    \
    /
    \
    /www.activestate.com
    \
    /komodo-ide
    ">Komodo IDE<\/a> is another commercial product. I have reviewed Komodo Edit, the free editor that is a simplified version of Komodo IDE.<\/p>\n\n<p dir="
    ltr
    "><strong>Komodo IDE shines for its debugging capabilities<\/strong>. You can even see inside what is transmitted between client and server via the http protocol! If there is no encryption you can see passwords travelling from your PC to the server!<\/p>\n\n<p dir="
    ltr
    ">It supports not only the php language, but also javascript, css and html that are all needed to build web applications.<\/p>\n\n<p dir="
    ltr
    ">Incredibly, <strong>refactoring functions are missing<\/strong>.<\/p>\n\n<h3 dir="
    ltr
    ">Zend Studio<\/h3>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /www.zend.com
    \
    /products
    \
    /studio
    \
    /
    ">Zend Studio<\/a> is as elephant-like as Zend and both are commercial products.<\/p>\n\n<p dir="
    ltr
    ">Zend Studio offers integrated, out-of-the-box debugging facilities for PHP and Javascript.<\/p>\n\n<p dir="
    ltr
    ">Syntax highlighting and code auto completion are good at least for PHP and Javascript. They could be improved for html and css. There is real-time syntax checking.<\/p>\n\n<p dir="
    ltr
    "><strong>Obviously Zend Studio integrates very well with Zend<\/strong>. I would definitely use Zend Studio for a Zend project.<\/p>\n\n<p dir="
    ltr
    ">Refactoring is quite good and support for PHPdoc and PHPUnit is provided.<\/p>\n\n<p dir="
    ltr
    ">You can use your favourite Versioning System because Zend Studio will likely support it without needing plugins.<\/p>\n\n<h3 dir="
    ltr
    ">Code Lobster<\/h3>\n\n<p dir="
    ltr
    "><strong>UPDATE<\/strong>: Just an additional review about CodeLobster<\/p>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /www.codelobster.com
    \
    /
    ">CodeLobster<\/a> PHP Edition is a free portable IDE primarily intended for creating and editing PHP, HTML, CSS, JavaScript files. It supports Drupal CMS, Joomla CMS, Smarty template engine, Twig, JQuery library, CodeIgniter framework, CakePHP framework, Symfony framework, Laravel framework, Phalcon framework, Yii framework and WordPress blogging platform. It includes PHP debugger, dynamic help, advanced autocomplete for all languages and frameworks and HTML\/CSS inspector like FireBug has.<\/p>\n\n<h3 dir="
    ltr
    ">Conclusion<\/h3>\n\n<p dir="
    ltr
    ">PHP IDEs need time to learn. They are more complex than PHP editors and offer more sophisticated functions.<\/p>\n\n<p dir="
    ltr
    ">For small projects <strong>Geany<\/strong> is good. It’s light and has a neat interface.<\/p>\n\n\u003Cp dir="
    ltr
    "><strong>Netbeans<\/strong> is better when projects get bigger and more complex. It has many functions ready to use without annoying hassle.<\/p>\n\n<p dir="
    ltr
    ">I would use <strong>Eclipse helios for php developers<\/strong> if I needed a plugin to solve a particular problem. Eclipse has more than 1,000 plugins. I guess that I’ll find something to suit my needs.<\/p>\n\n<p dir="
    ltr
    "><strong>Aptana Studio<\/strong> is good if you develop Ajax applications even if you have to renounce some functions.<\/p>\n\n<p dir="
    ltr
    "><strong>PHPStorm<\/strong> is an interesting product. It’s easy to use and offers a lot of tools without needing any strange configurations or installation procedures. Debuggers are integrated and this is a very good thing.<\/p>\n\n<p dir="
    ltr
    "><strong>Komodo IDE<\/strong> should be considered if you need strong debugging tools.<\/p>\n\n<p dir="
    ltr
    "><strong>Zend Studio<\/strong> is the elephant. Use it if you have to develop using Zend framework.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/php-ide.jpg"
  },
  {
    "nid": "87",
    "title": "Php frameworks, how to choose",
    "body": "<p dir="
    ltr
    ">Php frameworks are tools that it’s common to find in a developer’s studio.<\/p>\n\n<p>Artists make use of tools to forge their artistic creations. Php developers are artists creating php software and php frameworks are some of their tools.<\/p>\n\n<p dir="
    ltr
    ">Does a php developer need php frameworks in the same way as a painter needs pigments?<\/p>\n\n<p dir="
    ltr
    ">Not exactly. You can create software without frameworks. If you create clean and well-designed software, you can do without frameworks.<\/p>\n\n<p dir="
    ltr
    ">While there is no need to explain why a painter needs pigments, there is a need to explain why developers use frameworks.<\/p>\n\n<h2 dir="
    ltr
    ">The process of the artistic creation of software<\/h2>\n\n<p dir="
    ltr
    ">A team of php developers is like an <a href="
    http:
    \
    /
    \
    /en.wikipedia.org
    \
    /wiki
    \
    /Artist_collective
    ">artist collective<\/a>. A group of artists working together to create an artwork.<\/p>\n\n<p dir="
    ltr
    ">Artistic creations have some characteristics that are common to every form of art.<\/p>\n\n<h3 dir="
    ltr
    ">Durability<\/h3>\n\n<p dir="
    ltr
    "><strong>We want to enjoy an artistic creation as long as possible<\/strong>. Even if it isn’t a masterpiece, it’s always a proof of human creativity.<\/p>\n\n<p dir="
    ltr
    "><strong>This is why we need documentation<\/strong>. Even for the restoration of a painting documentation would be great. Imagine if Van Gogh had left detailed documentation about his painting techniques, the pigments he used and the materials.<\/p>\n\n<p dir="
    ltr
    ">It would be much easier to restore his paintings so that future generations can enjoy them. Unfortunately, that documentation has to be recreated by the hard work of investigation.<\/p>\n\n<p dir="
    ltr
    ">Software is artwork that isn’t static. It’s a collection of instructions by which a computer transforms information to serve a purpose.<\/p>\n\n<p dir="
    ltr
    ">Its durability is more difficult to protect.<\/p>\n\n<p dir="
    ltr
    ">Software isn’t prone to wear and tear like a painting, but it has to be easy to change and maintain because changes in hardware or other software can easily make it stop working or become no longer useful.<\/p>\n\n<p dir="
    ltr
    ">It can also happen that software has to change if it is to continue to serve its purpose.<\/p>\n\n<p dir="
    ltr
    ">Certainly software that no longer works or that works but is no longer useful should stay in museums like any other human artwork.<\/p>\n\n<p dir="
    ltr
    ">But software is made to work and we enjoy it more if it works and is useful.<\/p>\n\n<p dir="
    ltr
    ">This is why documentation is so important when creating software.<\/p>\n\n<p dir="
    ltr
    "><strong>There is no durability for software without documentation.<\/strong><\/p>\n\n<h3 dir="
    ltr
    ">Collaboration<\/h3>\n\n<p dir="
    ltr
    ">Many artworks need the collaboration of many artists to be created.<\/p>\n\n<p dir="
    ltr
    ">Php software is no exception. Large php applications are created by teams of developers. <strong>There is a need for organization and collaboration if a large php application has to be built successfully.<\/strong><\/p>\n\n<h3 dir="
    ltr
    ">Structure<\/h3>\n\n<p dir="
    ltr
    ">Can’t we write just a single long php script? Yes, we can. But how will many developers collaborate? Will they edit the script at the same time? It won’t work. We need to divide the software into many files and have each file assigned to a different developer. Two developers can’t work on the same file.<\/p>\n\n<p dir="
    ltr
    ">Structure also means that we need to know precisely what each file is for. This helps developers with their creative efforts. <strong>Every part of the software can be created successfully if the role of each of them is well-defined.<\/strong><\/p>\n\n<p dir="
    ltr
    ">It’s like an orchestra. Every musician has to know what the other musicians are going to play in order for the orchestra to give life to a symphony.<\/p>\n\n<h3 dir="
    ltr
    ">Tricks of the trade<\/h3>\n\n<p dir="
    ltr
    ">Every art has its tricks of the trade. It’s true that creativity longs for novelty, but why reinvent the wheel? Before experimenting with new sounds when creating music it may be a good idea to have a look at existing ones.<\/p>\n\n<p dir="
    ltr
    ">In the same way, before creating new software to perform a task it’s good to see if this has already been done.<\/p>\n\n<p dir="
    ltr
    "><strong>To use existing code to perform a task reduces errors and helps other developers<\/strong> deal with your code if they are familiar with the code you used for that task.<\/p>\n\n<h2 dir="
    ltr
    ">How php frameworks help with the process of the artistic creation of software<\/h2>\n\n<p dir="
    ltr
    ">Php frameworks help developers to:<\/p>\n\n<ul><li>improve the durability of their artworks (programs)<\/li>\n\t<li>collaborate with other developers<\/li>\n\t<li>give a structure to their code so that they “know what the other musicians are playing”<\/li>\n\t<li>take advantage of the “tricks of the trade” that other developers created<\/li>\n<\/ul><p dir="
    ltr
    ">Let’s have a look to a few of them.<\/p>\n\n<h2 dir="
    ltr
    ">CodeIgniter<\/h2>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /ellislab.com
    \
    /codeigniter
    ">CodeIgniter<\/a> is light and fast. It’s easy to configure and learn. It has a rich set of ready-to-use functions that save you time.<\/p>\n\n<p dir="
    ltr
    ">It’s flexible. You aren’t forced into strict rules. This may be seen as a minus point, but CodeIgniter is mainly used for small-medium applications so lack of structure is less of a problem.<\/p>\n\n<p dir="
    ltr
    ">It has a large community that helps.<\/p>\n\n<p dir="
    ltr
    ">CodeIgniter is the base for a CMS (Content Management System) called ExpressionEngine. It’s software similar to the well-known WordPress.<\/p>\n\n<p dir="
    ltr
    ">This is why it’s particularly suitable for creating CMSs.<\/p>\n\n<h2 dir="
    ltr
    ">CakePHP<\/h2>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /cakephp.org
    \
    /
    ">CakePHP<\/a> will look familiar to developers who used Ruby on Rails. It’s a php framework simple enough for beginners but powerful as well.<\/p>\n\n<p dir="
    ltr
    ">It uses quite strict conventions that help to improve clarity and make development easier. On the other hand, these strict conventions may not suit your needs for flexibility.<\/p>\n\n<p dir="
    ltr
    ">CakePHP is good for rapid prototyping and comes with a lot of features to help with implementing common tasks.<\/p>\n\n<h2 dir="
    ltr
    ">Laravel<\/h2>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /laravel.com
    \
    /
    ">Laravel<\/a> is the php framework for web artisans. I like this. I agree, software development is craftsmanship.<\/p>\n\n<p dir="
    ltr
    ">What strikes one about Laravel is its elegance. I wouldn’t recommend this php framework to a beginner, but it’s perfect if you want to go to the next level. In particular Laravel is great if you come from CodeIgniter.<\/p>\n\n<p dir="
    ltr
    ">Laravel is more complex and powerful than CodeIgniter. It features code originating from more complex php frameworks and made easier.<\/p>\n\n<h2 dir="
    ltr
    ">YiiFramework<\/h2>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /www.yiiframework.com
    \
    /
    ">YiiFramework<\/a> is a newcomer. It focuses on performance. It requires a lot of command line work that makes it less suitable for beginners.<\/p>\n\n<p dir="
    ltr
    ">It’s known for being the best choice if you want to develop social applications.<\/p>\n\n<p dir="
    ltr
    ">Don’t expect complexity and esoteric features. YiiFramework is newer than other php frameworks, so expect a less developed community.<\/p>\n\n<h2 dir="
    ltr
    ">FuelPHP<\/h2>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /fuelphp.com
    \
    /
    ">FuelPHP<\/a> is another newcomer. You can learn HMVC by using it. HMVC is an evolution of MVC and it isn’t for beginners.<\/p>\n\n<p dir="
    ltr
    ">FuelPHP makes use of command line utilities like YiiFramework. Its functionalities are rich but don’t expect the complexity of bigger php frameworks.<\/p>\n\n<p dir="
    ltr
    ">As with any other newcomer in the php frameworks arena, its community needs time to grow.<\/p>\n\n<h2 dir="
    ltr
    ">DooPHP<\/h2>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /www.doophp.com
    \
    /
    ">DooPHP<\/a> fits into the light-and-fast category. It is easy to learn and use, but it is best suited for intermediate developers because it can lack documentation and community support.<\/p>\n\n<h2 dir="
    ltr
    ">Kohana<\/h2>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /kohanaframework.org
    \
    /
    ">Kohana<\/a> follows the HMVC pattern. As I have already pointed out this is not for beginners.<\/p>\n\n<p dir="
    ltr
    ">Add to this insufficient documentation and you know that you are better off building your muscles with some easier php framework.<\/p>\n\n<p dir="
    ltr
    ">Kohana too is in the light-and-fast category, but this doesn’t mean that it isn’t powerful.<\/p>\n\n<h2 dir="
    ltr
    ">Zend<\/h2>\n\n<p dir="
    ltr
    ">Let’s pass to the elephants of the category. And I mean it literally since Zend’s logo is an elephant.<\/p>\n\n<p dir="
    ltr
    ">You use <a href="
    http:
    \
    /
    \
    /framework.zend.com
    \
    /
    ">Zend<\/a> only for huge applications that justify the complexity of Zend.<\/p>\n\n<p dir="
    ltr
    ">To use Zend for a small-medium application is like using a sledgehammer to crack a nut.<\/p>\n\n<p dir="
    ltr
    ">Just have a look at their website and you will find a rich gallery of big names.<\/p>\n\n<p dir="
    ltr
    ">Anticipate devoting a long time to learning it.<\/p>\n\n<p dir="
    ltr
    ">Zend has been created by the creators of PHP itself, so it can be a good place to learn PHP.<\/p>\n\n<h2 dir="
    ltr
    ">Symfony<\/h2>\n\n<p dir="
    ltr
    "><a href="
    http:
    \
    /
    \
    /symfony.com
    \
    /
    ">Symfony<\/a> is an old php framework and it’s one of the big guys together with Zend.<\/p>\n\n<p dir="
    ltr
    ">Like Zend, Symfony is used for big applications that have to fit enterprise requirements.<\/p>\n\n<p dir="
    ltr
    ">It’s not for beginners, but it has a large community so help is readily available. There is also a rich collection of tutorials on their website.<\/p>\n\n<h2 dir="
    ltr
    ">Conclusion<\/h2>\n\n<p dir="
    ltr
    ">I know that a few years in a corporation can kill the artist in the most creative of developers. They would make Van Gogh paint using a printing press.<\/p>\n\n<p dir="
    ltr
    ">However, there are alternatives. In any case, <strong>php frameworks are one of the most important tools to consider when setting up your workshop<\/strong>.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Php_frameworks.jpg"
  },
  {
    "nid": "86",
    "title": "Bounce processing, when SMTP server doesn’t return bounces properly",
    "body": "<h2>What bounce processing is<\/h2>\n\n<p>When you send an email, it’s possible that it’s returned to you because of technical problems or mistakes made when writing the email.<\/p>\n\n<p>One of these mistakes may be that the recipient’s email address is wrong.<\/p>\n\n<h2><span>CRM sending mass emails<\/span><\/h2>\n\n<p>Many CRMs, Customer Relationship Management system, have the capability of sending mass mailing.<\/p>\n\n<p>They can send the same newsletter to hundreds or thousands of recipients.<\/p>\n\n<h2><span>CRM processing bounces<\/span><\/h2>\n\n<p>If an email is returned because of any problem, the CRM will process it.<\/p>\n\n<p>If an email is returned because the email address of the recipient is wrong, the CRM will put the contact on hold.<\/p>\n\n<h2><span>CiviCRM and bounce processing<\/span><\/h2>\n\n<p>I’m using CiviCRM as CRM. When I send a mailing to many contacts, CiviCRM sets the “Return-Path” header in the email to be something like: return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com.<\/p>\n\n<p>When an email is returned because of errors, it should be sent to return@emanuelesantanche.com.<\/p>\n\n<p>The additional part b.19.5.9c232c48e0ba219a in the email address will tell CiviCRM which mailing and contact the original email was about.<\/p>\n\n<p>By using this information, CiviCRM will put the contact on hold, sometimes immediately, sometimes after a few failures occurred.<\/p>\n\n<h2><span>SMTP server not returning bounces correctly<\/span><\/h2>\n\n<p>It happens that the SMTP server I’m using, and many others, don’t process bounces properly.<\/p>\n\n<p>They should send the failure message to return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com and the email should show up in the return@emanuelesantanche.com mailbox.<\/p>\n\n<p>CiviCRM should have nothing else to do than check the recipient, return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com, and do its processing.<\/p>\n\n<p>Instead, the SMTP server sends the email back to where it was from, emanuele@emanuelesantanche.com.<\/p>\n\n<p>If CiviCRM checks the recipient, it doesn’t find the information it needs to process the bounce.<\/p>\n\n<h2><span>Scanning the entire email’s body<\/span><\/h2>\n\n<p>The solution is to scan the entire body of the returned email because somewhere there will be written that address CiviCRM needs.<\/p>\n\n<p>CiviCRM uses a regular expression like:<\/p>\n\n<p> \n<\/p><ol><li>\n\t<p><span>'\/Return-Path: '<\/span> <span>.<\/span> <span>preg_quote<\/span><span>(<\/span><span>$dao<\/span><span>-&amp;<\/span>gt<span>;<\/span>localpart<span>)<\/span> <span>.<\/span> <span>'(b)'<\/span> <span>.<\/span> <span>$twoDigitString<\/span> <span>.<\/span> <span>'([0-9a-f]{16})@'<\/span> <span>.<\/span> <span>preg_quote<\/span><span>(<\/span><span>$dao<\/span><span>-&amp;<\/span>gt<span>;<\/span>domain<span>)<\/span> <span>.<\/span> <span>'\/'<\/span><\/p>\n\t<\/li>\n<\/ol><p>Let’s say that the returned email contains the headers of the original email:<\/p>\n\n<p> \n<\/p><ol><li>\n\t<p>Return-Path:return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com<\/p>\n\t<\/li>\n\t<li>\n\t<p>Received:from crm.emanuelesantanche.com (cpc19-finc14-2-0-cust228.4-2.cable.virginm.net [82.28.208.229]) by mx.zohomail.com<\/p>\n\t<\/li>\n\t<li>\n\t<p>with SMTPS id 1444752405240749.4338448238343; Tue, 13 Oct 2015 09:06:45 -0700 (PDT)<\/p>\n\t<\/li>\n\t<li>\n\t<p>Date:Tue, 13 Oct 2015 17:06:44 +0100<\/p>\n\t<\/li>\n<\/ol><p>The regular expression above will find the line:<\/p>\n\n<p> \n<\/p><ol><li>\n\t<p>Return-Path:return+b.19.5.9c232c48e0ba219a@emanuelesantanche.com<\/p>\n\t<\/li>\n<\/ol><p>and CiviCRM will process the bounce correctly.<\/p>\n\n<h2><span>Problem solved?<\/span><\/h2>\n\n<p\u003EYes, you got it, the regular expression above won’t find the line with the return path because it looks for a space that is missing.<\/p>\n\n<p>It should be:<\/p>\n\n<p> \n<\/p><ol><li>\n\t<p>'\/Return-Path:' . preg_quote($dao-&amp;gt;localpart) . '(b)' . $twoDigitString . '([0-9a-f]{16})@' . preg_quote($dao-&amp;gt;domain) . '\/'<\/p>\n\t<\/li>\n<\/ol><p>Note the space after ‘Return-Path:’, I removed it.<\/p>\n\n<p>Now the regular expression will match.<\/p>\n\n<h2><span>Fixing CiviCRM code<\/span><\/h2>\n\n<p>I had to fix CiviCRM code for the regular expression to work correctly.<\/p>\n\n<p>I changed this php file: \/sites\/all\/modules\/civicrm\/CRM\/Utils\/Mail\/EmailProcessor.php<\/p>\n\n<p>This is the change:<\/p>\n\n<p> \n<\/p><ol start="
    170
    "><li>\n\t<p><em>\/\/ a tighter regex for finding bounce info in soft bounces’ mail bodies<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ EMS 2015-10-15 fixing return path regex<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/$rpRegex = '\/Return-Path: ' . preg_quote($dao-&amp;gt;localpart) . '(b)' . $twoDigitString . '([0-9a-f]{16})@' . preg_quote($dao-&amp;gt;domain) . '\/';<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>$rpRegex<\/span> <span>=<\/span> <span>'\/Return-Path:\\s*'<\/span> <span>.<\/span> <span>preg_quote<\/span><span>(<\/span><span>$dao<\/span><span>-&amp;<\/span>gt<span>;<\/span>localpart<span>)<\/span> <span>.<\/span> <span>'(b)'<\/span> <span>.<\/span> <span>$twoDigitString<\/span> <span>.<\/span> <span>'([0-9a-f]{16})@'<\/span> <span>.<\/span> <span>preg_quote<\/span><span>(<\/span><span>$dao<\/span><span>-&amp;<\/span>gt<span>;<\/span>domain<span>)<\/span> <span>.<\/span> <span>'\/'<\/span><span>;<\/span><\/p>\n\t<\/li>\n<\/ol><p>I used the regular expression:<\/p>\n\n<ol><li>\n\t<p>'\/Return-Path:\\s*' . preg_quote($dao-&amp;gt;localpart) . '(b)' . $twoDigitString . '([0-9a-f]{16})@' . preg_quote($dao-&amp;gt;domain) . '\/';<\/p>\n\t<\/li>\n<\/ol><p>to make it work either there is a space or not.<\/p>\n\n<p>Precisely ‘\\s’ will match any whitespace should occur between ‘Return-Path:’ and the following.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/CiviCRM_and_bounce_processing.png"
  },
  {
    "nid": "85",
    "title": "Configuring postfix to relay email through Zoho Mail",
    "body": "<p>This has taken me quite some time to figure out.<\/p>\n\n<p>First of all you need the Zoho email address you want to use when relaying emails through Zoho.<\/p>\n\n<p>It has to be one of the email addresses you configured by using Zoho control panel. In my case I created one to use only to relay email.<\/p>\n\n<p>Let’s say that this email address is application@example.com. It will have a password as well, say applicationpassword.<\/p>\n\n<p>When configuring postfix, you edit many files. Let’s see them one by one.<\/p>\n\n<h3>Generic<\/h3>\n\n<p>The file \/etc\/postfix\/generic maps local users to email addresses.<\/p>\n\n<p>If email is sent to a local user such root, the address will be replaced with the one you specify.<\/p>\n\n<p>In my case I have a single line like:<\/p>\n\n<p>root application@example.com<\/p>\n\n<p>After editing this file remember to use the command:<\/p>\n\n<ol><li>\n\t<p>postmap generic<\/p>\n\t<\/li>\n<\/ol><h3>Password<\/h3>\n\n<p>The file \/etc\/postfix\/password contains the passwords postfix has to use to connect to the smtp server.<\/p>\n\n<p>It’s content will be something like:<\/p>\n\n<p>smtp.zoho.com:587 application@example.com:applicationpassword<\/p>\n\n<p>You need to do postmap password.<\/p>\n\n<h3>tls_policy<\/h3>\n\n<p>The file \/etc\/postfix\/tls_policy contains the policies to be used when sending encrypted emails by using the TLS protocol, the one I’m using in this case.<\/p>\n\n<p>The file contains just this line:<\/p>\n\n<p>smtp.zoho.com:587 encrypt<\/p>\n\n<p>By doing so we force the use of TLS every time we send an email.<\/p>\n\n<p>You need to do postmap tls_policy.<\/p>\n\n<h3>smtp_header_checks<\/h3>\n\n<p>The file \/etc\/postfix\/smtp_header_checks contains rules to be used to rewrite the headers of the emails about to be sent.<\/p>\n\n<p>This is the most important file in our case.<\/p>\n\n<p>It rewrites the sender so that it always matches our Zoho account, application@example.com.<\/p>\n\n<p>No more ‘Relaying disallowed’ errors!<\/p>\n\n<p>This is its content:<\/p>\n\n<p> <\/p>\n\n<ol><li>\n\t<p>\/^From:.*\/ REPLACE From: LOCALHOST System &amp;lt;application@emanuelesantanche.com&amp;gt;;<\/p>\n\t<\/li>\n<\/ol><p> <\/p>\n\n<p>No need for postmap here.<\/p>\n\n<p>You need to install the package postfix-pcre otherwise no rewriting will happen.<\/p>\n\n<p> <\/p>\n\n<ol><li>\n\t<p><strong>apt-get install<\/strong> postfix-pcre<\/p>\n\t<\/li>\n<\/ol><p> <\/p>\n\n<h3>Main.cf<\/h3>\n\n<p>This is the main configuration file postfix uses.<\/p>\n\n<p>Replace yourhostname with the hostname of your server, the one where postfix is installed on and that is sending emails through Zoho.<\/p>\n\n<p> <\/p>\n\n<ol><li>\n\t<p># TLS parameters<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtp_tls_policy_maps = hash:\/etc\/postfix\/tls_policy<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtpd_tls_cert_file=\/etc\/ssl\/certs\/ssl-cert-snakeoil.pem<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtpd_tls_key_file=\/etc\/ssl\/private\/ssl-cert-snakeoil.key<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtpd_use_tls=yes<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtpd_tls_session_cache_database = btree:${data_directory}\/smtpd_scache<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtp_tls_session_cache_database = btree:${data_directory}\/smtp_scache<\/p>\n\t\u003C\/li>\n\t<li>\n\t<p>smtp_header_checks = pcre:\/etc\/postfix\/smtp_header_checks<\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p>myhostname = yourhostname<\/p>\n\t<\/li>\n\t<li>\n\t<p>alias_maps = hash:\/etc\/aliases<\/p>\n\t<\/li>\n\t<li>\n\t<p>alias_database = hash:\/etc\/aliases<\/p>\n\t<\/li>\n\t<li>\n\t<p>mydestination = yourhostname, localhost.com, localhost<\/p>\n\t<\/li>\n\t<li>\n\t<p>relayhost = smtp.zoho.com:587<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtp_sasl_auth_enable = yes<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtp_sasl_password_maps = hash:\/etc\/postfix\/password<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtp_sasl_security_options =<\/p>\n\t<\/li>\n\t<li>\n\t<p>smtp_generic_maps = hash:\/etc\/postfix\/generic<\/p>\n\t<\/li>\n<\/ol><p> <\/p>\n\n<h3>master.cf<\/h3>\n\n<p>In the file \/etc\/postfix\/master.cf I uncommented this line:<\/p>\n\n<p> <\/p>\n\n<ol><li>\n\t<p>smtps inet n - - - - smtpd<\/p>\n\t<\/li>\n<\/ol><p> <\/p>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Postfix_and_Zoho.png"
  },
  {
    "nid": "84",
    "title": "Impossible to login to WordPress website",
    "body": "<p>The problem was that it was not possible to login to a WordPress website, to the admin dashboard I mean.<\/p>\n\n<p>I tried many things:<\/p>\n\n<ul><li>used scripts to reset the password. They actually change the pwd in the wp_user table. See below an example of update command used to change pwd.<\/li>\n\t<li>deleted cache plugins after having zipped them<\/li>\n\t<li>deleted cache folder, \/wp-content\/cache<\/li>\n\t<li>deactivated wp super cache plugin, which I had deleted before, by updating the option active_plugins in the table wp_options<\/li>\n\t<li>deleted anything related to caches in wp-config.php<\/li>\n\t<li>disabled all plugins by renaming the folder \/wp-content\/plugins<\/li>\n\t<li>enabled debugging<\/li>\n<\/ul><p>What worked was an upgrade from WordPress 3.9.1 to 4.4.2.<\/p>\n\n<p>I used these instructions: <a href="
    https:
    \
    /
    \
    /codex.wordpress.org
    \
    /Upgrading_WordPress_-_Extended_Instructions
    ">https:\/\/codex.wordpress.org\/Upgrading_WordPress_-_Extended_Instructions<\/a><\/p>\n\n<ol><li>\n\t<p><strong>USE<\/strong> name_of_your_database<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>UPDATE<\/strong> <span>`wp<strong>_<\/strong>users`<\/span> <strong>SET<\/strong> <span>`user<strong>_<\/strong>pass`<\/span><span>=<\/span> <span>MD5<\/span><span>(<\/span><span>'yourpassword'<\/span><span>)<\/span> <strong>WHERE<\/strong> <span>`user<strong>_<\/strong>login`<\/span><span>=<\/span><span>'yourusername'<\/span><span>;<\/span><\/p>\n\t<\/li>\n<\/ol>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Wordpress_login_troubleshooting.jpg"
  },
  {
    "nid": "83",
    "title": "Installing Open Project on Debian 8 server",
    "body": "<p>I’m going to install Open Project on a VPS (Virtual Private Server).<\/p>\n\n<h2>What is Open Project?<\/h2>\n\n<p><a href="
    https:
    \
    /
    \
    /www.openproject.org
    \
    /
    ">Open Project<\/a> is an open source application you can use to manage projects. It’s used for software projects.<\/p>\n\n<p>It supports Agile methodology, bug tracking and time tracking.<\/p>\n\n<p>I’ll use it to manage projects meant to build applications for my clients.<\/p>\n\n<p>I’ll describe here the procedure I followed to install Open Project on the Virtual Private Server where I run my own website and many others.<\/p>\n\n<h2>What do I need to perform the installation?<\/h2>\n\n<p>Of course a server. My VPS runs linux debian version 8.<\/p>\n\n<p>A web server as well. In my case I have nginx already installed and running. I use it instead of Apache for better performance. Nginx’s version is 1.6.2.<\/p>\n\n<p>A database. My server runs a mysql instance. Its version is 5.5.2.<\/p>\n\n<p>Other products will be installed.<\/p>\n\n<h2>Where did I find information about the installation procedure?<\/h2>\n\n<p>I used this procedure: <a href="
    https:
    \
    /
    \
    /github.com
    \
    /opf
    \
    /openproject
    \
    /blob
    \
    /stable
    \
    /7
    \
    /docs
    \
    /installation
    \
    /manual
    \
    /README.md
    ">Manual installation of OpenProject 7.0 with Apache on Ubuntu 14.04. LTS<\/a><\/p>\n\n<p>Since the procedure uses Apache, I had to find about how to configure nginx.<\/p>\n\n<p>I found these instructions: <a href="
    https:
    \
    /
    \
    /www.digitalocean.com
    \
    /community
    \
    /questions
    \
    /install-openproject-on-ubuntu-12-04-with-nginx
    ">Install OpenProject on Ubuntu 12.04 with nginx<\/a><\/p>\n\n<h2>Creating user and group<\/h2>\n\n<p>I need to create an user that will be running Open Project. This user will belong to a special group created on purpose for Open Project.<\/p>\n\n<p>Here I create the user openproject and the group of the same name. I also assign a password to the user.<\/p>\n\n<ol><li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<em># groupadd openproject<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<em># useradd --create-home --gid openproject openproject<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<em># passwd openproject<\/em><\/p>\n\t<\/li>\n<\/ol><h2>Creating the database<\/h2>\n\n<p>Open Project needs a database where to store information.<\/p>\n\n<p>The database to create has name openproject. I create as well a myswl user of same name. Open Project will use it to access the database.<\/p>\n\n<p> \n<\/p><ol><li>\n\t<p><strong>CREATE<\/strong> <strong>DATABASE<\/strong> openproject CHARACTER <strong>SET<\/strong> utf8<span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><strong\u003ECREATE<\/strong> <span>USER<\/span> <span>'openproject'<\/span>@<span\u003E'localhost'<\/span> IDENTIFIED BY <span>'your password here'<\/span><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>GRANT<\/strong> <strong>ALL<\/strong> <strong>PRIVILEGES<\/strong> <strong>ON<\/strong> openproject.<span>*<\/span> <strong>TO<\/strong> <span>'openproject'<\/span>@<span>'localhost'<\/span><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p>FLUSH <strong>PRIVILEGES<\/strong><span>;<\/span><\/p>\n\t<\/li>\n<\/ol><h2>Installing needed packages<\/h2>\n\n<p>For Open Project to work, I have to install many needed packages.<\/p>\n\n<p>Consider that the installation of bower may not be needed.<\/p>\n\n<p>Node.js, which provides the command npm, was already present on my server.<\/p>\n\n<p> \n<\/p><ol><li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<strong>\/<\/strong>apt<em># apt-get update<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<strong>\/<\/strong>apt<em># apt-get install build-essential<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<strong>\/<\/strong>apt<em># apt-get install -y libssl-dev libreadline-dev zlib1g-dev<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<strong>\/<\/strong>apt<em># apt-get install libmysqlclient-dev<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<strong>\/<\/strong>apt<em># npm install -g bower<\/em><\/p>\n\t<\/li>\n<\/ol><h2>Ruby on rails<\/h2>\n\n<p>Open Project is based on Ruby on Rails.<\/p>\n\n<p>I’ll use <a href="
    http:
    \
    /
    \
    /rbenv.org
    \
    /
    ">rbenv<\/a> to install a specific version of Ruby on Rails. Rbenv will be installed in the folder .rbenv under the home folder of the user openproject.<\/p>\n\n<p>Ruby-build is a plugin to be used by rbenv to install Ruby on Rails.<\/p>\n\n<p>The final “ruby –version” command shows that Ruby has been installed.<\/p>\n\n<p>I had to increase my server’s memory for the installation to work. It needs 1Gb of memory and 512Mb of swap.<\/p>\n\n<p> \n<\/p><ol><li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<em># su openproject --login<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span><strong>git clone<\/strong> https:<strong>\/\/<\/strong>github.com<strong>\/<\/strong>sstephenson<strong>\/<\/strong>rbenv.git ~<strong>\/<\/strong>.rbenv<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span><strong>echo<\/strong> <span>'export PATH="
    $HOME
    \
    /.rbenv
    \
    /bin: $PATH
    "'<\/span> <strong>&amp;<\/strong>gt;<strong>&amp;<\/strong>gt; ~<strong>\/<\/strong>.profile<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span><strong>echo<\/strong> <span>'eval "
    $(rbenv
    init
    -)
    "'<\/span> <strong>&amp;<\/strong>gt;<strong>&amp;<\/strong>gt; ~<strong>\/<\/strong>.profile<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span><strong>source<\/strong> ~<strong>\/<\/strong>.profile<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span><strong>git clone<\/strong> https:<strong>\/\/<\/strong>github.com<strong>\/<\/strong>sstephenson<strong>\/<\/strong>ruby-build.git ~<strong>\/<\/strong>.rbenv<strong>\/<\/strong>plugins<strong>\/<\/strong>ruby-build<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span>rbenv <strong>install<\/strong> 2.4.1<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span>rbenv rehash<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span>rbenv global 2.4.1<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span>ruby <span>--version<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p>ruby 2.4.1p111 <strong>(<\/strong><span>2017<\/span>-03-<span>22<\/span> revision <span>58053<\/span><strong>)<\/strong> <strong>[<\/strong>x86_64-linux<strong>]<\/strong><\/p>\n\t<\/li>\n<\/ol><h2>Open Project<\/h2>\n\n<p>Now I’ll install Open Project itself.<\/p>\n\n<p>These are the commands I gave to install Open Project.<\/p>\n\n<p> \n<\/p><ol><li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span><strong>cd<\/strong> ~<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span><strong>git clone<\/strong> https:<strong>\/\/<\/strong>github.com<strong>\/<\/strong>opf<strong>\/<\/strong>openproject-ce.git <span>--branch<\/span> stable<strong>\/<\/strong><span>7<\/span> <span>--depth<\/span> <span>1<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span><strong>cd<\/strong> openproject-ce<\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ gem <strong>install<\/strong> bundler<\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong\u003E@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ bundle <strong>install<\/strong> <span>--deployment<\/span> <span>--without<\/span> postgres sqlite development <strong>test<\/strong> therubyracer docker<\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ npm <strong>install<\/strong><\/p>\n\t<\/li>\n<\/ol><h2>Configuring Open Project<\/h2>\n\n<p>Two files need to be configured.<\/p>\n\n<p>They are located in the folder \/home\/openproject\/openproject-ce\/config and their names are database.yml and configuration.yml.<\/p>\n\n<p>The file database.yml configures the access to the database. You have to specify the name of the database, the user Open Project uses to access mysql and the password.<\/p>\n\n<p>This information goes to the ‘production’ section.<\/p>\n\n<p>The file database.yml will look like this:<\/p>\n\n<ol><li>\n\t<p>production:<\/p>\n\t<\/li>\n\t<li>\n\t<p>   adapter: mysql2<\/p>\n\t<\/li>\n\t<li>\n\t<p>   database: openproject<\/p>\n\t<\/li>\n\t<li>\n\t<p>   host: localhost<\/p>\n\t<\/li>\n\t<li>\n\t<p>   username: openproject<\/p>\n\t<\/li>\n\t<li>\n\t<p>   password: your password<\/p>\n\t<\/li>\n\t<li>\n\t<p>   encoding: utf8<\/p>\n\t<\/li>\n\t<li>\n\t<p>   variables:<\/p>\n\t<\/li>\n<\/ol><p>The file configuration.yml needs some settings so that Open Project can send emails.<\/p>\n\n<p>This heavily depends on the smtp service you use to send emails from your server. In this case I’m using Google GMail.<\/p>\n\n<p>This is the smtp section in configuration.yml:<\/p>\n\n<ol><li>\n\t<p>default:<\/p>\n\t<\/li>\n\t<li>\n\t<p>  # Outgoing emails configuration (see examples above)<\/p>\n\t<\/li>\n\t<li>\n\t<p>  email_delivery_method: :smtp<\/p>\n\t<\/li>\n\t<li>\n\t<p>  smtp_address: smtp.gmail.com<\/p>\n\t<\/li>\n\t<li>\n\t<p>  smtp_port: 587<\/p>\n\t<\/li>\n\t<li>\n\t<p>  smtp_domain: localhost<\/p>\n\t<\/li>\n\t<li>\n\t<p>  smtp_authentication: plain<\/p>\n\t<\/li>\n\t<li>\n\t<p>  smtp_user_name: "
    esantanche@gmail.com
    "<\/p>\n\t<\/li>\n\t<li>\n\t<p>  smtp_password: "
    your
    password
    here
    "<\/p>\n\t<\/li>\n\t<li>\n\t<p>  smtp_enable_starttls_auto: true<\/p>\n\t<\/li>\n<\/ol><p>To create database.yml and configuration.yml I used database.yml.example and configuration.yml.example. You find these files in the same folder as the one where database.yml and configuration.yml are located.<\/p>\n\n<h2>Completing Open Project installation<\/h2>\n\n<p>Now that Open Project knows about the database it has to use, I can proceed to create the tables and anything else Open Project needs inside the database.<\/p>\n\n<p>This is what I’m going to do know. During this phase I had to increase the server’s memory to 1Gb.<\/p>\n\n<ol><li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce<strong>\/<\/strong>config$ <strong>cd<\/strong> ~<strong>\/<\/strong>openproject-ce<\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ <span>RAILS_ENV<\/span>=<span>"
    production
    "<\/span> .<strong>\/<\/strong>bin<strong>\/<\/strong>rake db:create<\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ <span>RAILS_ENV<\/span>=<span>"
    production
    "<\/span> .<strong>\/<\/strong>bin<strong>\/<\/strong>rake db:migrate<\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ <span>RAILS_ENV<\/span>=<span>"
    production
    "<\/span> .<strong>\/<\/strong>bin<strong>\/<\/strong>rake db:seed<\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ <span>RAILS_ENV<\/span>=<span>"
    production
    "<\/span> .<strong>\/<\/strong>bin<strong>\/<\/strong>rake assets:precompile<\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ <strong>echo<\/strong> <span>"
    export
    SECRET_KEY_BASE=<span>$(.
    \
    /bin
    \
    /rake
    secret)<
    \
    /span>
    "<\/span> <strong>&gt;&gt;<\/strong> ~<strong>\/<\/strong>.profile<\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ <strong>source<\/strong> ~<strong>\/<\/strong>.profile<\/p>\n\t<\/li>\n<\/ol><h2>Configuring nginx<\/h2>\n\n<p>To access the application I need to configure the webserver, in my case nginx.<\/p>\n\n<p>My job is simplified because I’m not installing Passenger, which is an application server that sits between the web server and ruby on rails. It’s purpose is to improve performances for installation with a lot of users. It’s not my case.<\/p>\n\n<p>Nginx will connect directly to the Ruby on Rails server.<\/p>\n\n<p>This is nginx configuration for Open Project:<\/p>\n\n<ol><li>\n\t<p># openproject  <\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p>    # this is to redirect http requests to https ones<\/p>\n\t<\/li>\n\t<li>\n\t<p>    server {<\/p>\n\t<\/li>\n\t<li>\n\t<p>        listen         80;<\/p>\n\t<\/li>\n\t<li>\n\t<p>        server_name    openproject.emanuelesantanche.com;<\/p>\n\t<\/li>\n\t<li\u003E\n\t<p>        return         301 https:\/\/$server_name$request_uri;<\/p>\n\t<\/li>\n\t<li>\n\t<p>    }<\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p>    upstream app_server {<\/p>\n\t<\/li>\n\t<li>\n\t<p>        server 127.0.0.1:3000 fail_timeout=0;<\/p>\n\t<\/li>\n\t<li>\n\t<p>    }<\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p>    server {<\/p>\n\t<\/li>\n\t<li>\n\t<p>        #listen 80;<\/p>\n\t<\/li>\n\t<li>\n\t<p>        listen 443 ssl;<\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p>        server_name openproject.emanuelesantanche.com;<\/p>\n\t<\/li>\n\t<li>\n\t<p>        root \/home\/openproject\/openproject-ce\/public;<\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p>        ssl_certificate \/etc\/letsencrypt\/live\/openproject.emanuelesantanche.com\/cert.pem;<\/p>\n\t<\/li>\n\t<li>\n\t<p>        ssl_certificate_key \/etc\/letsencrypt\/live\/openproject.emanuelesantanche.com\/privkey.pem;<\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p>        location \/ {<\/p>\n\t<\/li>\n\t<li>\n\t<p>               try_files $uri\/index.html $uri.html $uri @app;    <\/p>\n\t<\/li>\n\t<li>\n\t<p>        }<\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p>        location @app {<\/p>\n\t<\/li>\n\t<li>\n\t<p>                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<\/p>\n\t<\/li>\n\t<li>\n\t<p>                proxy_set_header Host $http_host;<\/p>\n\t<\/li>\n\t<li>\n\t<p>                proxy_redirect off;<\/p>\n\t<\/li>\n\t<li>\n\t<p>                proxy_pass http:\/\/app_server;<\/p>\n\t<\/li>\n\t<li>\n\t<p>        }<\/p>\n\t<\/li>\n\t<li>\n\t<p>    }<\/p>\n\t<\/li>\n<\/ol><p>The configuration has been modified to use https with certificates provided by <a href="
    https:
    \
    /
    \
    /letsencrypt.org
    \
    /
    ">Let’s Encrypt<\/a>.<\/p>\n\n<h2>Starting Ruby on Rails<\/h2>\n\n<p>For the application to work, I have to start Ruby on Rails. It will listen on the port 3000.<\/p>\n\n<p>Nginx will communicate with it on the same port. You can see the port reference in nginx configuration.<\/p>\n\n<p>To start Ruby on Rails I do:<\/p>\n\n<ol><li>\n\t<p><span>root@FREEDOMANDCOURAGE:~# <\/span><strong>su<\/strong> openproject <span>--login<\/span>                                      <\/p>\n\t<\/li>\n\t<li>\n\t<p><span>openproject@FREEDOMANDCOURAGE:~$ <\/span><strong>cd<\/strong> ~<strong>\/<\/strong>openproject-ce                                        <\/p>\n\t<\/li>\n\t<li>\n\t<p>openproject<strong>@<\/strong>FREEDOMANDCOURAGE:~<strong>\/<\/strong>openproject-ce$ bundler <strong>exec<\/strong> rails server <span>-e<\/span> production <span>-d<\/span><\/p>\n\t<\/li>\n<\/ol><h2>Does it work?<\/h2>\n\n<p>Now I’m ready to test it!<\/p>\n\n<p>Nginx is configured to serve the application at the url openproject.emanuelesantanche.com.<\/p>\n\n<p>I went to my hosting provider’s control panel to configure the subdomain openproject.<\/p>\n\n<p>It’s also possible, just for a quick test, to associate the server’s ip address to openproject.emanuelesantanche.com in your local hosts file.<\/p>\n\n<p>I just open a browser at openproject.emanuelesantanche.com.<\/p>\n\n<p>It works!<\/p>\n\n<h2>Running jobs<\/h2>\n\n<p>Ruby on Rails needs to run some jobs periodically. A line in crontab will do it.<\/p>\n\n<p>Here it is:<\/p>\n\n<ol><li>\n\t<p>48 * * * * PATH=\/home\/openproject\/.rbenv\/shims:$PATH; cd \/home\/openproject\/openproject-ce; RAILS_ENV="
    production
    " .\/bin\/rake -q jobs:workoff &gt;\/dev\/null 2&gt;&amp;1<\/p>\n\t<\/li>\n<\/ol><p>In this case the crontab job gets executed once an hour. According to documentation, it should be run every minute.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/openproject-logo-1.png"
  },
  {
    "nid": "82",
    "title": "Use your smart-phone as webcam and keep enjoying enhanced security as well",
    "body": "<h2>What I want to do<\/h2>\n\n<p>I don’t want to buy a webcam for my computer. I have a smart-phone with both front and rear cameras. Can’t I use it as webcam?<\/p>\n\n<h2>Are you interested in Enhanced Security?<\/h2>\n\n<p>Maybe you are not interested in using your smart-phone as webcam.<\/p>\n\n<p>But you may be interested in Enhanced Security instead.<\/p>\n\n<p>If you are, keep reading because I’m going to tell you about SELinux, an additional level of security Linux servers, and desktops, enjoy.<\/p>\n\n<h2>The environment<\/h2>\n\n<p>The scenery where our troubleshooting is going to happen is a Linux Fedora desktop computer.<\/p>\n\n<p>It comes with SELinux installed and running by default.<\/p>\n\n<p>Precisely it’s Fedora 25. It’s using KDE Plasma as desktop environment. The desktop environment is irrelevant to our problem.<\/p>\n\n<h2>Droidcam<\/h2>\n\n<p>Droidcam is both an Android application and a Linux one. On the Linux side, Droidcam is written in C language and uses GTK as toolkit to create user interfaces. It can be used from the command line as well.<\/p>\n\n<p>You find the source code here: https:\/\/github.com\/aramg\/droidcam\/tree\/master\/linux.<\/p>\n\n<p>You install and run Droidcam on Linux and do the same on your Android smartphone. It’s simple, you just tell the Linux application what ip address it can find the smart-phone at.<\/p>\n\n<p>Droidcam uses port 4747. You may have to fix problems caused by firewalls if, like me, you have a firewall on your computer.<\/p>\n\n<h2>SELinux<\/h2>\n\n<p>SELinux adds security checks to your Linux computer. It makes more difficult for malware to infect the system. Linux is well-known for better security. SELinux adds even more security by isolating processes so that they don’t harm the system.<\/p>\n\n<h2>Why was Droidcam a problem?<\/h2>\n\n<p>You don’t find Droidcam in standard software repository. I downloaded it from https:\/\/www.dev47apps.com\/files\/600\/droidcam-64bit.tar.bz2.<\/p>\n\n<p>There is an ‘install’ script to run. It produces two modules the operating system will load when starting.<\/p>\n\n<p>The problem was that SELinux prevented the modules from starting complaining about lack of permission.<\/p>\n\n<p>I was getting these errors:<\/p>\n\n<ol><li>\n\t<p>Aug 12 07:31:58 localhost.localdomain systemd-modules-load[535]: Failed to insert 'videodev': Permission denied<\/p>\n\t<\/li>\n\t<li>\n\t<p>Aug 12 07:31:58 localhost.localdomain systemd-modules-load[535]: Failed to insert 'v4l2loopback_dc': Permission denied<\/p>\n\t<\/li>\n<\/ol><p>When you see this sort of errors, you may not think about SELinux. You think that there may be a common permission problem related to user permissions. That’s why it can be difficult to troubleshoot.<\/p>\n\n<h2>Disabling SELinux<\/h2>\n\n<p>To see if SELinux is a problem, you first disable it.<\/p>\n\n<p>You edit the file \/etc\/selinux\/config where you set SELINUX=disabled.<\/p>\n\n<p>Done this, the problem disappeared. But you are left with no Enhanced Security.<\/p>\n\n<h2>Using the audit log<\/h2>\n\n<p>SELinux registers every permission violation in a log called the audit log. You find it at this location: \/var\/log\/audit.<\/p>\n\n<p>In this case, our permission problem was logged in this way:<\/p>\n\n<ol><li>\n\t<p>type=AVC msg=audit(1502557651.920:115): avc:  denied  { module_load } for  pid=1028 comm="
    systemd-modules
    " scontext=system_u:system_r:systemd_modules_load_t:s0<\/p>\n\t<\/li>\n\t<li>\n\t<p>tcontext=system_u:system_r:systemd_modules_load_t:s0 tclass=system permissive=0<\/p>\n\t<\/li>\n<\/ol><h2>Now what?<\/h2>\n\n<p>Do I have to learn about SELinux now? Do I need to learn how to configure SELinux permissions? Do I need to read long instructions and manuals?<\/p>\n\n<p>Happily no, I don’t have to.<\/p>\n\n<p>SELinux comes with two very handy tools.<\/p>\n\n<p>The first one is audit2why. You feed it with the error message and it tells you what’s the problem.<\/p>\n\n<p>Let’s see<\/p>\n\n<ol><li>\n\t<p><strong>[<\/strong>esantanche<strong>@<\/strong>localhost<strong>]<\/strong>~<strong>%<\/strong> <strong>echo<\/strong> <span>"
    type=AVC
    msg=audit(1502557651.920: 115)
    :
    avc: denied
  {
    module_load
  }
  for
  pid=1028
  comm=
  "<\/span>systemd-modules<span>"
  scontext=system_u
  :
  system_r
  :
  systemd_modules_load_t
  :
  s0
  tcontext=system_u
  :
  system_r
  :
  systemd_modules_load_t
  :
  s0
  tclass=system
  permissive=0
  "<\/span> <strong>|<\/strong> audit2why<\/p>\n\t<\/li>\n\t<li>\n\t<p><span>type<\/span>=AVC <span>msg<\/span>=audit<strong>(<\/strong><span>1502557651.920<\/span>:<span>115<\/span><strong>)<\/strong>: avc:  denied  <strong>{<\/strong> module_load <strong>}<\/strong> <strong>for<\/strong>  <span>pid<\/span>=<span>1028<\/span> <span>comm<\/span>=systemd-modules <span>scontext<\/span>=system_u:system_r:systemd_modules_load_t:s0 <span>tcontext<\/span>=system_u:system_r:systemd_modules_load_t:s0 <span>tclass<\/span>=system <span>permissive<\/span>=<span>0<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p>Was caused by:<\/p>\n\t<\/li>\n\t<li>\n\t<p>Missing <strong>type<\/strong> enforcement <strong>(<\/strong>TE<strong>)<\/strong> allow rule.<\/p>\n\t<\/li>\n\t<li>\n\t<p>You can use audit2allow to generate a loadable module to allow this access.<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>[<\/strong>esantanche<strong>@<\/strong>localhost<strong>]<\/strong>~<strong>%<\/strong><\/p>\n\t<\/li>\n<\/ol><p>The tool is telling us that a rule is missing. A rule that would allow the operation that has been denied, the latter being the loading operation of the module Droidcam installed.<\/p>\n\n<p>We are also advised to use another tool to generate that rule. Just to add to confusion, SELinux calls its rules modules. But a SELinux module is about giving permissions whilst a kernel module is about performing tasks like managing a webcam.<\/p>\n\n<p>The tool we need to use is audit2allow.<\/p>\n\n<p>Here it is:<\/p>\n\n<ol><li>\n\t<p><strong>[<\/strong>esantanche<strong>@<\/strong>localhost<strong>]<\/strong>~<strong>%<\/strong> <strong>echo<\/strong> <span>"
  type=AVC
  msg=audit(1502557651.920
  :
  115)
  :
  avc
  :
  denied
  {
    module_load
  }
  for
  pid=1028
  comm=
  "<\/span>systemd-modules<span>"
  scontext=system_u
  :
  system_r
  :
  systemd_modules_load_t
  :
  s0
  tcontext=system_u
  :
  system_r
  :
  systemd_modules_load_t
  :
  s0
  tclass=system
  permissive=0
  "<\/span> <strong>|<\/strong> audit2allow <span>-M<\/span> module_load_policy<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>********************<\/strong> IMPORTANT <strong>***********************<\/strong><\/p>\n\t<\/li>\n\t<li>\n\t<p>To <strong>make<\/strong> this policy package active, execute:<\/p>\n\t<\/li>\n\t<li>\n\t<p>semodule <span>-i<\/span> module_load_policy.pp<\/p>\n\t<\/li>\n\t<li>\n\t<p><strong>[<\/strong>esantanche<strong>@<\/strong>localhost<strong>]<\/strong>~<strong>%<\/strong> <strong>sudo<\/strong> semodule <span>-i<\/span> module_load_policy.pp<\/p>\n\t<\/li>\n<\/ol><p>The tool created the permission we need for Droidcam to work from the audit error above. No complicated configurations to do, no long manuals to learn. Just feed audit2allow with the error message and it will create a rule SELinux will use to allow Droidcam to work.<\/p>\n\n<p>Just consider that SELinux calls its permission rules modules and this may be confusing.<\/p>\n\n<h2>Conclusion<\/h2>\n\n<p>When you get strange permission errors you can’t explain and you eventually, after long investigation, realise it’s SELinux causing them, you want to get rid of SELinux.<\/p>\n\n<p>Why not just disable it? No mysterious permission errors any more.<\/p>\n\n<p>There are cases, like this one, that you are doing strange installations. Droidcam is a bit special and creates kernel modules its own way.<\/p>\n\n<p>Imagine that it was some malware installing modules. SELinux would have saved you from harm.<\/p>\n\n<p>It’s better to keep SELinux up and running and enjoy the enhanced security it offers.<\/p>\n\n<p>Happily it provides tools that make you job easier and you don’t have to learn complicated ways to configure permission rules.<\/p>",
  "langcode"
  :
  "English",
  "field_ems_topic"
  :
  "Talking about my experiences",
  "sticky"
  :
  "Off",
  "field_image"
  :
  "\/sites\/default\/files\/2018-08\/SELinux.png"
  },
  {
    "nid": "81",
    "title": "WYSIWYG editor for Mediawiki",
    "body": "<h2>What Mediawiki is and what it is for<\/h2>\n\n<p>Mediawiki is the engine that powers Wikipedia. It’s a wiki and it’s used to create collaborative websites where people can share knowledge and keep all sorts of information.<\/p>\n\n<p>They make it possible for people to work on the same document.<\/p>\n\n<p>Personally I keep most of my information in Mediawiki websites.<\/p>\n\n<p>Mediawiki is very good to create intranets, website used internally in an organization.<\/p>\n\n<h2>How to make editing easier<\/h2>\n\n<p>Many people find editing wiki pages difficult. Even if you get a standard tool bar and you don’t have to remember wiki syntax, there are some things that are difficult to edit and maintain.<\/p>\n\n<p>Tables are one of them. it’s easy to create a table because Mediawiki offers a wizard that guides you. But it’s not so easy to edit the table, to add rows and columns, to edit the content.<\/p>\n\n<h2>WYSIWYG editor<\/h2>\n\n<p>A WYSIWYG editor is, in general, an editor that makes it easier to work on a document.<\/p>\n\n<p>In our case a WYSIWYG editor hides Mediawiki syntax so that you don’t have to remember it at all. You just edit the document in the same way you would edit a document created with a word processor.<\/p>\n\n<h2>Visual editor<\/h2>\n\n<p>Visual Editor is our WYSIWYG editor. Wikipedia uses it as well.<\/p>\n\n<p>The starting point to find information about it is its <a href="
    https:
    \
    /
    \
    /www.mediawiki.org
    \
    /wiki
    \
    /Extension: VisualEditor
    ">Mediawiki extension page<\/a>.<\/p>\n\n<h2>Installing Parsoid<\/h2>\n\n<p>Before installing Visual Editor, we have to install Parsoid. It’s a server process that converts HTML code into Mediawiki syntax and back.<\/p>\n\n<p>The WYSIWYG editor works on HTML code. It keeps our editing activity in HTML form. But it has to eventually convert that HTML into Mediawiki syntax otherwise Mediawiki won’t be able to store it.<\/p>\n\n<p>When it has to save a page to Mediawiki database, Visual Editor takes the HTML version of the document and gives it to Parsoid. The latter converts it into Mediawiki syntax and Visual Editor gives that syntax to Mediawiki for it to store in the database.<\/p>\n\n<p><strong>The package<\/strong><\/p>\n\n<p>To install Parsoid we need to add a repository to our Debian software sources. My server runs Debian Jessie (version 8).<\/p>\n\n<ol><li>\n\t<p><strong>echo<\/strong> <span>"
    deb
    https:
    \
    /
    \
    /releases.wikimedia.org
    \
    /debian
    jessie-mediawiki
    main
    "<\/span> <strong>|<\/strong> <strong>sudo<\/strong> <strong>tee<\/strong> <strong>\/<\/strong>etc<strong>\/<\/strong>apt<strong>\/<\/strong>sources.list.d<strong>\/<\/strong>parsoid.list<\/p>\n\t<\/li>\n<\/ol><p>You may have to add an authentication key to access the repository. This is generally done with a command like the following one:<\/p>\n\n<ol><li>\n\t<p><strong>sudo<\/strong> <strong>apt-key<\/strong> advanced <span>--keyserver<\/span> keys.gnupg.net <span>--recv-keys<\/span> 90E9F83F22250DD7<\/p>\n\t<\/li>\n<\/ol><p>The actual key may be different.<\/p>\n\n<p>Now let’ install the package.<\/p>\n\n<ol><li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<strong>\/<\/strong>apt<strong>\/<\/strong>sources.list.d<em># sudo apt-get update<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>etc<strong>\/<\/strong>apt<strong>\/<\/strong>sources.list.d<em># sudo apt-get install parsoid<\/em><\/p>\n\t<\/li>\n<\/ol><p>You may need to install the package apt-transport-https as well.<\/p>\n\n<h2>Configuring Parsoid<\/h2>\n\n<p>There are many files to configure for Parsoid to work.<\/p>\n\n<p><strong>Config.yaml<\/strong><\/p>\n\n<p>The main one if config.yaml (\/etc\/mediawiki\/parsoid\/config.yaml).<\/p>\n\n<p>You find there a line like this:<\/p>\n\n<ol><li>\n\t<p>http:\/\/localhost\/w\/api.php<\/p>\n\t<\/li>\n<\/ol><p>This is needed for Parsoid to access Mediawiki apis. Parsoid uses Mediawiki apis to return the result of the conversions it performs.<\/p>\n\n<p>I have many websites on my server. I need to replace localhost with my Mediawiki installation domain.<\/p>\n\n<p>Something like mediawiki.example.com. Your domain will be different.<\/p>\n\n<p>In my case api.php is directly on the root of the website. Like http:\/\/mediawiki.example.com\/api.php. If you browse to your api.php, you get some help information, if it’s working.<\/p>\n\n<p><strong>LocalSettings.php <\/strong><\/p>\n\n<p>We have to add lines to the LocalSettings.php file of our Mediawiki installation.<\/p>\n\n<p>This Mediawiki installation is private. It’s like an intranet. You need userid and password to access it.<\/p>\n\n<p>This means that Parsoid needs to be authorized to access Mediawiki when it sends back to Mediawiki the result of the conversions it performs.<\/p>\n\n<p>This is what we do first thing in our LocalSettings.php file.<\/p>\n\n<p>The line with the URL to the Parsoid instance is interesting. It tells us that Parsoid is a server process listening on port 8142. Mediawiki will contact it at that port when needing to convert HTML code into Mediawiki syntax.<\/p>\n\n<p>Also the line about forwarding cookies is essential for Parsoid to work with a private Mediawiki installation.<\/p>\n\n<ol><li>\n\t<p><em>\/\/ Authorizing Parsoid to access Mediawiki<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p><span>if<\/span> <span>(<\/span> <span>$_SERVER<\/span><span>[<\/span><span>'REMOTE_ADDR'<\/span><span>]<\/span> <span>==<\/span> <span>'127.0.0.1'<\/span> <span>||<\/span> <span>$_SERVER<\/span><span>[<\/span><span>'REMOTE_ADDR'<\/span><span>]<\/span> <span>==<\/span> <span>'localhost'<\/span> <span>)<\/span> <span>{<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p>   <span>$wgGroupPermissions<\/span><span>[<\/span><span>'*'<\/span><span>]<\/span><span>[<\/span><span>'read'<\/span><span>]<\/span> <span>=<\/span> <strong>true<\/strong><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p>   <span>$wgGroupPermissions<\/span><span>[<\/span><span>'*'<\/span><span>]<\/span><span>[<\/span><span>'edit'<\/span><span>]<\/span> <span>=<\/span> <strong>true<\/strong><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>}<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p>wfLoadExtension<span>(<\/span> <span>'VisualEditor'<\/span> <span>)<\/span><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ Enable by default for everybody<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>$wgDefaultUserOptions<\/span><span>[<\/span><span>'visualeditor-enable'<\/span><span>]<\/span> <span>=<\/span> <span>1<\/span><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ Optional: Set VisualEditor as the default for anonymous users<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ otherwise they will have to switch to VE<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ $wgDefaultUserOptions['visualeditor-editor'] = "
    visualeditor
    ";<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ Don't allow users to disable it<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><span\u003E$wgHiddenPrefs<\/span><span>[<\/span><span>]<\/span> <span>=<\/span> <span>'visualeditor-enable'<\/span><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ OPTIONAL: Enable VisualEditor's experimental code features<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>$wgDefaultUserOptions<\/span><span>[<\/span><span>'visualeditor-enable-experimental'<\/span><span>]<\/span> <span>=<\/span> <span>1<\/span><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p><span>$wgVirtualRestConfig<\/span><span>[<\/span><span>'modules'<\/span><span>]<\/span><span>[<\/span><span>'parsoid'<\/span><span>]<\/span> <span>=<\/span> <span>array<\/span><span>(<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p>   <em>\/\/ URL to the Parsoid instance<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>   <em>\/\/ Use port 8142 if you use the Debian package<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>   <span>'url'<\/span> <span>=&gt;<\/span> <span>'http:\/\/localhost:8142'<\/span><span>,<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p>   <em>\/\/ Parsoid "
    domain
    ", see below (optional)<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>   <em>\/\/'domain' =&gt; 'localhost',<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>   <em>\/\/ Parsoid "
    prefix
    ", see below (optional)<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>   <em>\/\/'prefix' =&gt; 'localhost'<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>)<\/span><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p><em># This is for parsoid when it works, like in this case, on a private Mediawiki installation<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ This feature requires a non-locking session store. The default session store will not work and<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ will cause deadlocks (connection timeouts from Parsoid) when trying to use this feature.<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>$wgSessionsInObjectCache<\/span> <span>=<\/span> <strong>true<\/strong><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p> <\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ Forward users' Cookie: headers to Parsoid. Required for private wikis (login required to read).<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ If the wiki is not private (i.e. $wgGroupPermissions['*']['read'] is true) this configuration<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ variable will be ignored.<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ WARNING: ONLY enable this on private wikis and ONLY IF you understand the SECURITY IMPLICATIONS<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ of sending Cookie headers to Parsoid over HTTP. For security reasons, it is strongly recommended<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><em>\/\/ that $wgVirtualRestConfig['modules']['parsoid']['url'] be pointed to localhost if this setting is enabled.<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>$wgVirtualRestConfig<\/span><span>[<\/span><span>'modules'<\/span><span>]<\/span><span>[<\/span><span>'parsoid'<\/span><span>]<\/span><span>[<\/span><span>'forwardCookies'<\/span><span>]<\/span> <span>=<\/span> <strong>true<\/strong><span>;<\/span><\/p>\n\t<\/li>\n<\/ol><h2>Installing Visual Editor<\/h2>\n\n<p>To install Visual Editor, we need to follow the standard procedure.<\/p>\n\n<p>From the <a href="
    https:
    \
    /
    \
    /www.mediawiki.org
    \
    /wiki
    \
    /Special: ExtensionDistributor
    \
    /VisualEditor
    ">Extension Distributor<\/a> we download Visual Editor for our Mediawiki version, 1.28.<\/p>\n\n<p>Then we extract it in our extension folder.<\/p>\n\n<p>Many lines need to be added to our LocalSettings.php file and you see them above.<\/p>\n\n<p>To be sure that the extension has been installed, we visit the Version page, for example https:\/\/mediawiki.example.com\/index.php?title=Special:Version.<\/p>\n\n<h2>Using Visual Editor<\/h2>\n\n<p>Visual Editor makes creating and editing tables much simpler. Mediawiki tables have a quite complicated syntax and it isn’t easy to edit them or add row and columns if you don’t have Visual Editor.<\/p>\n\n<p>Other functions are facilitated and enhanced wizards are available to perform most of them.<\/p>\n\n<p>There is a good <a href="
    https:
    \
    /
    \
    /www.mediawiki.org
    \
    /wiki
    \
    /Help: VisualEditor
    \
    /User_guide
    ">user guide<\/a>.<\/p>\n\n<h2>Visual Editor problems<\/h2>\n\n<p>The are a few problems when using Visual Editor.<\/p>\n\n<p>It can be slow when staring editing. Sometimes I use the default editor. To do so, I just have to click on “edit source”.<\/p>\n\n<p>If you insert more than one code block in a page, they will disappear from the WYSIWYG view. You will have to switch to the default editor to edit them.<\/p>\n\n<p>This is a bug that may be solved in the future.<\/p>\n\n<p>Some pages can’t be edited using Visual Editor. You will have to use the default editor.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/VisualEditor4post.png"
  },
  {
    "nid": "80",
    "title": "Installing React Application",
    "body": "<h2>The goal<\/h2>\n\n<p>I’m installing React and many other modules needed for my application.<\/p>\n\n<p>The application will preform drag and drop operations and animations.<\/p>\n\n<p>It will use Material Design.<\/p>\n\n<h2>What is the application about?<\/h2>\n\n<p>It’s about displaying a list of products or other objects.<\/p>\n\n<p>Using drag and drop the user will be able to rank the product their own way.<\/p>\n\n<p>Their ranking will be stored locally so that the user will find it later, when they come to the website again.<\/p>\n\n<p>The application is work in progress and you see it here: <a href="
    http:
    \
    /
    \
    /rankit.emanuelesantanche.com
    \
    /
    ">RankIt Application<\/a>.<\/p>\n\n<h2>Let’s install React<\/h2>\n\n<p>I’ll use a tool built by Facebook developers.<\/p>\n\n<p>It’s called Create React App and saves you a lot of setup and configuration time.<\/p>\n\n<p>First I create a folder for my application and give it the right owner.<\/p>\n\n<ol><li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>srv<strong>\/<\/strong>sites<em># mkdir rankit.emanuelesantanche.com<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>srv<strong>\/<\/strong>sites<em># chown -R www-data:www-data rankit.emanuelesantanche.com\/<\/em><\/p>\n\t<\/li>\n<\/ol><p>The owner is www-data because the web server needs to be able to read and write in this folder.<\/p>\n\n<p>Now I use the tool create-react-app to create the React application.<\/p>\n\n<ol><li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>srv<strong>\/<\/strong>sites<strong>\/<\/strong>rankit.emanuelesantanche.com<em># npm install -g create-react-app<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>srv<strong>\/<\/strong>sites<strong>\/<\/strong>rankit.emanuelesantanche.com<em># create-react-app rankitapp<\/em><\/p>\n\t<\/li>\n<\/ol><p>When running the command “create-react-app rankitapp”, I had to stop mysql, php and nginx to make it work because it needed a lot of memory.<\/p>\n\n<p>The command was eventually successful and this is what it told me:<\/p>\n\n<ol><li>\n\t<p>Success! Created rankitapp at \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp<\/p>\n\t<\/li>\n\t<li>\n\t<p>Inside that directory, you can run several commands:<\/p>\n\t<\/li>\n\t<li>\n\t<p>  npm start<\/p>\n\t<\/li>\n\t<li>\n\t<p>    Starts the development server.<\/p>\n\t<\/li>\n\t<li>\n\t<p>  npm run build<\/p>\n\t<\/li>\n\t<li>\n\t<p>    Bundles the app into static files for production.<\/p>\n\t<\/li>\n\t<li>\n\t<p>  npm test<\/p>\n\t<\/li>\n\t<li>\n\t<p>    Starts the test runner.<\/p>\n\t<\/li>\n\t<li>\n\t<p>  npm run eject<\/p>\n\t<\/li>\n\t<li>\n\t<p>    Removes this tool and copies build dependencies, configuration files<\/p>\n\t<\/li>\n\t<li>\n\t<p>    and scripts into the app directory. If you do this, you can’t go back!<\/p>\n\t<\/li>\n\t<li>\n\t<p>We suggest that you begin by typing:<\/p>\n\t<\/li>\n\t<li>\n\t<p>  cd rankitapp<\/p>\n\t<\/li>\n\t<li>\n\t<p>  npm start<\/p>\n\t<\/li>\n\t<li>\n\t<p>Happy hacking!<\/p>\n\t<\/li>\n<\/ol><h2>React Material Design<\/h2>\n\n<p>This application is supposed to use Material Design.<\/p>\n\n<p>I’m going to use a library called <a href="
    https:
    \
    /
    \
    /github.com
    \
    /mlaursen
    \
    /react-md
    ">React Material Design<\/a>.<\/p>\n\n<p>You can see it at work here: https:\/\/react-md.mlaursen.com\/<\/p>\n\n<p>On that website you find all the components you can use for your application.<\/p>\n\n<p>I’m going to use <a href="
    https:
    \
    /
    \
    /react-md.mlaursen.com
    \
    /components
    \
    /cards
    ">Cards<\/a> a lot.<\/p>\n\n<p>To use React Material Design, I need to install it.<\/p>\n\n<p>First of all I install the package react-md.<\/p>\n\n<ol><li>\n\t<p><span>root@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# <\/span>npm <strong>install<\/strong> <span>--save<\/span> react-md<\/p>\n\t<\/li>\n<\/ol><h2>CSS preprocessor<\/h2>\n\n<p>React Material Design comes with CSS sylesheets, but it uses a <a href="
    https:
    \
    /
    \
    /medium.com
    \
    /@cabot_solutions
    \
    /css-preprocessors-effective-tools-for-faster-styling-of-web-pages-and-user-interfaces-6ed4737a9804
    ">CSS preprocessor<\/a>.<\/p>\n\n<p>I have to install the preprocessor first.<\/p>\n\n<ol><li>\n\t<p><span>root@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# <\/span>npm <strong>install<\/strong> <span>--save<\/span> node-sass-chokidar<\/p>\n\t<\/li>\n<\/ol><p>I have to add a couple of line to the file \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/package.json.<\/p>\n\n<ol><li>\n\t<p>"
    build
    ": "
    react-scripts
    build
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>     "
    test
    ": "
    react-scripts
    test
    --env=jsdom
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>     "
    eject
    ": "
    react-scripts
    eject
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>+    "
    build-css
    ": "
    node-sass-chokidar
    --include-path
    .
    \
    /node_modules
    src
    \
    /
    -o
    src
    \
    /
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>+    "
    watch-css
    ": "
    npm
    run
    build-css
    &
    amp
    ;
    &
    amp
    ;
    npm
    run
    build-css
    --watch
    --recursive
    "<\/p>\n\t<\/li>\n\t<li>\n\t<p>   },<\/p>\n\t<\/li>\n\t<li>\n\t<p>   "
    devDependencies
    ": {<\/p>\n\t<\/li>\n\t<li>\n\t<p>     "
    babel-plugin-transform-decorators
    ": "
    ^6.24.1
    "<\/p>\n\t<\/li>\n<\/ol><p>The first line, the one with “build-css”, is how CSS files are produced from Scss ones. It’s how the preprocessor converts a Scss file into a standard CSS one.<\/p>\n\n<p>The second line, “watch-css”, is how the system realises that you changed a Scss file and performs again the conversion to a CSS file.<\/p>\n\n<p>To test that the precompiler is working we change name to two files.<\/p>\n\n<p>They are:<\/p>\n\n<p>* \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/App.css<br \/>\n* \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/index.css<\/p>\n\n<p>They become App.scss and index.scss respectively.<\/p>\n\n<p>I can do this change of name because these two files actually contain pure CSS the CSS preprocessor will convert literally.<\/p>\n\n<p>Now I run the script watch-css described above.<\/p>\n\n<ol><li>\n\t<p><span>root@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# <\/span>npm run watch-css<\/p>\n\t<\/li>\n<\/ol><p>This script will create the files App.css and index.css from App.scss and index.scss respectively.<\/p>\n\n<p>Then I want to prevent css files from being uploaded to my git repository because they will be generated from the scss files.<\/p>\n\n<p>I add these lines to my .gitignore.<\/p>\n\n<ol><li>\n\t<p><span>+<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+# build artifacts<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+src\/**\/*.css<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+<\/span><\/p>\n\t<\/li>\n<\/ol><p>You want to create this file: \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/_globals.scss, and put the following content in it.<\/p>\n\n<ol><li>\n\t<p><span>@import 'react-md\/src\/scss\/react-md';<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p>\/\/ Any variable overrides. The following just changes the <span>default<\/span> theme to use <span>teal<\/span> and purple.<\/p>\n\t<\/li>\n\t<li>\n\t<p>$md-primary-color<span>:<\/span> $md-teal-<span>500<\/span><span>;<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p>$md-secondary-color<span>:<\/span> $md-purple-a-<span>400<\/span><span>;<\/span><\/p>\n\t<\/li>\n<\/ol><p>By doing this, all the definitions included in React Material Design will be incorporated in our scss and used. We couldn’t use React Material Design if we don’t do this.<\/p>\n\n<p>The file \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/index.scss needs a couple more lines:<\/p>\n\n<ol><li>\n\t<p><span>+@import 'globals';<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+@include react-md-everything<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+<\/span><\/p>\n\t<\/li>\n<\/ol><p>This step is necessary to actually use React Material Designin our application since the file _globals.scss is used internally, but not invoked in the actual application until we do it explicitly in index.scss.<\/p>\n\n<p>We want our scss files compiled in real time as we make changes. That’s why we need to fix our packages file (\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/package.json).<\/p>\n\n<p>This is what the scripts part of it looks like:<\/p>\n\n<ol><li>\n\t<p>"
    scripts
    ": {<\/p>\n\t<\/li>\n\t<li>\n\t<p>    "
    start-js
    ": "
    react-scripts
    start
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>    "
    start
    ": "
    npm-run-all
    -p
    watch-css
    start-js
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>    "
    build
    ": "
    react-scripts
    build
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>    "
    test
    ": "
    react-scripts
    test
    --env=jsdom
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>    "
    eject
    ": "
    react-scripts
    eject
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>    "
    build-css
    ": "
    node-sass-chokidar
    --include-path
    .
    \
    /node_modules
    src
    \
    /
    -o
    src
    \
    /
    ",<\/p>\n\t<\/li>\n\t<li>\n\t<p>    "
    watch-css
    ": "
    npm
    run
    build-css
    &
    amp
    ;
    &
    amp
    ;
    npm
    run
    build-css
    --watch
    --recursive
    "<\/p>\n\t<\/li>\n\t<li>\n\t<p>  },<\/p>\n\t<\/li>\n<\/ol><p>When we run “npm run start”, there will be two processes starting: watch-css and start-js. The first one will process scss file to css ones. The second will process javascript.<\/p>\n\n<p>For these scripts to work we need to install the package npm-run-all.<\/p>\n\n<ol><li>\n\t<p><span>root@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# <\/span>npm <strong>install<\/strong> <span>--save<\/span> npm-run-all<\/p>\n\t<\/li>\n<\/ol><h2>Web Font Loader<\/h2>\n\n<p>React Material Design uses some nice fonts, but we need to install Web Font Loader to be able to see them.<\/p>\n\n<ol><li>\n\t<p><span>root@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# <\/span>npm <strong>install<\/strong> <span>--save<\/span> webfontloader<\/p>\n\t<\/li>\n<\/ol><p>We have to add these lines to \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/index.js otherwise we won’t use the fonts.<\/p>\n\n<ol><li>\n\t<p><span>+import WebFontLoader from 'webfontloader';<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+WebFontLoader.load<span>(<\/span><span>{<\/span><\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+  google: <span>{<\/span><\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+    families: <span>[<\/span>'Roboto:300,400,500,700', 'Material Icons'<span>]<\/span>,<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+  <span>}<\/span>,<\/span><\/p>\n\t<\/li>\n\t<li>\n\t<p><span>+<span>}<\/span><span>)<\/span>;<\/span><\/p>\n\t<\/li>\n<\/ol><h2>More packages to install<\/h2>\n\n<p>It’s simpler to install the other packages we need to do routing, perform animations and drag and drop.<\/p>\n\n<ol><li>\n\t<p\u003Eroot<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>srv<strong>\/<\/strong>sites<strong>\/<\/strong>rankit.emanuelesantanche.com<strong>\/<\/strong>rankitapp<em># npm install --save react-router-dom<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>srv<strong>\/<\/strong>sites<strong>\/<\/strong>rankit.emanuelesantanche.com<strong>\/<\/strong>rankitapp<em># npm install --save react-dnd<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>srv<strong>\/<\/strong>sites<strong>\/<\/strong>rankit.emanuelesantanche.com<strong>\/<\/strong>rankitapp<em># npm install --save react-dnd-html5-backend<\/em><\/p>\n\t<\/li>\n\t<li>\n\t<p>root<strong>@<\/strong>FREEDOMANDCOURAGE:<strong>\/<\/strong>srv<strong>\/<\/strong>sites<strong>\/<\/strong>rankit.emanuelesantanche.com<strong>\/<\/strong>rankitapp<em># npm install --save react-motion<\/em><\/p>\n\t<\/li>\n<\/ol><p> <\/p>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-08\/react.png"
  },
  {
    "nid": "79",
    "title": "Serving static files in React",
    "body": "<h2>Some context<\/h2>\n\n<p>I’m building a React application. You can see the code in this Github repository: <a href="
    https:
    \
    /
    \
    /github.com
    \
    /esantanche
    \
    /rankit
    ">Rankit Github repository<\/a>.<\/p>\n\n<p>The live application is here: <a href="
    http:
    \
    /
    \
    /rankit.emanuelesantanche.com
    \
    /
    ">Rankit Application<\/a>.<\/p>\n\n<p>To create the environment from scratch I used the tool <a href="
    https:
    \
    /
    \
    /github.com
    \
    /facebookincubator
    \
    /create-react-app
    ">Create React App<\/a>.<\/p>\n\n<p>It’s easier and you don’t have to tamper with configuration files to make it work.<\/p>\n\n<p>It works out of the box.<\/p>\n\n<h2>What I want to do<\/h2>\n\n<p>I need to load the content of a text file into a variable.<\/p>\n\n<p>The text file contains a dictionary of words.<\/p>\n\n<h2>Restrictions<\/h2>\n\n<p>I want a solution that is as much in line with React as possible. The solution shouldn’t use tricks that don’t involve React.<\/p>\n\n<p>The web server configuration shouldn’t change.<\/p>\n\n<p>In my case the web server, nginx, just passes all http queries to the React application server running on port 3000. It doesn’t intercept any http query and doesn’t serve static files.<\/p>\n\n<p>Everything happens through React. I would like to keep it that way.<\/p>\n\n<p>I don’t want to copy and paste the file’s content into the code. I want to load the file dynamically when the program runs.<\/p>\n\n<p>I don’t want to change any configuration file Webpack uses. When you create a React application by using Create React App, it does the job for you.<\/p>\n\n<p>It configures Webpack and you are not supposed to touch the configuration. I don’t even know where it is and I don’t want to know.<\/p>\n\n<p>Additionally, it would be great to avoid having to install an additional server process to do the job.<\/p>\n\n<p>An additional tool that needs another server process to run may do the job, but it would definitely be overshot.<\/p>\n\n<h2>Why can’t I just import the file?<\/h2>\n\n<p>I discovered that I can install a loader. Webpack uses it to load a file directly into a variable.<\/p>\n\n<p>You would say that the problem is solved.<\/p>\n\n<p>I installed the loader using this command:<\/p>\n\n<ol><li>\n\t<p><span>root@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# <\/span>npm <strong>install<\/strong> <span>--save-dev<\/span> raw-loader<\/p>\n\t<\/li>\n<\/ol><p>Then I added this instruction to my application:<\/p>\n\n<ol><li>\n\t<p>import txt from 'raw-loader!.\/file.txt';<\/p>\n\t<\/li>\n<\/ol><p>I got this error message as well:<\/p>\n\n<ol><li>\n\t<p>Line 10:  Unexpected '!' in 'raw-loader!.\/file.txt'. Do not use import syntax to configure webpack loaders  import\/no-webpack-loader-syntax<\/p>\n\t<\/li>\n<\/ol><p>This error message comes from one of the components Create React App installs when it creates the application for you.<\/p>\n\n<p>The component is ESLint. It parses your code to find patterns that may cause problems or that don’t comply to given guidelines.<\/p>\n\n<p>In this case ESLint is configured with a rule that forbids the use of webpack loaders in import statements.<\/p>\n\n<p>I can’t disable this rule because I should change ESLint configuration, which is part of the configuration that comes when you use the tool Create React App.<\/p>\n\n<p>Among the restrictions described above there is this one as well.<\/p>\n\n<h2>What about importing the file without using webpack loaders?<\/h2>\n\n<p>The idea is to use this statement:<\/p>\n\n<ol><li>\n\t<p>import txt from 'file.txt';<\/p>\n\t<\/li>\n<\/ol><p>After the import above runs, the variable txt won’t contain the file ‘file.txt’.<\/p>\n\n<p>It will contain a string that is actually a JavaScript statement like this one:<\/p>\n\n<ol><li>\n\t<p>module.exports = __webpack_public_path__ + "
    2c2ae068be3b089e0a5b59abb1831550.eot
    "<\/p>\n\t<\/li>\n<\/ol><p>I could use this statement in my code if the variable __webpack_public_path__ was defined.<\/p>\n\n<p>It looks like it isn’t and to have it defined I should change Webpack configuration, which thing I can’t do.<\/p>\n\n<h2>Can I use Node Express?<\/h2>\n\n<p>Express is a framework I can use as backend to perform many useful tasks.<\/p>\n\n<p>How to use it to serve static files is described <a href="
    https:
    \
    /
    \
    /medium.com
    \
    /@justintulk
    \
    /serving-static-html-into-a-react-component-using-node-express-8cb9fc9194df
    ">here<\/a><\/p>\n\n<p>Just I don’t want to add another server process if I can avoid it.<\/p>\n\n<p>It would consume a lot of resources.<\/p>\n\n<h2>Can I tell Webpack to use a specific loader when a file has a given extension?<\/h2>\n\n<p>It looks like this command:<\/p>\n\n<ol><li>\n\t<p>webpack <span>--module-bind<\/span> <span>'txt=raw-loader'<\/span><\/p>\n\t\u003C\/li>\n<\/ol><p>would just associate text files with the raw loader.<\/p>\n\n<p>This means that I could just use this statement:<\/p>\n\n<ol><li>\n\t<p>import txt from 'file.txt';<\/p>\n\t<\/li>\n<\/ol><p>and Webpack would use the raw loader bypassing the syntax:<\/p>\n\n<ol><li>\n\t<p>import txt from 'raw-loader!.\/file.txt';<\/p>\n\t<\/li>\n<\/ol><p>which we know ESLint forbids.<\/p>\n\n<p>The problem is that the command ‘webpack’ is not installed and to install it we would have again to tamper with the configuration Create React App uses.<\/p>\n\n<h2>Let’s use the public folder!<\/h2>\n\n<p>Webpack treats a folder in a special way.<\/p>\n\n<p>It’s the public folder.<\/p>\n\n<p>If you put a file there, it’s not going to be transformed or moved.<\/p>\n\n<p>You can access it with a fetch statement and load it into a variable.<\/p>\n\n<p>The file dictionary.txt is in the public folder, which in our case is this folder: \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/public<\/p>\n\n<p>The following fetch statement loads that file and its full content is passed to a function, t9init, as parameter.<\/p>\n\n<ol><li>\n\t<p>fetch("
    dictionary.txt
    ")<\/p>\n\t<\/li>\n\t<li>\n\t<p>            .then((response) =&gt; response.text())<\/p>\n\t<\/li>\n\t<li>\n\t<p>            .then(function(data) {<\/p>\n\t<\/li>\n\t<li>\n\t<p>                t9init(data);     <\/p>\n\t<\/li>\n\t<li>\n\t<p>        })<\/p>\n\t<\/li>\n<\/ol><p>There is no need to specify the full url of the file because Webpack will prepend the url of the public folder.<\/p>\n\n<p>Actually, if you try to use a url in your fetch statement that you think may be correct, it won’t work.<\/p>\n\n<p>If you use these urls:<\/p>\n\n<ul><li>\/public\/dictionary.txt<\/li>\n\t<li>\/reactapp\/public\/dictionary.txt<\/li>\n\t<li>public\/dictionary.txt<\/li>\n\t<li>reactapp\/public\/dictionary.txt<\/li>\n<\/ul><p>it won’t work. If the file is in the public folder, just give its url relative to the public folder.<\/p>\n\n<p>This Webpack peculiarity may have misled you when you were trying to fetch the file by giving its url.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-08\/Static_files_React.png"
  },
  {
    "nid": "78",
    "title": "iClassix",
    "body": "<p>Streaming classical music! I love classical music!<\/p>\n\n<p>As of this writing, the website, <a href="
    http:
    \
    /
    \
    /iclassix.tv
    ">http:\/\/iclassix.tv<\/a>, is still work in progress.<\/p>\n\n<p>Powerful Aida, moving Nabucco, funny Barber of Seville, romantic La Traviata, it’s all there just a click away.<\/p>\n\n<p>Sure, it’s way better to go to the <a href="
    http:
    \
    /
    \
    /www.roh.org.uk
    \
    /
    ">Royal Opera House<\/a> to see La Traviata, but not all of us can afford it.<\/p>\n\n<p>Modern technology makes it possible to watch opera from your home at affordable prices.<\/p>\n\n<p>The concerted action of AngularJS, CDN, Drupal, HTTP streaming, Nginx, Compass Sass, Suzy grid, Flowplayer and REST apis creates a harmonic symphony of software agents that will offer a quality and enjoyable visual experience.<\/p>\n\n<p>BTW, it’s all made in London and reaching the world. Power of internet.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-08\/iclassix-tv-200x200.jpg"
  },
  {
    "nid": "77",
    "title": "My own database application",
    "body": "<p>Now we have MySql, Oracle, Sybase, Microsoft SQL Server, and more. But at that time there were only very slow database applications.<\/p>\n\n<p>So, I wrote my own, binary index and all. It was as fast as lightening and it had to be because the software using it had to send real-time orders to a production controller.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Database600-600x500.png"
  },
  {
    "nid": "76",
    "title": "My degree in Electronic Engineering",
    "body": "<p>The Milan Polytechnic is a prestigious institution. People come from the U.S. to study there. I graduated there with the best grade and a special mention.<\/p>\n\n<p>It was a challenge. There are students who study there who fail an exam 10-20 times before passing it, and they aren’t stupid.<\/p>\n\n<p>I specialized in Automatics: how to make a nuclear power plant work; how to distribute electrical power; how to prevent a turbine destroying itself and kill someone in the process; how to control thousands of turbines at a distance of thousands of miles from each other from a single point; and much more.<\/p>\n\n<p>My favoured subjects were robotics and artificial intelligence.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/polimi.png"
  },
  {
    "nid": "75",
    "title": "IBM for Government",
    "body": "<p>This was an IBM project. With the help of eight developers, suppliers and consultants I created a state-of-the-art system to support the workflow leading to the treatment of appeals against fines.<\/p>\n\n<p>Millions of documents were going to be scanned and put in digital form.<\/p>\n\n<p>It was a race against time. There was a penalty of £2,000 for every day of delay.<\/p>\n\n<p>Eventually the system was adopted by all the 100 Italian provinces (counties).<\/p>\n\n<p>Thanks to this project I earned a reference.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/ibm_logo600-600x500.png"
  },
  {
    "nid": "74",
    "title": "Google Maps? Sort of",
    "body": "<p>Telecom companies need GISs, Geographical Information Systems. These are programs that help you draw a map of telecommunication networks. They don’t need just one copy of these programs. They need thousands of copies and, to decide which supplier they will buy from, they run a competition.<\/p>\n\n<p>I had three months to build a prototype to show our GIS functionalities to the client. Our prototype was the only one showing a particular functionality, one quite hard to implement.<\/p>\n\n<p>To build this prototype I worked in Camberley, England in the offices of the company SHL Vision Solutions (later bought by MCI and later again by EDS).<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/gis-map-large600-600x500.png"
  },
  {
    "nid": "73",
    "title": "Finding your way in the railway network",
    "body": "<p>When you use ticket machines to buy a train ticket, they will find the shortest route for you.<\/p>\n\n<p>This is done thanks to a very complicated program which computes the shortest path between two points.<\/p>\n\n<p>In my case, I was working for the Italian national railways company. The program doing the above calculations used bit fields. These are uncommon structures used to pack information densely.<\/p>\n\n<p>These structures are so uncommon that even compilers find it hard to compile them.<\/p>\n\n<p>I evaluated these compilers: CPP Builder, Watcom C++, IBM VisualAge for C++, Borland C++, Symantec C++.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Railway_network600-600x500.jpg"
  },
  {
    "nid": "72",
    "title": "Billions of phone calls a month",
    "body": "<p>Yes, the major Italian telecommunications company stores information about every call made. There are more than one billion of them per month.<\/p>\n\n<p>To treat this enormous quantity of data you need a mainframe and not a small one. It was an S\/390 and used terabytes of storage.<\/p>\n\n<p>When a program stops working and you can’t even kill it, if your computer is a desktop you just shut the computer down and restart it.<\/p>\n\n<p>Don’t think that you can do the same with an S\/390. To shutdown and restart it you have to wait an entire week. Not something to do very easily.<\/p>\n\n<p>It’s a completely different way to work when you have to design and run “just” 20 queries when each query runs for many days and you have only one month to run them all.<\/p>\n\n<p>If you make a mistake, you have to wait many days before you can correct it. You can’t afford mistakes.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Cisco_phone600-600x500.jpg"
  },
  {
    "nid": "71",
    "title": "A datacentre with hundreds of servers",
    "body": "<p>When you buy hosting for your website, a server in a datacentre will run your website.<\/p>\n\n<p>I worked in such a datacentre for many years. There were 300 servers and a lot of other hardware.<\/p>\n\n<p>We needed to write a lot of software to monitor these servers and to manage the information about them.<\/p>\n\n<p>There was all the hardware and software you can imagine: databases, application servers, front-end servers, routers, load balancers, firewalls, mail servers, authorization servers and so on.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-08\/datacentre600-600x500.jpg"
  },
  {
    "nid": "70",
    "title": "Virtual Internet Service Provider",
    "body": "<p>If you want a free email address, you can find a lot of them on the web.<\/p>\n\n<p>Many of these websites offering free email don’t actually do the job. There is another company behind the scenes doing it for them. They just put their name on the package.<\/p>\n\n<p>I worked for one of those companies behind the scenes.<\/p>\n\n<p>It’s where I’ve came to know about an object-oriented database for the first time in my life.<\/p>\n\n<p>It was a quite complex architecture with many servers involved.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-08\/broadband-world-600-600x500.png"
  },
  {
    "nid": "69",
    "title": "PLC programming",
    "body": "<p>Imagine having a big <a href="
    http:
    \
    /
    \
    /www.meccano.com
    \
    /
    ">Meccano<\/a> set with thousands of moving parts which you control using a computer.<\/p>\n\n<p>I have played with Meccano toys. They are fun. They have been around for more than a century. I am pleased to live, now, in the homeland of Meccano toys.<\/p>\n\n<p>When I was doing PLC programming, my Meccano was an industrial plant featuring more than two thousands devices to control such as balances, pumps, valves, mixers, coolers and more.<\/p>\n\n<p>Ten times per second my software had to compute opening or closing orders to send to those devices.<\/p>\n\n<p>Sure, it’s no game. You make a mistake and maybe you hurt someone. Or you stop production or make a lot of product go to waste.<\/p>\n\n<p>You can’t test this sort of software. You can only test it in production and have less than 15 minutes to fix any error, otherwise production stops.<\/p>\n\n<p>This is extreme programming!<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/control_room600-600x500.jpg"
  },
  {
    "nid": "68",
    "title": "Compass\/Sass",
    "body": "<p>Compass helps Sass authors write smarter stylesheets and empowers a community of designers and developers to create and share powerful frameworks. Put simply, <strong>Compass is a Sass framework<\/strong>, designed to make the work of styling the web smooth and efficient. Much like Rails as a web application framework for Ruby, <strong>Compass is a collection of helpful tools and battle-tested best practices for Sass<\/strong>.<\/p>",
    "langcode": "English",
    "field_ems_topic": "The tools I use",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/CompassSass.png"
  },
  {
    "nid": "67",
    "title": "WordPress",
    "body": "<p>What is WordPress? At its core, <strong>WordPress is the simplest, most popular way to create your own website or blog. <\/strong>In fact, WordPress powers <a href="
    https:
    \
    /
    \
    /kinsta.com
    \
    /wordpress-market-share
    \
    /
    ">over 29%<\/a> of all the websites on the Internet. Yes – more than one in four websites that you visit are likely powered by WordPress.<\/p>\n\n<p>On a slightly more technical level, WordPress is an open-source content management system licensed under GPLv2, which means that anyone can use or modify the WordPress software for free. A content management system is basically a tool that makes it easy to manage important aspects of your website – like content – without needing to know anything about programming.<\/p>\n\n<p>The end result is that WordPress makes building a website accessible to anyone – even people who aren’t developers.<\/p>",
    "langcode": "English",
    "field_ems_topic": "The tools I use",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/WordPress-logotype-wmark.png"
  },
  {
    "nid": "66",
    "title": "Drupal",
    "body": "<p>Drupal is content management software. It's used to make many of the websites and applications you use every day. Drupal has great standard features, like easy content authoring, reliable performance, and excellent security. But what sets it apart is its flexibility; modularity is one of its core principles. Its tools help you build the versatile, structured content that dynamic web experiences need.<\/p>\n\n<p>It's also a great choice for creating integrated digital frameworks. You can extend it with any one, or many, of thousands of add-ons. Modules expand Drupal's functionality. Themes let you customize your content's presentation. Distributions are packaged Drupal bundles you can use as starter-kits. Mix and match these components to enhance Drupal's core abilities. Or, integrate Drupal with external services and other applications in your infrastructure. No other content management software is this powerful and scalable.<\/p>",
    "langcode": "English",
    "field_ems_topic": "The tools I use",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/druplicon.png"
  },
  {
    "nid": "65",
    "title": "Angular",
    "body": "<p>Angular is a platform that makes it easy to build applications with the web. Angular combines declarative templates, dependency injection, end to end tooling, and integrated best practices to solve development challenges. Angular empowers developers to build applications that live on the web, mobile, or the desktop<\/p>",
    "langcode": "English",
    "field_ems_topic": "The tools I use",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Angular_0.png"
  },
  {
    "nid": "64",
    "title": "How do I make my application secure?",
    "body": "<p>I have worked for many years in a bank. There were 300+ servers providing internet services. Security was a top priority as you can imagine.<\/p>\n\n<p>Every incoming or outgoing communication was carefully inspected and needed authorization.<\/p>\n\n<p>A day the Shark begun to send distress signals. The Shark has nothing to do with the fish. It’s the codename of the IBM ESS, Enterprise Storage Server, which is a SAN system offering, in our installation, 600 GB of storage over fibre optic.<\/p>\n\n<p>The Shark was getting broken and sending diagnostic messages to Montpellier, France where IBM has a centralised remote support for SAN systems.<\/p>\n\n<p>The problem was that those messages weren’t reaching their destination because the authorization to send them hadn’t been given yet.<\/p>\n\n<p>The bank’s data-centre was a goldmine of security solutions: firewalls, intrusion detectors, anti-virus scanners, passwords changing every minute, permission policies, and cryptography to protect credit card numbers.<\/p>\n\n<p>Wifi was forbidden because it didn’t satisfy the high security levels required by the bank even if protected by security protocols like WPA and WPA2.<\/p>\n\n<p>More recently, I use Drupal’s solutions for security and apply security patches to the operating system. I prefer Linux to Windows for servers because it’s much safer.<\/p>\n\n<p>When I connect to a server I never use ftp, only sftp, and ssh instead of telnet.<\/p>",
    "langcode": "English",
    "field_ems_topic": "How I work",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/how-do-i-make-my-application-secure.jpg"
  },
  {
    "nid": "63",
    "title": "How do I make my application fast?",
    "body": "<p>When I was at the University, I wrote a programme to analyse data collected by a radar. My programme was quite slow. It needed 30 hours to generate just one view of the data.<\/p>\n\n<p>30 hours of processing time of an IBM mainframe are expensive, very expensive. Happily I could rewrite the programme making it faster. It needed only one hour after the change.<\/p>\n\n<p>The language used was the exotic APL. You need terminals with special keyboards to write software in APL. It’s like a set of mathematical symbols. This was making things more difficult.While creating a system intended to send production orders to an industrial plant, I needed to write my own database application because the ones available at that time were too slow.<\/p>\n\n<p>I had to write my own algorithms to manage tables, build and rebuild indexes, search and write information.<\/p>\n\n<p>Creating a data-warehouse which purpose was to study billions of telephonic calls, I had to be very careful not to write slow queries. Every one of them was lasting many hours. Some of them were lasting for a whole day or two. I had to optimise them carefully because we had “only” a month to provide the final result.<\/p>\n\n<p>One of them went from 20-30 hours of execution time to 30 minutes.<\/p>\n\n<p>I have written a server process to collect information from thousands of computers and form a distributed database. The information was about events and you could either slow down the event influx or put them in a queue. The process had to be very fast in order for it not to lose events. The server process was part of a project for Intel Corporation.<\/p>",
    "langcode": "English",
    "field_ems_topic": "How I work",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/6735947-xsmall.jpg"
  },
  {
    "nid": "62",
    "title": "Paris and worldwide",
    "body": "<p>I work with you in Paris, France and, remotely worldwide.<\/p>\n\n<p>Communication and cooperation tools I use are:<\/p>\n\n<ul><li>Skype<\/li>\n\t<li>Google Hangouts<\/li>\n\t<li>Appear.in<\/li>\n\t<li>Slack<\/li>\n\t<li>Email<\/li>\n\t<li>Mediawiki<\/li>\n\t<li>Github<\/li>\n\t<li>Confluence<\/li>\n<\/ul>",
    "langcode": "English",
    "field_ems_topic": "Where? How?",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/ParisAndWordwide400x400.png"
  },
  {
    "nid": "61",
    "title": "30 days money back guarantee",
    "body": "<p>Will we end up paying for useless software?<\/p>\n\n<p>Will we like it?<\/p>\n\n<p>This guy wants to be paid in advance! What if we waste money with him?<\/p>\n\n<p>Will we be able to work with him? What if we can’t understand each other?<\/p>\n\n<p>What if we discover that we wanted something completely different?<\/p>\n\n<p>Anything familiar?<\/p>\n\n<p>I know that software projects can be complex and misunderstandings are frequent.<\/p>\n\n<p>That’s why I offer a 30 days guarantee.<\/p>\n\n<p>I will work with you on your project for 30 days.<\/p>\n\n<p>I will build your application on my own server. You will be able to use it, but I will keep the source code.<\/p>\n\n<p>At the end of the 30 days period, you will evaluate the application.<\/p>\n\n<p>If you like it, you pay for that first 30 days period of work.<\/p>\n\n<p>If you don’t like it, you pay nothing. No questions asked!<\/p>\n\n<p>If you pay and decide to go on working on the application with me, I’ll give you the code and, from that point on, I’ll give you updated code every day.<\/p>\n\n<p>If your project is shorter than 30 days, it’s the same.<\/p>\n\n<p>You pay for the entire project if you like it. If you don’t, you pay nothing.<\/p>\n\n<p>This guarantee applies only to the first project I work on with you.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Where? How?",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/30-day-money-back1-scaled-down-centered-600x500.png"
  },
  {
    "nid": "60",
    "title": "I fix your problem or you pay nothing",
    "body": "<p>Have you got a nasty problem with your website or application?<\/p>\n\n<p>Let me have a look.<\/p>\n\n<p>It may be a problem I can fix in 3-5 working days.<\/p>\n\n<p>If it is, I’ll work on your problem for maximum 3, 4 o 5 working days.<\/p>\n\n<p>I’ll tell you in advance how many days I’ll work.<\/p>\n\n<p>If I don’t solve the problem you pay nothing.<\/p>\n\n<p>If it takes me a shorter time, you pay only for the time it took me.<\/p>\n\n<p>What do you think?<\/p>",
    "langcode": "English",
    "field_ems_topic": "Where? How?",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/3-5-days-pproblem-600x500.jpg"
  },
  {
    "nid": "59",
    "title": "Making business human",
    "body": "<h2>Making your business human<\/h2>\n\n<p>More and more people want a human business. Their priority is not money and success because they realise that lack of humanity will spoil the enjoyment of them.<\/p>\n\n<p>Sure you want to build a successful business and want to make nice money out of it, but you want to enjoy money and success as well. And that’s when humanity gets into the picture.<\/p>\n\n<p>Humanity is also essential to transform failure into a positive occasion of learning.<\/p>\n\n<h2>Taking inspiration from Rasheed<\/h2>\n\n<p>I have known <a href="
    http:
    \
    /
    \
    /rasaru.com
    \
    /
    ">Rasheed<\/a> personally.<\/p>\n\n<p>He is very inspirational. He is the author of <a href="
    http:
    \
    /
    \
    /rasaru.com
    \
    /product
    \
    /soul-trader-putting-the-heart-back-into-your-business
    \
    /
    ">“Soul Trader – Putting the Heart into Your Business”<\/a>. It’s a precious book from which you can learn a lot, especially about how to make your business human.<\/p>\n\n<h2>Soul Trader is packed with advice<\/h2>\n\n<p>The book starts with “Clarity”. Rasheed tells us about how to make clarity in our business. He helps us answer many questions and shows us how the answers will bring clarity and clear doubts. This is a very good thing to do and it’s good to do it with the help of someone who has a different point of view.<\/p>\n\n<p>Soul Trader is a goldmine of advice and practical ideas about many other subjects, like cooperation, talking with clients and creativity.<\/p>\n\n<h2>Clarity in my business<\/h2>\n\n<p>I made some clarity in my business as software developer.<\/p>\n\n<p>I realised that I love solving problems. I also love taking time to understand what my clients want or need to build.<\/p>\n\n<p>I enjoy learning as well. New technologies sprout every day and they are examples of human ingenuity.<\/p>\n\n<p>I enjoy seeing how humans produce new ideas all the time.<\/p>\n\n<h2>Compassion in business?<\/h2>\n\n<p>Is there any space for compassion in business? Isn’t it a dog-eat-dog situation?<\/p>\n\n<p>This is what I used to think. Now I think that without compassion a business becomes a chore that makes nobody happy.<\/p>\n\n<p>First thing first we need to use our compassion to take care of ourselves.<\/p>\n\n<p>Our well-being needs to be well above any goal we want to achieve because otherwise we are likely not to enjoy it.<\/p>\n\n<h2>Listening is good<\/h2>\n\n<p>Listening makes the person you are talking to feel heard.<\/p>\n\n<p>Listening is related to compassion and starts from ourselves. We need to listen to ourselves before we can listen to others.<\/p>\n\n<p>Listening is very important when working with clients especially when what we want to build is complex or new.<\/p>\n\n<p>This doesn’t mean that you renounce to speak your opinion if it’s different from your client’s one.<\/p>\n\n<p>It would be bad service.<\/p>\n\n<h2>Richard is my best friend<\/h2>\n\n<p>Richard is a client of mine. But he is more of a friend than of a client.<\/p>\n\n<p>I ask him for advice about my personal life too.<\/p>\n\n<p>I built a fantastic application for him.<\/p>\n\n<p>It was challenging because there were patented technologies involved with the complexity they imply.<\/p>\n\n<p>I was listening to him and taking time to understand.<\/p>\n\n<h2>Conclusion<\/h2>\n\n<p>Rasheed is an inspiring business and life coach, if you feel the need for a human business.<\/p>\n\n<p>His “Soul Trader” contains a lot of useful and inspiring advice.<\/p>\n\n<p>If you think that compassion and humanity are needed to find a balance between business and life, you may want to join the club of the Soul Traders.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Where? How?",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-07\/SoulTrader-643x500.png"
  },
  {
    "nid": "58",
    "title": "Politique de confidentialité",
    "body": "<p>DÉCLARATION DE CONFIDENTIALITÉ<br \/><br \/>\n----<br \/><br \/>\nARTICLE 1 – RENSEIGNEMENTS PERSONNELS RECUEILLIS<br \/><br \/>\nLorsque vous effectuez un achat sur notre boutique, dans le cadre de notre processus d’achat et de vente, nous recueillons les renseignements personnels que vous nous fournissez, tels que votre nom, votre adresse et votre adresse e-mail.<br \/><br \/>\nLorsque vous naviguez sur notre boutique, nous recevons également automatiquement l’adresse de protocole Internet (adresse IP) de votre ordinateur, qui nous permet d’obtenir plus de détails au sujet du navigateur et du système d’exploitation que vous utilisez.<br \/><br \/>\nMarketing par e-mail (le cas échéant): Avec votre permission, nous pourrions vous envoyer des e-mails au sujet de notre boutique, de nouveaux produits et d’autres mises à jour.<br \/><br \/><br \/>\nARTICLE 2 - CONSENTEMENT<br \/><br \/>\nComment obtenez-vous mon consentement?<br \/><br \/>\nLorsque vous nous fournissez vos renseignements personnels pour conclure une transaction, vérifier votre carte de crédit, passer une commande, planifier une livraison ou retourner un achat, nous présumons que vous consentez à ce que nous recueillions vos renseignements et à ce que nous les utilisions à cette fin uniquement.<br \/><br \/>\nSi nous vous demandons de nous fournir vos renseignements personnels pour une autre raison, à des fins de marketing par exemple, nous vous demanderons directement votre consentement explicite, ou nous vous donnerons la possibilité de refuser.<br \/><br \/><br \/>\nComment puis-je retirer mon consentement?<br \/><br \/>\nSi après nous avoir donné votre consentement, vous changez d’avis et ne consentez plus à ce que nous puissions vous contacter, recueillir vos renseignements ou les divulguer, vous pouvez nous en aviser en nous contactant à <a href="
    mailto: emanuele@emanuelesantanche.com
    ">emanuele@emanuelesantanche.com<\/a> ou par courrier à: Emanuele Santanche<br \/><br \/><br \/>\nARTICLE 3 – DIVULGATION<br \/><br \/>\nNous pouvons divulguer vos renseignements personnels si la loi nous oblige à le faire ou si vous violez nos Conditions Générales de Vente et d’Utilisation.<br \/><br \/><br \/>\nARTICLE 4 – SHOPIFY<br \/><br \/>\nNotre boutique est hébergée sur Shopify Inc. Ils nous fournissent la plate-forme e-commerce en ligne qui nous permet de vous vendre nos services et produits.<br \/><br \/>\nVos données sont stockées dans le système de stockage de données et les bases de données de Shopify, et dans l’application générale de Shopify. Vos données sont conservées sur un serveur sécurisé protégé par un pare-feu.<br \/><br \/><br \/>\nPaiement:<br \/><br \/>\nSi vous réalisez votre achat par le biais d’une passerelle de paiement direct, dans ce cas Shopify stockera vos renseignements de carte de crédit. Ces renseignements sont chiffrés conformément à la norme de sécurité des données établie par l’industrie des cartes de paiement (norme PCI-DSS). Les renseignements relatifs à votre transaction d’achat sont conservés aussi longtemps que nécessaire pour finaliser votre commande. Une fois votre commande finalisée, les renseignements relatifs à la transaction d’achat sont supprimés.<br \/><br \/>\nToutes les passerelles de paiement direct respectent la norme PCI-DSS, gérée par le conseil des normes de sécurité PCI, qui résulte de l’effort conjoint d’entreprises telles que Visa, MasterCard, American Express et Discover.<br \/><br \/>\nLes exigences de la norme PCI-DSS permettent d’assurer le traitement sécurisé des données de cartes de crédit par notre boutique et par ses prestataires de services.<br \/><br \/>\nPour plus d’informations, veuillez consulter les Conditions d’Utilisation de Shopify ici ou la Politique de Confidentialité ici.<br \/><br \/><br \/>\nARTICLE 5 – SERVICES FOURNIS PAR DES TIERS<br \/><br \/><br \/>\nDe manière générale, les fournisseurs tiers que nous utilisons vont uniquement recueillir, utiliser et divulguer vos renseignements dans la mesure du nécessaire pour pouvoir réaliser les services qu’ils nous fournissent.<br \/><br \/>\nCependant, certains tiers fournisseurs de services, comme les passerelles de paiement et autres processeurs de transactions de paiement, possèdent leurs propres politiques de confidentialité quant aux renseignements que nous sommes tenus de leur fournir pour vos transactions d’achat.<br \/><br \/>\nEn ce qui concerne ces fournisseurs, nous vous recommandons de lire attentivement leurs politiques de confidentialité pour que vous puissiez comprendre la manière dont ils traiteront vos renseignements personnels.<br \/><br \/>\nIl ne faut pas oublier que certains fournisseurs peuvent être situés ou avoir des installations situées dans une juridiction différente de la vôtre ou de la nôtre. Donc si vous décidez de poursuivre une transaction qui requiert les services d’un fournisseur tiers, vos renseignements pourraient alors être régis par les lois de la juridiction dans laquelle ce fournisseur se situe ou celles de la juridiction dans laquelle ses installations sont situées.<br \/><br \/>\nÀ titre d’exemple, si vous êtes situé au Canada et que votre transaction est traitée par une passerelle de paiement située aux États-Unis, les renseignements vous appartenant qui ont été utilisés pour conclure la transaction pourraient être divulgués en vertu de la législation des États-Unis, y compris le Patriot Act.<br \/><br \/>\nUne fois que vous quittez le site de notre boutique ou que vous êtes redirigé vers le site web ou l’application d’un tiers, vous n’êtes plus régi par la présente Politique de Confidentialité ni par les Conditions Générales de Vente et d’Utilisation de notre site web.<br \/><br \/><br \/>\nLiens<br \/><br \/>\nVous pourriez être amené à quitter notre site web en cliquant sur certains liens présents sur notre site. Nous n’assumons aucune responsabilité quant aux pratiques de confidentialité exercées par ces autres sites et vous recommandons de lire attentivement leurs politiques de confidentialité.<br \/><br \/><br \/>\nARTICLE 6 – SÉCURITÉ<br \/><br \/>\nPour protéger vos données personnelles, nous prenons des précautions raisonnables et suivons les meilleures pratiques de l’industrie pour nous assurer qu’elles ne soient pas perdues, détournées, consultées, divulguées, modifiées ou détruites de manière inappropriée.<br \/><br \/>\nSi vous nous fournissez vos informations de carte de crédit, elles seront chiffrées par le biais de l’utilisation du protocole de sécurisation SSL et conservées avec un chiffrement de type AES-256. Bien qu’aucune méthode de transmission sur Internet ou de stockage électronique ne soit sûre à 100 %, nous suivons toutes les exigences de la norme PCI-DSS et mettons en œuvre des normes supplémentaires généralement reconnues par l’industrie.<br \/><br \/><br \/>\nFICHIERS TÉMOINS (COOKIES)<br \/><br \/>\nVoici une liste de fichiers témoins que nous utilisons. Nous les avons énumérés ici pour que vous ayez la possibilité de choisir si vous souhaitez les autoriser ou non.<br \/><br \/>\n_session_id, identificateur unique de session, permet à Shopify de stocker les informations relatives à votre session (référent, page de renvoi, etc.).<br \/><br \/>\n_shopify_visit, aucune donnée retenue, persiste pendant 30 minutes depuis la dernière visite. Utilisé par le système interne de suivi des statistiques du fournisseur de notre site web pour enregistrer le nombre de visites.<br \/><br \/>\n_shopify_uniq, aucune donnée retenue, expire à minuit (selon l’emplacement du visiteur) le jour suivant. Calcule le nombre de visites d’une boutique par client unique.<br \/><br \/>\ncart, identificateur unique, persiste pendant 2 semaines, stocke l’information relative à votre panier d’achat.<br \/><br \/>\n_secure_session_id, identificateur unique de session<br \/><br \/>\nstorefront_digest, identificateur unique, indéfini si la boutique possède un mot de passe, il est utilisé pour savoir si le visiteur actuel a accès.<br \/><br \/><br \/><br \/>\nARTICLE 7 – ÂGE DE CONSENTEMENT<br \/><br \/>\nEn utilisant ce site, vous déclarez que vous avez au moins l’âge de la majorité dans votre État ou province de résidence, et que vous nous avez donné votre consentement pour permettre à toute personne d’âge mineur à votre charge d’utiliser ce site web.<br \/><br \/><br \/>\nARTICLE 8 – MODIFICATIONS APPORTÉES À LA PRÉSENTE POLITIQUE DE CONFIDENTIALITÉ<br \/><br \/>\nNous nous réservons le droit de modifier la présente politique de confidentialité à tout moment, donc veuillez s’il vous plait la consulter fréquemment. Les changements et les clarifications prendront effet immédiatement après leur publication sur le site web. Si nous apportons des changements au contenu de cette politique, nous vous aviserons ici qu’elle a été mise à jour, pour que vous sachiez quels renseignements nous recueillons, la manière dont nous les utilisons, et dans quelles circonstances nous les divulguons, s’il y a lieu de le faire.<br \/><br \/>\nSi notre boutique fait l’objet d’une acquisition par ou d’une fusion avec une autre entreprise, vos renseignements pourraient être transférés aux nouveaux propriétaires pour que nous puissions continuer à vous vendre des produits.<br \/><br \/><br \/>\nQUESTIONS ET COORDONNÉES<br \/><br \/>\nSi vous souhaitez: accéder à, corriger, modifier ou supprimer toute information personnelle que nous avons à votre sujet, déposer une plainte, ou si vous souhaitez simplement avoir plus d’informations, contactez notre agent responsable des normes de confidentialité à <a href="
    mailto: emanuele@emanuelesantanche.com
    ">emanuele@emanuelesantanche.com<\/a> ou par courrier à Emanuele Santanche<br \/><br \/>\n[Re: Agent des Normes de Confidentialité]<br \/><br \/>\n[]<br \/><br \/>\n----<\/p>",
    "langcode": "French",
    "field_ems_topic": "Small print",
    "sticky": "Off",
    "field_image": ""
  },
  {
    "nid": "58",
    "title": "Privacy Policy",
    "body": "<p>Privacy Policy<\/p>\n\n<p>Effective date: July 24, 2018<\/p>\n\n<p>Emanuele Santanche ("
    us
    ", "
    we
    ", or "
    our
    ") operates the http:\/\/emanuelesantanche.com website and the Emanuele Santanche mobile application (the "
    Service
    ").<\/p>\n\n<p>This page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data. This Privacy Policy for Emanuele Santanche is powered by <a href="
    https:
    \
    /
    \
    /privacypolicies.com
    \
    /free-privacy-policy-generator
    \
    /
    ">PrivacyPolicies.com<\/a>.<\/p>\n\n<p>We use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy. Unless otherwise defined in this Privacy Policy, terms used in this Privacy Policy have the same meanings as in our Terms and Conditions.<\/p>\n\n<h2>Information Collection And Use<\/h2>\n\n<p>We collect several different types of information for various purposes to provide and improve our Service to you.<\/p>\n\n<h3>Types of Data Collected<\/h3>\n\n<h4>Personal Data<\/h4>\n\n<p>While using our Service, we may ask you to provide us with certain personally identifiable information that can be used to contact or identify you ("
    Personal
    Data
    "). Personally identifiable information may include, but is not limited to:<\/p>\n\n<ul><li>Email address<\/li>\n\t<li>First name and last name<\/li>\n\t<li>Cookies and Usage Data<\/li>\n<\/ul><h4>Usage Data<\/h4>\n\n<p>We may also collect information that your browser sends whenever you visit our Service or when you access the Service by or through a mobile device ("
    Usage
    Data
    ").<\/p>\n\n<p>This Usage Data may include information such as your computer's Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that you visit, the time and date of your visit, the time spent on those pages, unique device identifiers and other diagnostic data.<\/p>\n\n<p>When you access the Service by or through a mobile device, this Usage Data may include information such as the type of mobile device you use, your mobile device unique ID, the IP address of your mobile device, your mobile operating system, the type of mobile Internet browser you use, unique device identifiers and other diagnostic data.<\/p>\n\n<h4>Tracking &amp; Cookies Data<\/h4>\n\n<p>We use cookies and similar tracking technologies to track the activity on our Service and hold certain information.<\/p>\n\n<p>Cookies are files with small amount of data which may include an anonymous unique identifier. Cookies are sent to your browser from a website and stored on your device. Tracking technologies also used are beacons, tags, and scripts to collect and track information and to improve and analyze our Service.<\/p>\n\n<p>You can instruct your browser to refuse all cookies or to indicate when a cookie is being sent. However, if you do not accept cookies, you may not be able to use some portions of our Service.<\/p>\n\n<p>Examples of Cookies we use:<\/p>\n\n<ul><li><strong>Session Cookies.<\/strong> We use Session Cookies to operate our Service.<\/li>\n\t<li><strong>Preference Cookies.<\/strong> We use Preference Cookies to remember your preferences and various settings.<\/li>\n\t<li><strong>Security Cookies.<\/strong> We use Security Cookies for security purposes.<\/li>\n<\/ul><h2>Use of Data<\/h2>\n\n<p>Emanuele Santanche uses the collected data for various purposes:<\/p>\n\n<ul><li>To provide and maintain the Service<\/li>\n\t<li>To notify you about changes to our Service<\/li>\n\t<li>To allow you to participate in interactive features of our Service when you choose to do so<\/li>\n\t<li>To provide customer care and support<\/li>\n\t<li>To provide analysis or valuable information so that we can improve the Service<\/li>\n\t<li>To monitor the usage of the Service<\/li>\n\t<li>To detect, prevent and address technical issues<\/li>\n<\/ul><h2>Transfer Of Data<\/h2>\n\n<p>Your information, including Personal Data, may be transferred to — and maintained on — computers located outside of your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.<\/p>\n\n<p>If you are located outside France and choose to provide information to us, please note that we transfer the data, including Personal Data, to France and process it there.<\/p>\n\n<p>Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.<\/p>\n\n<p>Emanuele Santanche will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy Policy and no transfer of your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of your data and other personal information.<\/p>\n\n<h2>Disclosure Of Data<\/h2>\n\n<h3>Legal Requirements<\/h3>\n\n<p>Emanuele Santanche may disclose your Personal Data in the good faith belief that such action is necessary to:<\/p>\n\n<ul><li>To comply with a legal obligation<\/li>\n\t<li>To protect and defend the rights or property of Emanuele Santanche<\/li>\n\t<li>To prevent or investigate possible wrongdoing in connection with the Service<\/li>\n\t<li>To protect the personal safety of users of the Service or the public<\/li>\n\t<li>To protect against legal liability<\/li>\n<\/ul><h2>Security Of Data<\/h2>\n\n<p>The security of your data is important to us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your Personal Data, we cannot guarantee its absolute security.<\/p>\n\n<h2>Service Providers<\/h2>\n\n<p>We may employ third party companies and individuals to facilitate our Service ("
    Service
    Providers
    "), to provide the Service on our behalf, to perform Service-related services or to assist us in analyzing how our Service is used.<\/p>\n\n<p>These third parties have access to your Personal Data only to perform these tasks on our behalf and are obligated not to disclose or use it for any other purpose.<\/p>\n\n<h3>Analytics<\/h3>\n\n<p>We may use third-party Service Providers to monitor and analyze the use of our Service.<\/p>\n\n<ul><li>\n\t<p><strong>Google Analytics<\/strong><\/p>\n\n\t<p>Google Analytics is a web analytics service offered by Google that tracks and reports website traffic. Google uses the data collected to track and monitor the use of our Service. This data is shared with other Google services. Google may use the collected data to contextualize and personalize the ads of its own advertising network.<\/p>\n\n\t<p>For more information on the privacy practices of Google, please visit the Google Privacy &amp; Terms web page: <a href="
    https:
    \
    /
    \
    /policies.google.com
    \
    /privacy
    ?
    hl=en
    ">https:\/\/policies.google.com\/privacy?hl=en<\/a><\/p>\n\t<\/li>\n<\/ul><h2>Links To Other Sites<\/h2>\n\n<p>Our Service may contain links to other sites that are not operated by us. If you click on a third party link, you will be directed to that third party's site. We strongly advise you to review the Privacy Policy of every site you visit.<\/p>\n\n<p>We have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.<\/p>\n\n<h2>Children's Privacy<\/h2>\n\n<p>Our Service does not address anyone under the age of 18 ("
    Children
    ").<\/p>\n\n<p>We do not knowingly collect personally identifiable information from anyone under the age of 18. If you are a parent or guardian and you are aware that your Children has provided us with Personal Data, please contact us. If we become aware that we have collected Personal Data from children without verification of parental consent, we take steps to remove that information from our servers.<\/p>\n\n<h2>Changes To This Privacy Policy<\/h2>\n\n<p>We may update our Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page.<\/p>\n\n<p>We will let you know via email and\/or a prominent notice on our Service, prior to the change becoming effective and update the "
    effective
    date
    " at the top of this Privacy Policy.<\/p>\n\n<p>You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.<\/p>\n\n<h2>Contact Us<\/h2>\n\n<p>If you have any questions about this Privacy Policy, please contact us:<\/p>\n\n<ul><li>By email: emanuele@emanuelesantanche.com<\/li>\n<\/ul>",
    "langcode": "English",
    "field_ems_topic": "Small print",
    "sticky": "Off",
    "field_image": ""
  },
  {
    "nid": "52",
    "title": "Installing Drupal 8 alongside React",
    "body": "<h2>What do I want to achieve?<\/h2>\n\n<p>I want to install Drupal 8 alongside my existing installation of React Application Server.<\/p>\n\n<h2>What is Drupal 8 for?<\/h2>\n\n<p>Drupal 8 will work as backend for my React application.<\/p>\n\n<h2>What is my React application about?<\/h2>\n\n<p>It’s about demonstrating the use of React to fetch information about products from a Drupal backend and show it.<\/p>\n\n<p>The React application will demonstrate the possibility to rank products by dragging and dropping their images.<\/p>\n\n<p>You can see the application at work here: <a href="
    http:
    \
    /
    \
    /rankit.emanuelesantanche.com
    \
    /
    ">Rankit!<\/a><\/p>\n\n<h2>What is the architecture like?<\/h2>\n\n<p>There are many ways to describe it.<\/p>\n\n<p>I’m going to focus on how the web server processes the requests coming from the browser.<\/p>\n<img alt="
    Architecture
    Rankit
    Http
    Queries
    " data-entity-type="
    file
    " data-entity-uuid="
    85ef5eb7-2cd9-41bf-984a-cebf6cc5ada6
    " src="
    \
    /
    \
    /backend.emanuelesantanche.com
    \
    /sites
    \
    /default
    \
    /files
    \
    /inline-images
    \
    /ArchitectureRankitHttpQueries-1024x724_0.png
    " width="
    100
    %
    " class="
    align-center
    " \/><p>As the application runs, there will be requests to the React Application Server meant to tell the browser what to display and how to interact with the user.<\/p>\n\n<p>There will be requests to the same server to know how to fetch information about products from the Drupal backend.<\/p>\n\n<p>When fulfilling these requests, the React Application Server will tell the browser that it has to send requests to the Drupal backend directly and will instruct the browser to do so.<\/p>\n\n<p>The browser will send these requests to the Drupal backend following the instructions the React Application Server gave it.<\/p>\n\n<p>From the image above you see that the web server forwards requests for the backend to the Php Application Server. This is due to Drupal being written in PHP. The Php Application Server runs every PHP file that needs to be executed.<\/p>\n\n<h2>The environment<\/h2>\n\n<p>Web server, Php Application Server and React Application Server run on a Debian 8 server. There is a MySQL server as well because Drupal needs it.<\/p>\n\n<p>The web server root folder is \/srv\/sites\/rankit.emanuelesantanche.com\/.<\/p>\n\n<p>The subfolder rankitapp contains everything the React Application Server needs to run.<\/p>\n\n<p>The subfolder backend will contain the installation of Drupal 8 I’m going to perform.<\/p>\n\n<h2>Configure Nginx to run the Drupal backend<\/h2>\n\n<p>As I said above, the web server, in my case Nginx, will forward requests meant for Drupal to the Php Application server, which will run the php files containing Drupal’s logic.<\/p>\n\n<p>I have to configure Nginx for it to do this.<\/p>\n\n<p>The main part of the Nginx configuration I need is this one:<\/p>\n\n<blockquote>\n<p><code>location \/backend {<\/code><br \/><code>    if (!-e $request_filename) {<\/code><br \/><code>        # We need \/backend here because the root is \/srv\/sites\/rankit.emanuelesantanche.com\/<\/code><br \/><code>        # The rewrite pattern strips "
    \
    /backend
    " away because Drupal<\/code><br \/><code>        # wouldn't find a page like "
    \
    /backend
    \
    /user
    " in the database<\/code><br \/><code>        # The rewrite pattern will transform "
    \
    /backend
    \
    /user
    " into<\/code><br \/><code>        # "
    \
    /user
    " and Drupal will find it<\/code><br \/><code>        rewrite ^\/backend(.*)$ \/backend\/index.php?q=$1 last;<\/code><br \/><code>    }<\/code><br \/><code>}<\/code><\/p>\n<\/blockquote>",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/ArchitectureRankitHttpQueries-1123x500.png"
  },
  {
    "nid": "51",
    "title": "Unicredit",
    "body": "<p>At the request of person concerned and for the purposes permitted by the law, it is hereby certified that Mr. Emanuele Santanché, born in Ascoli Piceno on June 14 1966 and residing, as of the present letter, in Monterondo (Rome), via dei Garibaldini 41, has been employee of this company from January 1, 2001 to February 28, 2009<\/p>\n\n<p>Mr. Santanché, in the course of service gave for the Kyneste S.p.A. company has been assigned to the technology area, Infrastructure Organization Unit, DBA Activity, whose goal was to treat, according to company policies, the installation and the maintenance of RDBMS systems, the creation, the monitoring, the management and the back-up of the data bases in charge of the<br \/>\nKyneste S.p.A. Company.<\/p>\n\n<p>We hereby certify, at last, that Mr. Santanché has served in the context of the program Market Investment Bank, on behalf of ‘Banca di Roma’ (former ‘Gruppo Capitalia’, now ‘Unicredit Group’) on the Murex project during the period 2002-2008.<\/p>\n\n<p>Giovanni Serra<br \/>\nHuman Resources Responsible<\/p>\n\n<p>Marco Tacchetti<br \/>\nTechnology Area Responsible<\/p>",
    "langcode": "English",
    "field_ems_topic": "Testimonials",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/Unicredit.png"
  },
  {
    "nid": "50",
    "title": "IBM for Government (Prefecture)",
    "body": "<p>Hereby Mario Notturno of IBM Semea S.p.A. certifies the participation of Emanuele Maria Santanchè, as Software Development Project Manager, in the project ‘Milan Efficiency’ commissioned by the client ‘Milan Prefecture’ (in Italy Prefectures are similar to UK counties).<\/p>\n\n<h2>Projects goals<\/h2>\n\n<p>The project’s goal was to digitize the complex administrative procedure aiming to evaluate appeals against fines.<\/p>\n\n<p>These fines had been imposed for violations of highway code rules.<\/p>\n\n<p>After the project’s success, the information system built could have been adopted at national level, so much was at stake.<\/p>\n\n<p>The application had to manage the information and the documents related to each case. It had to support the decisional workflow leading to the final evaluation of each case.<\/p>\n\n<p>The analysis of the functionalities which the application had to implement required a deep study of the highway code rules and the procedure followed to evaluate the appeals.<\/p>\n\n<h2>Project numbers<\/h2>\n\n<p>About 30 people have worked on this project. Eight of them were directly managed by Emanuele Santanchè. The project had a value of about £400,000.<\/p>\n\n<h2>Activities performed by Emanuele Santanchè<\/h2>\n\n<p>Emanuele Santanchè performed project management, management of relationships with suppliers, requirements analysis, configuration management, management of the settings required by 12 software systems and 11 hardware devices, logistic management of installations and transportations.<\/p>\n\n<h2>Difficulties overcome<\/h2>\n\n<p>Emanuele Santanchè had to solve significant difficulties related to long delays in the acquisition of the resources needed to achieve the project’s goals.<\/p>\n\n<p>Significant fines were to be imposed if final delivery of the project was subject to delay.<\/p>\n\n<p>The client wasn’t collaborative, especially in the analysis phase.<\/p>\n\n<h2>Achievements<\/h2>\n\n<p>The project has achieved its goals. No fines for delays have been paid. The competent authority has given the green light to the adoption of the system by every Italian Prefecture. There are 102 Prefectures in Italy.<\/p>\n\n<p>Rome, 11\/12\/1998<\/p>\n\n<p>Signed by Mario Notturno of IBM Semea S.p.A.<\/p>\n\n<p>(the original is available)<\/p>",
    "langcode": "English",
    "field_ems_topic": "Testimonials",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/IBMPrefecture.png"
  },
  {
    "nid": "49",
    "title": "IBM – Intel Corporation",
    "body": "<p>Hereby Massimo Zannori of IBM Semea S.p.A. certifies the participation of Emanuele Maria Santanchè, as Software Developer, in the project ‘Performance Monitoring’ realised by IBM Semea S.p.A. for the client Intel Corporation.<\/p>\n\n<h2>Architecture and functionalities of the information system ‘Performance Monitoring’<\/h2>\n\n<p>The system is composed of a three-level network of computers.<\/p>\n\n<p>At the top tier there are UNIX servers through which it’s possible to access a distributed database physically present in the RAMs of tens of Windows NT servers. OS\/2 servers are employed as well.<\/p>\n\n<p>These servers build their portion of database gathering information coming from third-level computers connected to them.<\/p>\n\n<p>This whole system has, as its goal, to collect information about the performance of applications running on the third-level computers. This information is subsequently elaborated for statistical purposes.<\/p>\n\n<h2>Structure of the distributed database and nature of the protocols used to manage and transmit data<\/h2>\n\n<p>The distributed database has a structure defined according to the criteria used by the SNMP protocol.<\/p>\n\n<p>The latter defines the information produced and managed using a data definition standard named MIB (Management Information Base).<\/p>\n\n<p>The MIB, with its definitions, is found in the top level UNIX servers while the second level servers physically hold the actual information.<\/p>\n\n<p>The second level servers deliver the information to the top level servers according to the standard defined by the MIB.<\/p>\n\n<p>Data transmission uses the protocols SNMP, TCP and UDP.<\/p>\n\n<h2>Project organization<\/h2>\n\n<p>The whole ‘Performance Monitoring’ project was quite big. It lasted for many years and many people worked on it.<\/p>\n\n<p>The IBM Rome Software Laboratory was in charge of it.<\/p>\n\n<h2>Activities performed by Emanuele Santanchè<\/h2>\n\n<p>Emanuele Santanchè’s assignment was to convert the OS\/2 version of the software managing the second level servers into a Windows NT version.<\/p>\n\n<p>Working on this assignment, a change in the software architecture had been in order because the OS\/2 architecture was based on an independent process while the Windows NT architecture uses DLLs whose functions were called by the SNMP Agent process.<\/p>\n\n<p>A substantial part of the SNMP protocol as implemented by OS\/2 has been rewritten because the Windows NT’s implementation of SNMP offers far fewer functionalities than the OS\/2 counterpart.<\/p>\n\n<p>Doing the conversion from OS\/2 to Windows, the software was improved by increasing its ability to reply to the messages coming from the first and third level computers.<\/p>\n\n<p>This was achieved by introducing multi-thread architecture and inter-thread synchronization.<\/p>\n\n<p>The Windows NT SNMP agent presented some bugs and, since its code couldn’t be changed, workarounds had been implemented to solve the malfunctioning.<\/p>\n\n<p>Rome, 15\/3\/1999<\/p>\n\n<p>Signed by Massimo Zannori of IBM Semea S.p.A.<\/p>\n\n<p>(the original is available)<\/p>",
    "langcode": "English",
    "field_ems_topic": "Testimonials",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-08\/Intel_logo600x600.png"
  },
  {
    "nid": "48",
    "title": "Making Earth-satellite communications better",
    "body": "<p>This was a project by the CNR, the Italian <a href="
    http:
    \
    /
    \
    /www.cnr.it
    \
    /sitocnr
    \
    /Englishversion
    \
    /Englishversion.html
    ">National Research Council<\/a>. It was part of a bigger project, the realization of the Olympus communications satellite.<\/p>\n\n<p>The problem is: when it rains, communications are disturbed, so we use a backup antenna to communicate when the main one can’t communicate because of the rain.<\/p>\n\n<p>What distance should there be between the two antennas to maximize the likelihood that the backup antenna is not under the same rain as the main antenna?<\/p>\n\n<p>Using an IBM Series 3000 mainframe, I wrote a program to analyse years of measurements taken by a radar.<\/p>\n\n<p>I used a very esoteric programming language named APL. I needed a special keyboard to write in that language.<\/p>\n\n<p>I think that the most fun part was to go around with mainframe tapes and see people gaze at them.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-07\/C-band_Radar-dish_Antenna600-600x500.jpg"
  },
  {
    "nid": "47",
    "title": "A laser eye for robots",
    "body": "<p>This was my thesis. I created a laser sensor which allowed a robot to determine the position of an object more accurately and avoid dropping it.<\/p>\n\n<p>It was based on the same technology used to make laser light shows.<\/p>\n\n<p>The program architecture was based on components and it was ahead of its time.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-07\/IndustrialRobotSH600-600x500.jpg"
  },
  {
    "nid": "46",
    "title": "Intel Corporation and its thousands of servers",
    "body": "<p>I worked in the IBM Rome Software Laboratory on a project for the Intel Corporation.<\/p>\n\n<p>My goal was to migrate an SNMP server from OS\/2 to Windows. The server application was intended to run on thousands of servers gathering information in real time about applications’ performance.<\/p>\n\n<p>The software was part of the Tivoli Suite.<\/p>\n\n<p>I had to write part of the SNMP protocol because the OS\/2 implementation of it had more functionalities than the Windows one.<\/p>\n\n<p>In fact, OS\/2 allows an SNMP server to act as a server on behalf of other non-SNMP-enabled devices, while under Windows this is not possible.<\/p>\n\n<p>The system was one with three levels with a main server gathering SNMP information from the second-level servers. These servers were gathering information about performance from computers running some applications.<\/p>\n\n<p>When writing my code, I added a multi-threaded architecture improving performance in processing packets. Before, the system was losing a lot of packets.<\/p>\n\n<p>I had to identify a couple of errors in Windows’ SNMP protocol and to find a workaround for them.<\/p>\n\n<p>One more problem was the completely different architecture of the OS\/2 implementation of the SNMP protocol. Under OS\/2, the SNMP protocol is managed by an independent process, while, under Windows, it is managed by a DLL providing callback functions.<\/p>\n\n<p>I rank this experience #1 because it has been very rewarding to build a program intended to run on thousands of servers and requiring a high-quality execution.<\/p>",
    "langcode": "English",
    "field_ems_topic": "Success stories",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/Intel_logo600x600.png"
  },
  {
    "nid": "14",
    "title": "PHP",
    "body": "<p>PHP is a popular general-purpose scripting language that is especially suited to web development.<\/p>\n\n<p>Fast, flexible and pragmatic, PHP powers everything from your blog to the most popular websites in the world.<\/p>",
    "langcode": "English",
    "field_ems_topic": "The tools I use",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-07\/php-logo.png"
  },
  {
    "nid": "13",
    "title": "How do I make my application easy to troubleshoot?",
    "body": "<p>This was my graduation thesis. I created a laser sensor which allowed a robot to determine the position of an object more accurately and avoid dropping it. It was based on the same technology used to make laser light shows. The program architecture was based on components.<\/p>\n\n<p>This component architecture was what today is called object-oriented programming. You can benefit from it even if your programming language is not object-oriented.<\/p>\n\n<p>It made the software much easier to troubleshoot and to expand.<\/p>\n\n<p>Working for Intel Corporation, I structured the application so well that very few errors were found at testing time. Structure is everything to create an easy-to-troubleshoot application.<\/p>\n\n<p>I have written a lot of PLC software. You can’t even test it but in production, when you have only 15 minutes to fix any error or the industrial plant has to be stopped.<\/p>\n\n<p>Sure I had to make the application easy to troubleshoot.<\/p>\n\n<p>Working in Camberley, UK, to create a prototype and having only 2 months to make it, I had to give the prototype a good structure in order for it to be quickly built without renouncing to quality.<\/p>\n\n<p>I have worked for years in a production environment and I know what an application has to look like for it to easy to troubleshoot when you have stringent SLAs to respect.<\/p>\n\n<p>Structure, documentation and good error handling make an application easy to troubleshoot and I have dealt with them many times.<\/p>",
    "langcode": "English",
    "field_ems_topic": "How I work",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-07\/5267178-xsmall.jpg"
  },
  {
    "nid": "12",
    "title": "CSS in JS",
    "body": "<p>JSS is a more powerful abstraction over CSS. It uses JavaScript as a language to describe styles in a declarative and maintainable way. It is a high performance JS to CSS compiler which works at runtime and server-side. This core library is low level and framework agnostic. It is about 6KB (minified and gzipped) and is extensible via plugins API.<\/p>\n\n<p>Feel free to ask any JSS related questions on twitter by using hashtag #cssinjs and mentioning @oleg008, watch my latest talk about "
    Unique
    Value
    Proposition
    of
    CSSinJS
    " and try it on a playground.<\/p>\n\n<p>If you are a Sass (SCSS) user, this course will show how to express popular Sass language features using latest JavaScript features: Convert SCSS (Sass) to CSS-in-JS.<\/p>\n\n<p>See <a href="
    http:
    \
    /
    \
    /cssinjs.org
    \
    /
    ">http:\/\/cssinjs.org\/<\/a><\/p>",
    "langcode": "English",
    "field_ems_topic": "The tools I use",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/css-in-js_0.png"
  },
  {
    "nid": "11",
    "title": "JavaScript",
    "body": "<p>JavaScript often abbreviated as JS, is a high-level, interpreted programming language. It is a language which is also characterized as dynamic, weakly typed, prototype-based and multi-paradigm.<\/p>\n\n<p>Alongside HTML and CSS, JavaScript is one of the three core technologies of the World Wide Web.[8] JavaScript enables interactive web pages and thus is an essential part of web applications. The vast majority of websites use it,[9] and all major web browsers have a dedicated JavaScript engine to execute it.<\/p>\n\n<p>As a multi-paradigm language, JavaScript supports event-driven, functional, and imperative (including object-oriented and prototype-based) programming styles. It has an API for working with text, arrays, dates, regular expressions, and basic manipulation of the DOM, but the language itself does not include any I\/O, such as networking, storage, or graphics facilities, relying for these upon the host environment in which it is embedded.<\/p>\n\n<p>Initially only implemented client-side in web browsers, JavaScript engines are now embedded in many other types of host software, including server-side in web servers and databases, and in non-web programs such as word processors and PDF software, and in runtime environments that make JavaScript available for writing mobile and desktop applications, including desktop widgets.<\/p>\n\n<p>Although there are strong outward similarities between JavaScript and Java, including language name, syntax, and respective standard libraries, the two languages are distinct and differ greatly in design; JavaScript was influenced by programming languages such as Self and Scheme. [10]<\/p>",
    "langcode": "English",
    "field_ems_topic": "The tools I use",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/256px-JavaScript-logo.png"
  },
  {
    "nid": "10",
    "title": "HTML 5",
    "body": "<p>HTML5 is a markup language used for structuring and presenting content on the World Wide Web. It is the fifth and current major version of the HTML standard.<\/p>\n\n<p>It was published in October 2014 by the World Wide Web Consortium (W3C)[2][4] to improve the language with support for the latest multimedia, while keeping it both easily readable by humans and consistently understood by computers and devices such as web browsers, parsers, etc. HTML5 is intended to subsume not only HTML 4, but also XHTML 1 and DOM Level 2 HTML.[5]<\/p>\n\n<p>HTML5 includes detailed processing models to encourage more interoperable implementations; it extends, improves and rationalizes the markup available for documents, and introduces markup and application programming interfaces (APIs) for complex web applications.[6] For the same reasons, HTML5 is also a candidate for cross-platform mobile applications, because it includes features designed with low-powered devices in mind.<\/p>\n\n<p>Many new syntactic features are included. To natively include and handle multimedia and graphical content, the new &lt;video&gt;, &lt;audio&gt; and &lt;canvas&gt; elements were added, and support for scalable vector graphics (SVG) content and MathML for mathematical formulas. To enrich the semantic content of documents, new page structure elements such as &lt;main&gt;, &lt;section&gt;, &lt;article&gt;, &lt;header&gt;, &lt;footer&gt;, &lt;aside&gt;, &lt;nav&gt; and &lt;figure&gt;, are added. New attributes are introduced, some elements and attributes have been removed, and others such as &lt;a&gt;, &lt;cite&gt; and &lt;menu&gt; have been changed, redefined or standardized.<\/p>\n\n<p>The APIs and Document Object Model (DOM) are now fundamental parts of the HTML5 specification[6] and HTML5 also better defines the processing for any invalid documents.[7]<\/p>",
    "langcode": "English",
    "field_ems_topic": "The tools I use",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/HTML5_logo_and_wordmark.png"
  },
  {
    "nid": "9",
    "title": "React",
    "body": "<p>React is a JavaScript library that forces you to think in terms of components. This model of thinking fits user interfaces well. Depending on your background it might feel alien at first. You will have to think very carefully about the concept of state and where it belongs.<\/p>\n\n<p>Because state management is a difficult problem, a variety of solutions have appeared. In this book, we'll start by managing state ourselves and then push it to a Flux implementation known as Alt. There are also implementations available for several other alternatives, such as Redux, MobX, and Cerebral.<\/p>\n\n<p>React is pragmatic in the sense that it contains a set of escape hatches. If the React model doesn't work for you, it is still possible to revert back to something lower level. For instance, there are hooks that can be used to wrap older logic that relies on the DOM. This breaks the abstraction and ties your code to a specific environment, but sometimes that's the pragmatic thing to do.<\/p>",
    "langcode": "English",
    "field_ems_topic": "The tools I use",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/react-logo.png"
  },
  {
    "nid": "8",
    "title": "How do I protect my investment in bespoke software?",
    "body": "<p>It’s not about money only. When we create something, we would like it not to go down the sink too quickly. Sure nothing lasts forever, but if what we create shows to be useful for as long as it can, all the better.<\/p>\n\n<p>How to do this when technologies crop up as quickly as mushrooms after a rain storm and disappear as quickly?<\/p>\n\n<p><strong>Software development is about problem solving<\/strong>. It isn’t about technologies.<\/p>\n\n<p>When you write a piece of software, you are describing a way to solve a problem.<\/p>\n\n<p>If you document it well and your description of how to solve a problem is clear enough, when you have to change programming language, framework, libraries, or need to use the newest flavour of JavaScript, you have documented solutions that you can reuse.<\/p>\n\n<p>You don’t need to throw everything away.<\/p>\n\n<p>A well-documented and well-structured software not only is easier to modify, adapt and troubleshoot. It protects your investment because it documents a solution that is technology independent.<\/p>\n\n<p>When you switch to a new technology, that solution comes with you.<\/p>",
    "langcode": "English",
    "field_ems_topic": "How I work",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/How_do_I_protect_my_investment_in_bespoke_software.jpg"
  },
  {
    "nid": "7",
    "title": "How do I create my application?",
    "body": "<p>What if you ask for my help? I created applications for: IBM, Intel Corporation, the Olympus satellite project, major telecommunication and energy companies, industrial plants, Virtual ISPs, banks and credit card companies.<\/p>\n\n<p>Sure, keep in mind that the age of the requirements sculpted in stone has long gone.<\/p>\n\n<p>Even before the <a href="
    http:
    \
    /
    \
    /agilemanifesto.org
    \
    /
    ">agile manifesto<\/a> I was changing, re-writing or even ignoring analysis documents written by world-renowned consulting firms.<\/p>\n\n<p>Now you write a page of requirements and create a working prototype. That prototype will inspire you to make changes or add functions that you couldn’t even think of when you were writing the requirements.<\/p>\n\n<p>Get inspired by <a href="
    http:
    \
    /
    \
    /gettingreal.37signals.com
    \
    /
    ">Getting Real<\/a> for your next application. There you find a modern way of making software.<\/p>\n\n<p>Software creation is problem solving. When you solve a problem you end up with a sequence of steps to be followed to solve the problem. The programming language you use doesn’t matter. What matters is something that matters every time you want to solve a problem. The sequence of steps has to be very clear and easy to understand.<\/p>\n\n<p>If I want to solve the problem of going to Paris, I may say:<\/p>\n\n<ol><li>go to the St. Pancreas railway station<\/li>\n\t<li>take the train<\/li>\n<\/ol><p>You may say that something is missing, I need a ticket.<\/p>\n\n<p>And I reply that this is implied in the step no. 1. You will say that this can’t be. Step no. 1 is only about going to the railway station. The purchase of a ticket can’t be implied. You are right. Step no. 1 can’t include something that is not explicitly declared otherwise it’s a mess.<\/p>\n\n<p>The problem solving sequence gets confusing and improvements and troubleshooting gets hard to do. Unfortunately this scenario happens very often when writing software.<\/p>",
    "langcode": "English",
    "field_ems_topic": "How I work",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/How%20do%20I%20create%20my%20application%3F.jpg"
  },
  {
    "nid": "6",
    "title": "How do I make my application easy to manage in production?",
    "body": "<p>When you are in production, you don’t have much time to fix bugs. If you are slow, you lose money and people remember that your website didn’t work and don’t come back.<\/p>\n\n<p><strong>You don’t have time to understand cryptic error messages or to guess what to do to fix them<\/strong>.<\/p>\n\n<p>You don’t have time to understand what a function does or what a variable contains. The original developer may be on holiday or she may not be able to remember what that variable was about if its name doesn’t help.<\/p>\n\n<p>A good structure helps too. If the software is easy to browse, errors are easier to find.<\/p>\n\n<p>A production manual is a good idea.<\/p>\n\n<p>I was managing a team whose goal was to design the production activities to be performed on a group of servers delivering virtual ISP services.<\/p>\n\n<p>I knew that a production manual was what we needed to ensure a smooth operation.<\/p>\n\n<p>Every event was documented in the manual along with it’s troubleshooting measures and the log of every case of occurrence.<\/p>\n\n<p>In many cases I have written such a high quality software that production was going on event-less. This is the case of my PLC software and the software I have written for Intel Corporation.<\/p>",
    "langcode": "English",
    "field_ems_topic": "How I work",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-07\/How_do_I_make_my_application_easy_to_manage_in_production.jpg"
  }
]