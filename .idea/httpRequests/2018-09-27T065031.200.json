[
  {
    "nid": "84",
    "title": "Impossible to login to WordPress website",
    "body": "\u003Cp\u003EThe problem was that it was not possible to login to a WordPress website, to the admin dashboard I mean.\u003C\/p\u003E\n\n\u003Cp\u003EI tried many things:\u003C\/p\u003E\n\n\u003Cul\u003E\u003Cli\u003Eused scripts to reset the password. They actually change the pwd in the wp_user table. See below an example of update command used to change pwd.\u003C\/li\u003E\n\t\u003Cli\u003Edeleted cache plugins after having zipped them\u003C\/li\u003E\n\t\u003Cli\u003Edeleted cache folder, \/wp-content\/cache\u003C\/li\u003E\n\t\u003Cli\u003Edeactivated wp super cache plugin, which I had deleted before, by updating the option active_plugins in the table wp_options\u003C\/li\u003E\n\t\u003Cli\u003Edeleted anything related to caches in wp-config.php\u003C\/li\u003E\n\t\u003Cli\u003Edisabled all plugins by renaming the folder \/wp-content\/plugins\u003C\/li\u003E\n\t\u003Cli\u003Eenabled debugging\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cp\u003EWhat worked was an upgrade from WordPress 3.9.1 to 4.4.2.\u003C\/p\u003E\n\n\u003Cp\u003EI used these instructions: \u003Ca href=\u0022https:\/\/codex.wordpress.org\/Upgrading_WordPress_-_Extended_Instructions\u0022\u003Ehttps:\/\/codex.wordpress.org\/Upgrading_WordPress_-_Extended_Instructions\u003C\/a\u003E\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003EUSE\u003C\/strong\u003E name_of_your_database\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003EUPDATE\u003C\/strong\u003E \u003Cspan\u003E`wp\u003Cstrong\u003E_\u003C\/strong\u003Eusers`\u003C\/span\u003E \u003Cstrong\u003ESET\u003C\/strong\u003E \u003Cspan\u003E`user\u003Cstrong\u003E_\u003C\/strong\u003Epass`\u003C\/span\u003E\u003Cspan\u003E=\u003C\/span\u003E \u003Cspan\u003EMD5\u003C\/span\u003E\u003Cspan\u003E(\u003C\/span\u003E\u003Cspan\u003E\u0027yourpassword\u0027\u003C\/span\u003E\u003Cspan\u003E)\u003C\/span\u003E \u003Cstrong\u003EWHERE\u003C\/strong\u003E \u003Cspan\u003E`user\u003Cstrong\u003E_\u003C\/strong\u003Elogin`\u003C\/span\u003E\u003Cspan\u003E=\u003C\/span\u003E\u003Cspan\u003E\u0027yourusername\u0027\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/Wordpress_login_troubleshooting.jpg"
  },
  {
    "nid": "83",
    "title": "Installing Open Project on Debian 8 server",
    "body": "\u003Cp\u003EI\u2019m going to install Open Project on a VPS (Virtual Private Server).\u003C\/p\u003E\n\n\u003Ch2\u003EWhat is Open Project?\u003C\/h2\u003E\n\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.openproject.org\/\u0022\u003EOpen Project\u003C\/a\u003E is an open source application you can use to manage projects. It\u2019s used for software projects.\u003C\/p\u003E\n\n\u003Cp\u003EIt supports Agile methodology, bug tracking and time tracking.\u003C\/p\u003E\n\n\u003Cp\u003EI\u2019ll use it to manage projects meant to build applications for my clients.\u003C\/p\u003E\n\n\u003Cp\u003EI\u2019ll describe here the procedure I followed to install Open Project on the Virtual Private Server where I run my own website and many others.\u003C\/p\u003E\n\n\u003Ch2\u003EWhat do I need to perform the installation?\u003C\/h2\u003E\n\n\u003Cp\u003EOf course a server. My VPS runs linux debian version 8.\u003C\/p\u003E\n\n\u003Cp\u003EA web server as well. In my case I have nginx already installed and running. I use it instead of Apache for better performance. Nginx\u2019s version is 1.6.2.\u003C\/p\u003E\n\n\u003Cp\u003EA database. My server runs a mysql instance. Its version is 5.5.2.\u003C\/p\u003E\n\n\u003Cp\u003EOther products will be installed.\u003C\/p\u003E\n\n\u003Ch2\u003EWhere did I find information about the installation procedure?\u003C\/h2\u003E\n\n\u003Cp\u003EI used this procedure: \u003Ca href=\u0022https:\/\/github.com\/opf\/openproject\/blob\/stable\/7\/docs\/installation\/manual\/README.md\u0022\u003EManual installation of OpenProject 7.0 with Apache on Ubuntu 14.04. LTS\u003C\/a\u003E\u003C\/p\u003E\n\n\u003Cp\u003ESince the procedure uses Apache, I had to find about how to configure nginx.\u003C\/p\u003E\n\n\u003Cp\u003EI found these instructions: \u003Ca href=\u0022https:\/\/www.digitalocean.com\/community\/questions\/install-openproject-on-ubuntu-12-04-with-nginx\u0022\u003EInstall OpenProject on Ubuntu 12.04 with nginx\u003C\/a\u003E\u003C\/p\u003E\n\n\u003Ch2\u003ECreating user and group\u003C\/h2\u003E\n\n\u003Cp\u003EI need to create an user that will be running Open Project. This user will belong to a special group created on purpose for Open Project.\u003C\/p\u003E\n\n\u003Cp\u003EHere I create the user openproject and the group of the same name. I also assign a password to the user.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cem\u003E# groupadd openproject\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cem\u003E# useradd --create-home --gid openproject openproject\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cem\u003E# passwd openproject\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003ECreating the database\u003C\/h2\u003E\n\n\u003Cp\u003EOpen Project needs a database where to store information.\u003C\/p\u003E\n\n\u003Cp\u003EThe database to create has name openproject. I create as well a myswl user of same name. Open Project will use it to access the database.\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\n\u003C\/p\u003E\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003ECREATE\u003C\/strong\u003E \u003Cstrong\u003EDATABASE\u003C\/strong\u003E openproject CHARACTER \u003Cstrong\u003ESET\u003C\/strong\u003E utf8\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003ECREATE\u003C\/strong\u003E \u003Cspan\u003EUSER\u003C\/span\u003E \u003Cspan\u003E\u0027openproject\u0027\u003C\/span\u003E@\u003Cspan\u003E\u0027localhost\u0027\u003C\/span\u003E IDENTIFIED BY \u003Cspan\u003E\u0027your password here\u0027\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003EGRANT\u003C\/strong\u003E \u003Cstrong\u003EALL\u003C\/strong\u003E \u003Cstrong\u003EPRIVILEGES\u003C\/strong\u003E \u003Cstrong\u003EON\u003C\/strong\u003E openproject.\u003Cspan\u003E*\u003C\/span\u003E \u003Cstrong\u003ETO\u003C\/strong\u003E \u003Cspan\u003E\u0027openproject\u0027\u003C\/span\u003E@\u003Cspan\u003E\u0027localhost\u0027\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EFLUSH \u003Cstrong\u003EPRIVILEGES\u003C\/strong\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003EInstalling needed packages\u003C\/h2\u003E\n\n\u003Cp\u003EFor Open Project to work, I have to install many needed packages.\u003C\/p\u003E\n\n\u003Cp\u003EConsider that the installation of bower may not be needed.\u003C\/p\u003E\n\n\u003Cp\u003ENode.js, which provides the command npm, was already present on my server.\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\n\u003C\/p\u003E\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cstrong\u003E\/\u003C\/strong\u003Eapt\u003Cem\u003E# apt-get update\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cstrong\u003E\/\u003C\/strong\u003Eapt\u003Cem\u003E# apt-get install build-essential\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cstrong\u003E\/\u003C\/strong\u003Eapt\u003Cem\u003E# apt-get install -y libssl-dev libreadline-dev zlib1g-dev\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cstrong\u003E\/\u003C\/strong\u003Eapt\u003Cem\u003E# apt-get install libmysqlclient-dev\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cstrong\u003E\/\u003C\/strong\u003Eapt\u003Cem\u003E# npm install -g bower\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003ERuby on rails\u003C\/h2\u003E\n\n\u003Cp\u003EOpen Project is based on Ruby on Rails.\u003C\/p\u003E\n\n\u003Cp\u003EI\u2019ll use \u003Ca href=\u0022http:\/\/rbenv.org\/\u0022\u003Erbenv\u003C\/a\u003E to install a specific version of Ruby on Rails. Rbenv will be installed in the folder .rbenv under the home folder of the user openproject.\u003C\/p\u003E\n\n\u003Cp\u003ERuby-build is a plugin to be used by rbenv to install Ruby on Rails.\u003C\/p\u003E\n\n\u003Cp\u003EThe final \u201cruby \u2013version\u201d command shows that Ruby has been installed.\u003C\/p\u003E\n\n\u003Cp\u003EI had to increase my server\u2019s memory for the installation to work. It needs 1Gb of memory and 512Mb of swap.\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\n\u003C\/p\u003E\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cem\u003E# su openproject --login\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003E\u003Cstrong\u003Egit clone\u003C\/strong\u003E https:\u003Cstrong\u003E\/\/\u003C\/strong\u003Egithub.com\u003Cstrong\u003E\/\u003C\/strong\u003Esstephenson\u003Cstrong\u003E\/\u003C\/strong\u003Erbenv.git ~\u003Cstrong\u003E\/\u003C\/strong\u003E.rbenv\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003E\u003Cstrong\u003Eecho\u003C\/strong\u003E \u003Cspan\u003E\u0027export PATH=\u0022$HOME\/.rbenv\/bin:$PATH\u0022\u0027\u003C\/span\u003E \u003Cstrong\u003E\u0026amp;\u003C\/strong\u003Egt;\u003Cstrong\u003E\u0026amp;\u003C\/strong\u003Egt; ~\u003Cstrong\u003E\/\u003C\/strong\u003E.profile\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003E\u003Cstrong\u003Eecho\u003C\/strong\u003E \u003Cspan\u003E\u0027eval \u0022$(rbenv init -)\u0022\u0027\u003C\/span\u003E \u003Cstrong\u003E\u0026amp;\u003C\/strong\u003Egt;\u003Cstrong\u003E\u0026amp;\u003C\/strong\u003Egt; ~\u003Cstrong\u003E\/\u003C\/strong\u003E.profile\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003E\u003Cstrong\u003Esource\u003C\/strong\u003E ~\u003Cstrong\u003E\/\u003C\/strong\u003E.profile\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003E\u003Cstrong\u003Egit clone\u003C\/strong\u003E https:\u003Cstrong\u003E\/\/\u003C\/strong\u003Egithub.com\u003Cstrong\u003E\/\u003C\/strong\u003Esstephenson\u003Cstrong\u003E\/\u003C\/strong\u003Eruby-build.git ~\u003Cstrong\u003E\/\u003C\/strong\u003E.rbenv\u003Cstrong\u003E\/\u003C\/strong\u003Eplugins\u003Cstrong\u003E\/\u003C\/strong\u003Eruby-build\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003Erbenv \u003Cstrong\u003Einstall\u003C\/strong\u003E 2.4.1\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003Erbenv rehash\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003Erbenv global 2.4.1\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003Eruby \u003Cspan\u003E--version\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eruby 2.4.1p111 \u003Cstrong\u003E(\u003C\/strong\u003E\u003Cspan\u003E2017\u003C\/span\u003E-03-\u003Cspan\u003E22\u003C\/span\u003E revision \u003Cspan\u003E58053\u003C\/span\u003E\u003Cstrong\u003E)\u003C\/strong\u003E \u003Cstrong\u003E[\u003C\/strong\u003Ex86_64-linux\u003Cstrong\u003E]\u003C\/strong\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003EOpen Project\u003C\/h2\u003E\n\n\u003Cp\u003ENow I\u2019ll install Open Project itself.\u003C\/p\u003E\n\n\u003Cp\u003EThese are the commands I gave to install Open Project.\u003C\/p\u003E\n\n\u003Cp\u003E\u00a0\n\u003C\/p\u003E\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003E\u003Cstrong\u003Ecd\u003C\/strong\u003E ~\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003E\u003Cstrong\u003Egit clone\u003C\/strong\u003E https:\u003Cstrong\u003E\/\/\u003C\/strong\u003Egithub.com\u003Cstrong\u003E\/\u003C\/strong\u003Eopf\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce.git \u003Cspan\u003E--branch\u003C\/span\u003E stable\u003Cstrong\u003E\/\u003C\/strong\u003E\u003Cspan\u003E7\u003C\/span\u003E \u003Cspan\u003E--depth\u003C\/span\u003E \u003Cspan\u003E1\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003E\u003Cstrong\u003Ecd\u003C\/strong\u003E openproject-ce\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ gem \u003Cstrong\u003Einstall\u003C\/strong\u003E bundler\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ bundle \u003Cstrong\u003Einstall\u003C\/strong\u003E \u003Cspan\u003E--deployment\u003C\/span\u003E \u003Cspan\u003E--without\u003C\/span\u003E postgres sqlite development \u003Cstrong\u003Etest\u003C\/strong\u003E therubyracer docker\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ npm \u003Cstrong\u003Einstall\u003C\/strong\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003EConfiguring Open Project\u003C\/h2\u003E\n\n\u003Cp\u003ETwo files need to be configured.\u003C\/p\u003E\n\n\u003Cp\u003EThey are located in the folder \/home\/openproject\/openproject-ce\/config and their names are database.yml and configuration.yml.\u003C\/p\u003E\n\n\u003Cp\u003EThe file database.yml configures the access to the database. You have to specify the name of the database, the user Open Project uses to access mysql and the password.\u003C\/p\u003E\n\n\u003Cp\u003EThis information goes to the \u2018production\u2019 section.\u003C\/p\u003E\n\n\u003Cp\u003EThe file database.yml will look like this:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eproduction:\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0adapter: mysql2\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0database: openproject\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0host: localhost\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0username: openproject\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0password: your password\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0encoding: utf8\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0variables:\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThe file configuration.yml needs some settings so that Open Project can send emails.\u003C\/p\u003E\n\n\u003Cp\u003EThis heavily depends on the smtp service you use to send emails from your server. In this case I\u2019m using Google GMail.\u003C\/p\u003E\n\n\u003Cp\u003EThis is the smtp section in configuration.yml:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Edefault:\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 # Outgoing emails configuration (see examples above)\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 email_delivery_method: :smtp\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 smtp_address: smtp.gmail.com\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 smtp_port: 587\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 smtp_domain: localhost\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 smtp_authentication: plain\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 smtp_user_name: \u0022esantanche@gmail.com\u0022\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 smtp_password: \u0022your password here\u0022\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 smtp_enable_starttls_auto: true\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003ETo create database.yml and configuration.yml I used database.yml.example and configuration.yml.example. You find these files in the same folder as the one where database.yml and configuration.yml are located.\u003C\/p\u003E\n\n\u003Ch2\u003ECompleting Open Project installation\u003C\/h2\u003E\n\n\u003Cp\u003ENow that Open Project knows about the database it has to use, I can proceed to create the tables and anything else Open Project needs inside the database.\u003C\/p\u003E\n\n\u003Cp\u003EThis is what I\u2019m going to do know. During this phase I had to increase the server\u2019s memory to 1Gb.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce\u003Cstrong\u003E\/\u003C\/strong\u003Econfig$ \u003Cstrong\u003Ecd\u003C\/strong\u003E ~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ \u003Cspan\u003ERAILS_ENV\u003C\/span\u003E=\u003Cspan\u003E\u0022production\u0022\u003C\/span\u003E .\u003Cstrong\u003E\/\u003C\/strong\u003Ebin\u003Cstrong\u003E\/\u003C\/strong\u003Erake db:create\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ \u003Cspan\u003ERAILS_ENV\u003C\/span\u003E=\u003Cspan\u003E\u0022production\u0022\u003C\/span\u003E .\u003Cstrong\u003E\/\u003C\/strong\u003Ebin\u003Cstrong\u003E\/\u003C\/strong\u003Erake db:migrate\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ \u003Cspan\u003ERAILS_ENV\u003C\/span\u003E=\u003Cspan\u003E\u0022production\u0022\u003C\/span\u003E .\u003Cstrong\u003E\/\u003C\/strong\u003Ebin\u003Cstrong\u003E\/\u003C\/strong\u003Erake db:seed\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ \u003Cspan\u003ERAILS_ENV\u003C\/span\u003E=\u003Cspan\u003E\u0022production\u0022\u003C\/span\u003E .\u003Cstrong\u003E\/\u003C\/strong\u003Ebin\u003Cstrong\u003E\/\u003C\/strong\u003Erake assets:precompile\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ \u003Cstrong\u003Eecho\u003C\/strong\u003E \u003Cspan\u003E\u0022export SECRET_KEY_BASE=\u003Cspan\u003E$(.\/bin\/rake secret)\u003C\/span\u003E\u0022\u003C\/span\u003E \u003Cstrong\u003E\u0026gt;\u0026gt;\u003C\/strong\u003E ~\u003Cstrong\u003E\/\u003C\/strong\u003E.profile\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ \u003Cstrong\u003Esource\u003C\/strong\u003E ~\u003Cstrong\u003E\/\u003C\/strong\u003E.profile\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003EConfiguring nginx\u003C\/h2\u003E\n\n\u003Cp\u003ETo access the application I need to configure the webserver, in my case nginx.\u003C\/p\u003E\n\n\u003Cp\u003EMy job is simplified because I\u2019m not installing Passenger, which is an application server that sits between the web server and ruby on rails. It\u2019s purpose is to improve performances for installation with a lot of users. It\u2019s not my case.\u003C\/p\u003E\n\n\u003Cp\u003ENginx will connect directly to the Ruby on Rails server.\u003C\/p\u003E\n\n\u003Cp\u003EThis is nginx configuration for Open Project:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E# openproject \u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 # this is to redirect http requests to https ones\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 server {\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 listen \u00a0 \u00a0 \u00a0 \u00a0 80;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 server_name \u00a0 \u00a0openproject.emanuelesantanche.com;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 return \u00a0 \u00a0 \u00a0 \u00a0 301 https:\/\/$server_name$request_uri;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 }\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 upstream app_server {\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 server 127.0.0.1:3000 fail_timeout=0;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 }\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 server {\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 #listen 80;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 listen 443 ssl;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 server_name openproject.emanuelesantanche.com;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 root \/home\/openproject\/openproject-ce\/public;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 ssl_certificate \/etc\/letsencrypt\/live\/openproject.emanuelesantanche.com\/cert.pem;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 ssl_certificate_key \/etc\/letsencrypt\/live\/openproject.emanuelesantanche.com\/privkey.pem;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 location \/ {\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0try_files $uri\/index.html $uri.html $uri @app; \u00a0 \u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 }\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 location @app {\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 proxy_set_header Host $http_host;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 proxy_redirect off;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 proxy_pass http:\/\/app_server;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 }\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 }\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThe configuration has been modified to use https with certificates provided by \u003Ca href=\u0022https:\/\/letsencrypt.org\/\u0022\u003ELet\u2019s Encrypt\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Ch2\u003EStarting Ruby on Rails\u003C\/h2\u003E\n\n\u003Cp\u003EFor the application to work, I have to start Ruby on Rails. It will listen on the port 3000.\u003C\/p\u003E\n\n\u003Cp\u003ENginx will communicate with it on the same port. You can see the port reference in nginx configuration.\u003C\/p\u003E\n\n\u003Cp\u003ETo start Ruby on Rails I do:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eroot@FREEDOMANDCOURAGE:~# \u003C\/span\u003E\u003Cstrong\u003Esu\u003C\/strong\u003E openproject \u003Cspan\u003E--login\u003C\/span\u003E \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eopenproject@FREEDOMANDCOURAGE:~$ \u003C\/span\u003E\u003Cstrong\u003Ecd\u003C\/strong\u003E ~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eopenproject\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:~\u003Cstrong\u003E\/\u003C\/strong\u003Eopenproject-ce$ bundler \u003Cstrong\u003Eexec\u003C\/strong\u003E rails server \u003Cspan\u003E-e\u003C\/span\u003E production \u003Cspan\u003E-d\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003EDoes it work?\u003C\/h2\u003E\n\n\u003Cp\u003ENow I\u2019m ready to test it!\u003C\/p\u003E\n\n\u003Cp\u003ENginx is configured to serve the application at the url openproject.emanuelesantanche.com.\u003C\/p\u003E\n\n\u003Cp\u003EI went to my hosting provider\u2019s control panel to configure the subdomain openproject.\u003C\/p\u003E\n\n\u003Cp\u003EIt\u2019s also possible, just for a quick test, to associate the server\u2019s ip address to openproject.emanuelesantanche.com in your local hosts file.\u003C\/p\u003E\n\n\u003Cp\u003EI just open a browser at openproject.emanuelesantanche.com.\u003C\/p\u003E\n\n\u003Cp\u003EIt works!\u003C\/p\u003E\n\n\u003Ch2\u003ERunning jobs\u003C\/h2\u003E\n\n\u003Cp\u003ERuby on Rails needs to run some jobs periodically. A line in crontab will do it.\u003C\/p\u003E\n\n\u003Cp\u003EHere it is:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E48 * * * * PATH=\/home\/openproject\/.rbenv\/shims:$PATH; cd \/home\/openproject\/openproject-ce; RAILS_ENV=\u0022production\u0022 .\/bin\/rake -q jobs:workoff \u0026gt;\/dev\/null 2\u0026gt;\u0026amp;1\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EIn this case the crontab job gets executed once an hour. According to documentation, it should be run every minute.\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/openproject-logo-1.png"
  },
  {
    "nid": "82",
    "title": "Use your smart-phone as webcam and keep enjoying enhanced security as well",
    "body": "\u003Ch2\u003EWhat I want to do\u003C\/h2\u003E\n\n\u003Cp\u003EI don\u2019t want to buy a webcam for my computer. I have a smart-phone with both front and rear cameras. Can\u2019t I use it as webcam?\u003C\/p\u003E\n\n\u003Ch2\u003EAre you interested in Enhanced Security?\u003C\/h2\u003E\n\n\u003Cp\u003EMaybe you are not interested in using your smart-phone as webcam.\u003C\/p\u003E\n\n\u003Cp\u003EBut you may be interested in Enhanced Security instead.\u003C\/p\u003E\n\n\u003Cp\u003EIf you are, keep reading because I\u2019m going to tell you about SELinux, an additional level of security Linux servers, and desktops, enjoy.\u003C\/p\u003E\n\n\u003Ch2\u003EThe environment\u003C\/h2\u003E\n\n\u003Cp\u003EThe scenery where our troubleshooting is going to happen is a Linux Fedora desktop computer.\u003C\/p\u003E\n\n\u003Cp\u003EIt comes with SELinux installed and running by default.\u003C\/p\u003E\n\n\u003Cp\u003EPrecisely it\u2019s Fedora 25. It\u2019s using KDE Plasma as desktop environment. The desktop environment is irrelevant to our problem.\u003C\/p\u003E\n\n\u003Ch2\u003EDroidcam\u003C\/h2\u003E\n\n\u003Cp\u003EDroidcam is both an Android application and a Linux one. On the Linux side, Droidcam is written in C language and uses GTK as toolkit to create user interfaces. It can be used from the command line as well.\u003C\/p\u003E\n\n\u003Cp\u003EYou find the source code here: https:\/\/github.com\/aramg\/droidcam\/tree\/master\/linux.\u003C\/p\u003E\n\n\u003Cp\u003EYou install and run Droidcam on Linux and do the same on your Android smartphone. It\u2019s simple, you just tell the Linux application what ip address it can find the smart-phone at.\u003C\/p\u003E\n\n\u003Cp\u003EDroidcam uses port 4747. You may have to fix problems caused by firewalls if, like me, you have a firewall on your computer.\u003C\/p\u003E\n\n\u003Ch2\u003ESELinux\u003C\/h2\u003E\n\n\u003Cp\u003ESELinux adds security checks to your Linux computer. It makes more difficult for malware to infect the system. Linux is well-known for better security. SELinux adds even more security by isolating processes so that they don\u2019t harm the system.\u003C\/p\u003E\n\n\u003Ch2\u003EWhy was Droidcam a problem?\u003C\/h2\u003E\n\n\u003Cp\u003EYou don\u2019t find Droidcam in standard software repository. I downloaded it from https:\/\/www.dev47apps.com\/files\/600\/droidcam-64bit.tar.bz2.\u003C\/p\u003E\n\n\u003Cp\u003EThere is an \u2018install\u2019 script to run. It produces two modules the operating system will load when starting.\u003C\/p\u003E\n\n\u003Cp\u003EThe problem was that SELinux prevented the modules from starting complaining about lack of permission.\u003C\/p\u003E\n\n\u003Cp\u003EI was getting these errors:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003EAug 12 07:31:58 localhost.localdomain systemd-modules-load[535]: Failed to insert \u0027videodev\u0027: Permission denied\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EAug 12 07:31:58 localhost.localdomain systemd-modules-load[535]: Failed to insert \u0027v4l2loopback_dc\u0027: Permission denied\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EWhen you see this sort of errors, you may not think about SELinux. You think that there may be a common permission problem related to user permissions. That\u2019s why it can be difficult to troubleshoot.\u003C\/p\u003E\n\n\u003Ch2\u003EDisabling SELinux\u003C\/h2\u003E\n\n\u003Cp\u003ETo see if SELinux is a problem, you first disable it.\u003C\/p\u003E\n\n\u003Cp\u003EYou edit the file \/etc\/selinux\/config where you set SELINUX=disabled.\u003C\/p\u003E\n\n\u003Cp\u003EDone this, the problem disappeared. But you are left with no Enhanced Security.\u003C\/p\u003E\n\n\u003Ch2\u003EUsing the audit log\u003C\/h2\u003E\n\n\u003Cp\u003ESELinux registers every permission violation in a log called the audit log. You find it at this location: \/var\/log\/audit.\u003C\/p\u003E\n\n\u003Cp\u003EIn this case, our permission problem was logged in this way:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Etype=AVC msg=audit(1502557651.920:115): avc:\u00a0 denied\u00a0 { module_load } for\u00a0 pid=1028 comm=\u0022systemd-modules\u0022 scontext=system_u:system_r:systemd_modules_load_t:s0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Etcontext=system_u:system_r:systemd_modules_load_t:s0 tclass=system permissive=0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003ENow what?\u003C\/h2\u003E\n\n\u003Cp\u003EDo I have to learn about SELinux now? Do I need to learn how to configure SELinux permissions? Do I need to read long instructions and manuals?\u003C\/p\u003E\n\n\u003Cp\u003EHappily no, I don\u2019t have to.\u003C\/p\u003E\n\n\u003Cp\u003ESELinux comes with two very handy tools.\u003C\/p\u003E\n\n\u003Cp\u003EThe first one is audit2why. You feed it with the error message and it tells you what\u2019s the problem.\u003C\/p\u003E\n\n\u003Cp\u003ELet\u2019s see\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003E[\u003C\/strong\u003Eesantanche\u003Cstrong\u003E@\u003C\/strong\u003Elocalhost\u003Cstrong\u003E]\u003C\/strong\u003E~\u003Cstrong\u003E%\u003C\/strong\u003E \u003Cstrong\u003Eecho\u003C\/strong\u003E \u003Cspan\u003E\u0022type=AVC msg=audit(1502557651.920:115): avc:\u00a0 denied\u00a0 { module_load } for\u00a0 pid=1028 comm=\u0022\u003C\/span\u003Esystemd-modules\u003Cspan\u003E\u0022 scontext=system_u:system_r:systemd_modules_load_t:s0 tcontext=system_u:system_r:systemd_modules_load_t:s0 tclass=system permissive=0\u0022\u003C\/span\u003E \u003Cstrong\u003E|\u003C\/strong\u003E audit2why\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Etype\u003C\/span\u003E=AVC \u003Cspan\u003Emsg\u003C\/span\u003E=audit\u003Cstrong\u003E(\u003C\/strong\u003E\u003Cspan\u003E1502557651.920\u003C\/span\u003E:\u003Cspan\u003E115\u003C\/span\u003E\u003Cstrong\u003E)\u003C\/strong\u003E: avc:\u00a0 denied\u00a0 \u003Cstrong\u003E{\u003C\/strong\u003E module_load \u003Cstrong\u003E}\u003C\/strong\u003E \u003Cstrong\u003Efor\u003C\/strong\u003E\u00a0 \u003Cspan\u003Epid\u003C\/span\u003E=\u003Cspan\u003E1028\u003C\/span\u003E \u003Cspan\u003Ecomm\u003C\/span\u003E=systemd-modules \u003Cspan\u003Escontext\u003C\/span\u003E=system_u:system_r:systemd_modules_load_t:s0 \u003Cspan\u003Etcontext\u003C\/span\u003E=system_u:system_r:systemd_modules_load_t:s0 \u003Cspan\u003Etclass\u003C\/span\u003E=system \u003Cspan\u003Epermissive\u003C\/span\u003E=\u003Cspan\u003E0\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EWas caused by:\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EMissing \u003Cstrong\u003Etype\u003C\/strong\u003E enforcement \u003Cstrong\u003E(\u003C\/strong\u003ETE\u003Cstrong\u003E)\u003C\/strong\u003E allow rule.\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EYou can use audit2allow to generate a loadable module to allow this access.\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003E[\u003C\/strong\u003Eesantanche\u003Cstrong\u003E@\u003C\/strong\u003Elocalhost\u003Cstrong\u003E]\u003C\/strong\u003E~\u003Cstrong\u003E%\u003C\/strong\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThe tool is telling us that a rule is missing. A rule that would allow the operation that has been denied, the latter being the loading operation of the module Droidcam installed.\u003C\/p\u003E\n\n\u003Cp\u003EWe are also advised to use another tool to generate that rule. Just to add to confusion, SELinux calls its rules modules. But a SELinux module is about giving permissions whilst a kernel module is about performing tasks like managing a webcam.\u003C\/p\u003E\n\n\u003Cp\u003EThe tool we need to use is audit2allow.\u003C\/p\u003E\n\n\u003Cp\u003EHere it is:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003E[\u003C\/strong\u003Eesantanche\u003Cstrong\u003E@\u003C\/strong\u003Elocalhost\u003Cstrong\u003E]\u003C\/strong\u003E~\u003Cstrong\u003E%\u003C\/strong\u003E \u003Cstrong\u003Eecho\u003C\/strong\u003E \u003Cspan\u003E\u0022type=AVC msg=audit(1502557651.920:115): avc: denied { module_load } for pid=1028 comm=\u0022\u003C\/span\u003Esystemd-modules\u003Cspan\u003E\u0022 scontext=system_u:system_r:systemd_modules_load_t:s0 tcontext=system_u:system_r:systemd_modules_load_t:s0 tclass=system permissive=0\u0022\u003C\/span\u003E \u003Cstrong\u003E|\u003C\/strong\u003E audit2allow \u003Cspan\u003E-M\u003C\/span\u003E module_load_policy\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003E********************\u003C\/strong\u003E IMPORTANT \u003Cstrong\u003E***********************\u003C\/strong\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003ETo \u003Cstrong\u003Emake\u003C\/strong\u003E this policy package active, execute:\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Esemodule \u003Cspan\u003E-i\u003C\/span\u003E module_load_policy.pp\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003E[\u003C\/strong\u003Eesantanche\u003Cstrong\u003E@\u003C\/strong\u003Elocalhost\u003Cstrong\u003E]\u003C\/strong\u003E~\u003Cstrong\u003E%\u003C\/strong\u003E \u003Cstrong\u003Esudo\u003C\/strong\u003E semodule \u003Cspan\u003E-i\u003C\/span\u003E module_load_policy.pp\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThe tool created the permission we need for Droidcam to work from the audit error above. No complicated configurations to do, no long manuals to learn. Just feed audit2allow with the error message and it will create a rule SELinux will use to allow Droidcam to work.\u003C\/p\u003E\n\n\u003Cp\u003EJust consider that SELinux calls its permission rules modules and this may be confusing.\u003C\/p\u003E\n\n\u003Ch2\u003EConclusion\u003C\/h2\u003E\n\n\u003Cp\u003EWhen you get strange permission errors you can\u2019t explain and you eventually, after long investigation, realise it\u2019s SELinux causing them, you want to get rid of SELinux.\u003C\/p\u003E\n\n\u003Cp\u003EWhy not just disable it? No mysterious permission errors any more.\u003C\/p\u003E\n\n\u003Cp\u003EThere are cases, like this one, that you are doing strange installations. Droidcam is a bit special and creates kernel modules its own way.\u003C\/p\u003E\n\n\u003Cp\u003EImagine that it was some malware installing modules. SELinux would have saved you from harm.\u003C\/p\u003E\n\n\u003Cp\u003EIt\u2019s better to keep SELinux up and running and enjoy the enhanced security it offers.\u003C\/p\u003E\n\n\u003Cp\u003EHappily it provides tools that make you job easier and you don\u2019t have to learn complicated ways to configure permission rules.\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/SELinux.png"
  },
  {
    "nid": "81",
    "title": "WYSIWYG editor for Mediawiki",
    "body": "\u003Ch2\u003EWhat Mediawiki is and what it is for\u003C\/h2\u003E\n\n\u003Cp\u003EMediawiki is the engine that powers Wikipedia. It\u2019s a wiki and it\u2019s used to create collaborative websites where people can share knowledge and keep all sorts of information.\u003C\/p\u003E\n\n\u003Cp\u003EThey make it possible for people to work on the same document.\u003C\/p\u003E\n\n\u003Cp\u003EPersonally I keep most of my information in Mediawiki websites.\u003C\/p\u003E\n\n\u003Cp\u003EMediawiki is very good to create intranets, website used internally in an organization.\u003C\/p\u003E\n\n\u003Ch2\u003EHow to make editing easier\u003C\/h2\u003E\n\n\u003Cp\u003EMany people find editing wiki pages difficult. Even if you get a standard tool bar and you don\u2019t have to remember wiki syntax, there are some things that are difficult to edit and maintain.\u003C\/p\u003E\n\n\u003Cp\u003ETables are one of them. it\u2019s easy to create a table because Mediawiki offers a wizard that guides you. But it\u2019s not so easy to edit the table, to add rows and columns, to edit the content.\u003C\/p\u003E\n\n\u003Ch2\u003EWYSIWYG editor\u003C\/h2\u003E\n\n\u003Cp\u003EA WYSIWYG editor is, in general, an editor that makes it easier to work on a document.\u003C\/p\u003E\n\n\u003Cp\u003EIn our case a WYSIWYG editor hides Mediawiki syntax so that you don\u2019t have to remember it at all. You just edit the document in the same way you would edit a document created with a word processor.\u003C\/p\u003E\n\n\u003Ch2\u003EVisual editor\u003C\/h2\u003E\n\n\u003Cp\u003EVisual Editor is our WYSIWYG editor. Wikipedia uses it as well.\u003C\/p\u003E\n\n\u003Cp\u003EThe starting point to find information about it is its \u003Ca href=\u0022https:\/\/www.mediawiki.org\/wiki\/Extension:VisualEditor\u0022\u003EMediawiki extension page\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Ch2\u003EInstalling Parsoid\u003C\/h2\u003E\n\n\u003Cp\u003EBefore installing Visual Editor, we have to install Parsoid. It\u2019s a server process that converts HTML code into Mediawiki syntax and back.\u003C\/p\u003E\n\n\u003Cp\u003EThe WYSIWYG editor works on HTML code. It keeps our editing activity in HTML form. But it has to eventually convert that HTML into Mediawiki syntax otherwise Mediawiki won\u2019t be able to store it.\u003C\/p\u003E\n\n\u003Cp\u003EWhen it has to save a page to Mediawiki database, Visual Editor takes the HTML version of the document and gives it to Parsoid. The latter converts it into Mediawiki syntax and Visual Editor gives that syntax to Mediawiki for it to store in the database.\u003C\/p\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EThe package\u003C\/strong\u003E\u003C\/p\u003E\n\n\u003Cp\u003ETo install Parsoid we need to add a repository to our Debian software sources. My server runs Debian Jessie (version 8).\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003Eecho\u003C\/strong\u003E \u003Cspan\u003E\u0022deb https:\/\/releases.wikimedia.org\/debian jessie-mediawiki main\u0022\u003C\/span\u003E \u003Cstrong\u003E|\u003C\/strong\u003E \u003Cstrong\u003Esudo\u003C\/strong\u003E \u003Cstrong\u003Etee\u003C\/strong\u003E \u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cstrong\u003E\/\u003C\/strong\u003Eapt\u003Cstrong\u003E\/\u003C\/strong\u003Esources.list.d\u003Cstrong\u003E\/\u003C\/strong\u003Eparsoid.list\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EYou may have to add an authentication key to access the repository. This is generally done with a command like the following one:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cstrong\u003Esudo\u003C\/strong\u003E \u003Cstrong\u003Eapt-key\u003C\/strong\u003E advanced \u003Cspan\u003E--keyserver\u003C\/span\u003E keys.gnupg.net \u003Cspan\u003E--recv-keys\u003C\/span\u003E 90E9F83F22250DD7\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThe actual key may be different.\u003C\/p\u003E\n\n\u003Cp\u003ENow let\u2019 install the package.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cstrong\u003E\/\u003C\/strong\u003Eapt\u003Cstrong\u003E\/\u003C\/strong\u003Esources.list.d\u003Cem\u003E# sudo apt-get update\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Eetc\u003Cstrong\u003E\/\u003C\/strong\u003Eapt\u003Cstrong\u003E\/\u003C\/strong\u003Esources.list.d\u003Cem\u003E# sudo apt-get install parsoid\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EYou may need to install the package apt-transport-https as well.\u003C\/p\u003E\n\n\u003Ch2\u003EConfiguring Parsoid\u003C\/h2\u003E\n\n\u003Cp\u003EThere are many files to configure for Parsoid to work.\u003C\/p\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EConfig.yaml\u003C\/strong\u003E\u003C\/p\u003E\n\n\u003Cp\u003EThe main one if config.yaml (\/etc\/mediawiki\/parsoid\/config.yaml).\u003C\/p\u003E\n\n\u003Cp\u003EYou find there a line like this:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Ehttp:\/\/localhost\/w\/api.php\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThis is needed for Parsoid to access Mediawiki apis. Parsoid uses Mediawiki apis to return the result of the conversions it performs.\u003C\/p\u003E\n\n\u003Cp\u003EI have many websites on my server. I need to replace localhost with my Mediawiki installation domain.\u003C\/p\u003E\n\n\u003Cp\u003ESomething like mediawiki.example.com. Your domain will be different.\u003C\/p\u003E\n\n\u003Cp\u003EIn my case api.php is directly on the root of the website. Like http:\/\/mediawiki.example.com\/api.php. If you browse to your api.php, you get some help information, if it\u2019s working.\u003C\/p\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ELocalSettings.php \u003C\/strong\u003E\u003C\/p\u003E\n\n\u003Cp\u003EWe have to add lines to the LocalSettings.php file of our Mediawiki installation.\u003C\/p\u003E\n\n\u003Cp\u003EThis Mediawiki installation is private. It\u2019s like an intranet. You need userid and password to access it.\u003C\/p\u003E\n\n\u003Cp\u003EThis means that Parsoid needs to be authorized to access Mediawiki when it sends back to Mediawiki the result of the conversions it performs.\u003C\/p\u003E\n\n\u003Cp\u003EThis is what we do first thing in our LocalSettings.php file.\u003C\/p\u003E\n\n\u003Cp\u003EThe line with the URL to the Parsoid instance is interesting. It tells us that Parsoid is a server process listening on port 8142. Mediawiki will contact it at that port when needing to convert HTML code into Mediawiki syntax.\u003C\/p\u003E\n\n\u003Cp\u003EAlso the line about forwarding cookies is essential for Parsoid to work with a private Mediawiki installation.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ Authorizing Parsoid to access Mediawiki\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eif\u003C\/span\u003E \u003Cspan\u003E(\u003C\/span\u003E \u003Cspan\u003E$_SERVER\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027REMOTE_ADDR\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E \u003Cspan\u003E==\u003C\/span\u003E \u003Cspan\u003E\u0027127.0.0.1\u0027\u003C\/span\u003E \u003Cspan\u003E||\u003C\/span\u003E \u003Cspan\u003E$_SERVER\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027REMOTE_ADDR\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E \u003Cspan\u003E==\u003C\/span\u003E \u003Cspan\u003E\u0027localhost\u0027\u003C\/span\u003E \u003Cspan\u003E)\u003C\/span\u003E \u003Cspan\u003E{\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u003Cspan\u003E$wgGroupPermissions\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027*\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027read\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E \u003Cspan\u003E=\u003C\/span\u003E \u003Cstrong\u003Etrue\u003C\/strong\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u003Cspan\u003E$wgGroupPermissions\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027*\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027edit\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E \u003Cspan\u003E=\u003C\/span\u003E \u003Cstrong\u003Etrue\u003C\/strong\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E}\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EwfLoadExtension\u003Cspan\u003E(\u003C\/span\u003E \u003Cspan\u003E\u0027VisualEditor\u0027\u003C\/span\u003E \u003Cspan\u003E)\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ Enable by default for everybody\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E$wgDefaultUserOptions\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027visualeditor-enable\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E \u003Cspan\u003E=\u003C\/span\u003E \u003Cspan\u003E1\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ Optional: Set VisualEditor as the default for anonymous users\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ otherwise they will have to switch to VE\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ $wgDefaultUserOptions[\u0027visualeditor-editor\u0027] = \u0022visualeditor\u0022;\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ Don\u0027t allow users to disable it\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E$wgHiddenPrefs\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E \u003Cspan\u003E=\u003C\/span\u003E \u003Cspan\u003E\u0027visualeditor-enable\u0027\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ OPTIONAL: Enable VisualEditor\u0027s experimental code features\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E$wgDefaultUserOptions\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027visualeditor-enable-experimental\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E \u003Cspan\u003E=\u003C\/span\u003E \u003Cspan\u003E1\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E$wgVirtualRestConfig\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027modules\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027parsoid\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E \u003Cspan\u003E=\u003C\/span\u003E \u003Cspan\u003Earray\u003C\/span\u003E\u003Cspan\u003E(\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u003Cem\u003E\/\/ URL to the Parsoid instance\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u003Cem\u003E\/\/ Use port 8142 if you use the Debian package\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u003Cspan\u003E\u0027url\u0027\u003C\/span\u003E \u003Cspan\u003E=\u0026gt;\u003C\/span\u003E \u003Cspan\u003E\u0027http:\/\/localhost:8142\u0027\u003C\/span\u003E\u003Cspan\u003E,\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u003Cem\u003E\/\/ Parsoid \u0022domain\u0022, see below (optional)\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u003Cem\u003E\/\/\u0027domain\u0027 =\u0026gt; \u0027localhost\u0027,\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u003Cem\u003E\/\/ Parsoid \u0022prefix\u0022, see below (optional)\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u003Cem\u003E\/\/\u0027prefix\u0027 =\u0026gt; \u0027localhost\u0027\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E)\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E# This is for parsoid when it works, like in this case, on a private Mediawiki installation\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ This feature requires a non-locking session store. The default session store will not work and\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ will cause deadlocks (connection timeouts from Parsoid) when trying to use this feature.\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E$wgSessionsInObjectCache\u003C\/span\u003E \u003Cspan\u003E=\u003C\/span\u003E \u003Cstrong\u003Etrue\u003C\/strong\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ Forward users\u0027 Cookie: headers to Parsoid. Required for private wikis (login required to read).\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ If the wiki is not private (i.e. $wgGroupPermissions[\u0027*\u0027][\u0027read\u0027] is true) this configuration\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ variable will be ignored.\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ WARNING: ONLY enable this on private wikis and ONLY IF you understand the SECURITY IMPLICATIONS\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ of sending Cookie headers to Parsoid over HTTP. For security reasons, it is strongly recommended\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cem\u003E\/\/ that $wgVirtualRestConfig[\u0027modules\u0027][\u0027parsoid\u0027][\u0027url\u0027] be pointed to localhost if this setting is enabled.\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E$wgVirtualRestConfig\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027modules\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027parsoid\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E\u003Cspan\u003E[\u003C\/span\u003E\u003Cspan\u003E\u0027forwardCookies\u0027\u003C\/span\u003E\u003Cspan\u003E]\u003C\/span\u003E \u003Cspan\u003E=\u003C\/span\u003E \u003Cstrong\u003Etrue\u003C\/strong\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003EInstalling Visual Editor\u003C\/h2\u003E\n\n\u003Cp\u003ETo install Visual Editor, we need to follow the standard procedure.\u003C\/p\u003E\n\n\u003Cp\u003EFrom the \u003Ca href=\u0022https:\/\/www.mediawiki.org\/wiki\/Special:ExtensionDistributor\/VisualEditor\u0022\u003EExtension Distributor\u003C\/a\u003E we download Visual Editor for our Mediawiki version, 1.28.\u003C\/p\u003E\n\n\u003Cp\u003EThen we extract it in our extension folder.\u003C\/p\u003E\n\n\u003Cp\u003EMany lines need to be added to our LocalSettings.php file and you see them above.\u003C\/p\u003E\n\n\u003Cp\u003ETo be sure that the extension has been installed, we visit the Version page, for example https:\/\/mediawiki.example.com\/index.php?title=Special:Version.\u003C\/p\u003E\n\n\u003Ch2\u003EUsing Visual Editor\u003C\/h2\u003E\n\n\u003Cp\u003EVisual Editor makes creating and editing tables much simpler. Mediawiki tables have a quite complicated syntax and it isn\u2019t easy to edit them or add row and columns if you don\u2019t have Visual Editor.\u003C\/p\u003E\n\n\u003Cp\u003EOther functions are facilitated and enhanced wizards are available to perform most of them.\u003C\/p\u003E\n\n\u003Cp\u003EThere is a good \u003Ca href=\u0022https:\/\/www.mediawiki.org\/wiki\/Help:VisualEditor\/User_guide\u0022\u003Euser guide\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Ch2\u003EVisual Editor problems\u003C\/h2\u003E\n\n\u003Cp\u003EThe are a few problems when using Visual Editor.\u003C\/p\u003E\n\n\u003Cp\u003EIt can be slow when staring editing. Sometimes I use the default editor. To do so, I just have to click on \u201cedit source\u201d.\u003C\/p\u003E\n\n\u003Cp\u003EIf you insert more than one code block in a page, they will disappear from the WYSIWYG view. You will have to switch to the default editor to edit them.\u003C\/p\u003E\n\n\u003Cp\u003EThis is a bug that may be solved in the future.\u003C\/p\u003E\n\n\u003Cp\u003ESome pages can\u2019t be edited using Visual Editor. You will have to use the default editor.\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "Off",
    "field_image": "\/sites\/default\/files\/2018-08\/VisualEditor4post.png"
  },
  {
    "nid": "80",
    "title": "Installing React Application",
    "body": "\u003Ch2\u003EThe goal\u003C\/h2\u003E\n\n\u003Cp\u003EI\u2019m installing React and many other modules needed for my application.\u003C\/p\u003E\n\n\u003Cp\u003EThe application will preform drag and drop operations and animations.\u003C\/p\u003E\n\n\u003Cp\u003EIt will use Material Design.\u003C\/p\u003E\n\n\u003Ch2\u003EWhat is the application about?\u003C\/h2\u003E\n\n\u003Cp\u003EIt\u2019s about displaying a list of products or other objects.\u003C\/p\u003E\n\n\u003Cp\u003EUsing drag and drop the user will be able to rank the product their own way.\u003C\/p\u003E\n\n\u003Cp\u003ETheir ranking will be stored locally so that the user will find it later, when they come to the website again.\u003C\/p\u003E\n\n\u003Cp\u003EThe application is work in progress and you see it here: \u003Ca href=\u0022http:\/\/rankit.emanuelesantanche.com\/\u0022\u003ERankIt Application\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Ch2\u003ELet\u2019s install React\u003C\/h2\u003E\n\n\u003Cp\u003EI\u2019ll use a tool built by Facebook developers.\u003C\/p\u003E\n\n\u003Cp\u003EIt\u2019s called Create React App and saves you a lot of setup and configuration time.\u003C\/p\u003E\n\n\u003Cp\u003EFirst I create a folder for my application and give it the right owner.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Esrv\u003Cstrong\u003E\/\u003C\/strong\u003Esites\u003Cem\u003E# mkdir rankit.emanuelesantanche.com\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Esrv\u003Cstrong\u003E\/\u003C\/strong\u003Esites\u003Cem\u003E# chown -R www-data:www-data rankit.emanuelesantanche.com\/\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThe owner is www-data because the web server needs to be able to read and write in this folder.\u003C\/p\u003E\n\n\u003Cp\u003ENow I use the tool create-react-app to create the React application.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Esrv\u003Cstrong\u003E\/\u003C\/strong\u003Esites\u003Cstrong\u003E\/\u003C\/strong\u003Erankit.emanuelesantanche.com\u003Cem\u003E# npm install -g create-react-app\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Esrv\u003Cstrong\u003E\/\u003C\/strong\u003Esites\u003Cstrong\u003E\/\u003C\/strong\u003Erankit.emanuelesantanche.com\u003Cem\u003E# create-react-app rankitapp\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EWhen running the command \u201ccreate-react-app rankitapp\u201d, I had to stop mysql, php and nginx to make it work because it needed a lot of memory.\u003C\/p\u003E\n\n\u003Cp\u003EThe command was eventually successful and this is what it told me:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003ESuccess! Created rankitapp at \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EInside that directory, you can run several commands:\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 npm start\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 Starts the development server.\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 npm run build\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 Bundles the app into static files for production.\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 npm test\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 Starts the test runner.\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 npm run eject\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 Removes this tool and copies build dependencies, configuration files\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 and scripts into the app directory. If you do this, you can\u2019t go back!\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EWe suggest that you begin by typing:\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 cd rankitapp\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 npm start\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003EHappy hacking!\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003EReact Material Design\u003C\/h2\u003E\n\n\u003Cp\u003EThis application is supposed to use Material Design.\u003C\/p\u003E\n\n\u003Cp\u003EI\u2019m going to use a library called \u003Ca href=\u0022https:\/\/github.com\/mlaursen\/react-md\u0022\u003EReact Material Design\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Cp\u003EYou can see it at work here: https:\/\/react-md.mlaursen.com\/\u003C\/p\u003E\n\n\u003Cp\u003EOn that website you find all the components you can use for your application.\u003C\/p\u003E\n\n\u003Cp\u003EI\u2019m going to use \u003Ca href=\u0022https:\/\/react-md.mlaursen.com\/components\/cards\u0022\u003ECards\u003C\/a\u003E a lot.\u003C\/p\u003E\n\n\u003Cp\u003ETo use React Material Design, I need to install it.\u003C\/p\u003E\n\n\u003Cp\u003EFirst of all I install the package react-md.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eroot@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# \u003C\/span\u003Enpm \u003Cstrong\u003Einstall\u003C\/strong\u003E \u003Cspan\u003E--save\u003C\/span\u003E react-md\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003ECSS preprocessor\u003C\/h2\u003E\n\n\u003Cp\u003EReact Material Design comes with CSS sylesheets, but it uses a \u003Ca href=\u0022https:\/\/medium.com\/@cabot_solutions\/css-preprocessors-effective-tools-for-faster-styling-of-web-pages-and-user-interfaces-6ed4737a9804\u0022\u003ECSS preprocessor\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Cp\u003EI have to install the preprocessor first.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eroot@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# \u003C\/span\u003Enpm \u003Cstrong\u003Einstall\u003C\/strong\u003E \u003Cspan\u003E--save\u003C\/span\u003E node-sass-chokidar\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EI have to add a couple of line to the file \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/package.json.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u0022build\u0022: \u0022react-scripts build\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0\u0022test\u0022: \u0022react-scripts test --env=jsdom\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0\u0022eject\u0022: \u0022react-scripts eject\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E+ \u00a0 \u00a0\u0022build-css\u0022: \u0022node-sass-chokidar --include-path .\/node_modules src\/ -o src\/\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E+ \u00a0 \u00a0\u0022watch-css\u0022: \u0022npm run build-css \u0026amp;\u0026amp; npm run build-css --watch --recursive\u0022\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0},\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0\u0022devDependencies\u0022: {\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0\u0022babel-plugin-transform-decorators\u0022: \u0022^6.24.1\u0022\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThe first line, the one with \u201cbuild-css\u201d, is how CSS files are produced from Scss ones. It\u2019s how the preprocessor converts a Scss file into a standard CSS one.\u003C\/p\u003E\n\n\u003Cp\u003EThe second line, \u201cwatch-css\u201d, is how the system realises that you changed a Scss file and performs again the conversion to a CSS file.\u003C\/p\u003E\n\n\u003Cp\u003ETo test that the precompiler is working we change name to two files.\u003C\/p\u003E\n\n\u003Cp\u003EThey are:\u003C\/p\u003E\n\n\u003Cp\u003E* \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/App.css\u003Cbr \/\u003E\n* \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/index.css\u003C\/p\u003E\n\n\u003Cp\u003EThey become App.scss and index.scss respectively.\u003C\/p\u003E\n\n\u003Cp\u003EI can do this change of name because these two files actually contain pure CSS the CSS preprocessor will convert literally.\u003C\/p\u003E\n\n\u003Cp\u003ENow I run the script watch-css described above.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eroot@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# \u003C\/span\u003Enpm run watch-css\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThis script will create the files App.css and index.css from App.scss and index.scss respectively.\u003C\/p\u003E\n\n\u003Cp\u003EThen I want to prevent css files from being uploaded to my git repository because they will be generated from the scss files.\u003C\/p\u003E\n\n\u003Cp\u003EI add these lines to my .gitignore.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+# build artifacts\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+src\/**\/*.css\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EYou want to create this file: \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/_globals.scss, and put the following content in it.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E@import \u0027react-md\/src\/scss\/react-md\u0027;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\/\/ Any variable overrides. The following just changes the \u003Cspan\u003Edefault\u003C\/span\u003E theme to use \u003Cspan\u003Eteal\u003C\/span\u003E and purple.\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E$md-primary-color\u003Cspan\u003E:\u003C\/span\u003E $md-teal-\u003Cspan\u003E500\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E$md-secondary-color\u003Cspan\u003E:\u003C\/span\u003E $md-purple-a-\u003Cspan\u003E400\u003C\/span\u003E\u003Cspan\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EBy doing this, all the definitions included in React Material Design will be incorporated in our scss and used. We couldn\u2019t use React Material Design if we don\u2019t do this.\u003C\/p\u003E\n\n\u003Cp\u003EThe file \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/index.scss needs a couple more lines:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+@import \u0027globals\u0027;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+@include react-md-everything\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThis step is necessary to actually use React Material Designin our application since the file _globals.scss is used internally, but not invoked in the actual application until we do it explicitly in index.scss.\u003C\/p\u003E\n\n\u003Cp\u003EWe want our scss files compiled in real time as we make changes. That\u2019s why we need to fix our packages file (\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/package.json).\u003C\/p\u003E\n\n\u003Cp\u003EThis is what the scripts part of it looks like:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u0022scripts\u0022: {\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u0022start-js\u0022: \u0022react-scripts start\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u0022start\u0022: \u0022npm-run-all -p watch-css start-js\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u0022build\u0022: \u0022react-scripts build\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u0022test\u0022: \u0022react-scripts test --env=jsdom\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u0022eject\u0022: \u0022react-scripts eject\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u0022build-css\u0022: \u0022node-sass-chokidar --include-path .\/node_modules src\/ -o src\/\u0022,\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u0022watch-css\u0022: \u0022npm run build-css \u0026amp;\u0026amp; npm run build-css --watch --recursive\u0022\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 },\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EWhen we run \u201cnpm run start\u201d, there will be two processes starting: watch-css and start-js. The first one will process scss file to css ones. The second will process javascript.\u003C\/p\u003E\n\n\u003Cp\u003EFor these scripts to work we need to install the package npm-run-all.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eroot@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# \u003C\/span\u003Enpm \u003Cstrong\u003Einstall\u003C\/strong\u003E \u003Cspan\u003E--save\u003C\/span\u003E npm-run-all\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003EWeb Font Loader\u003C\/h2\u003E\n\n\u003Cp\u003EReact Material Design uses some nice fonts, but we need to install Web Font Loader to be able to see them.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eroot@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# \u003C\/span\u003Enpm \u003Cstrong\u003Einstall\u003C\/strong\u003E \u003Cspan\u003E--save\u003C\/span\u003E webfontloader\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EWe have to add these lines to \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/src\/index.js otherwise we won\u2019t use the fonts.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+import WebFontLoader from \u0027webfontloader\u0027;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+WebFontLoader.load\u003Cspan\u003E(\u003C\/span\u003E\u003Cspan\u003E{\u003C\/span\u003E\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+ \u00a0google: \u003Cspan\u003E{\u003C\/span\u003E\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+ \u00a0 \u00a0families: \u003Cspan\u003E[\u003C\/span\u003E\u0027Roboto:300,400,500,700\u0027, \u0027Material Icons\u0027\u003Cspan\u003E]\u003C\/span\u003E,\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+ \u00a0\u003Cspan\u003E}\u003C\/span\u003E,\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003E+\u003Cspan\u003E}\u003C\/span\u003E\u003Cspan\u003E)\u003C\/span\u003E;\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Ch2\u003EMore packages to install\u003C\/h2\u003E\n\n\u003Cp\u003EIt\u2019s simpler to install the other packages we need to do routing, perform animations and drag and drop.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Esrv\u003Cstrong\u003E\/\u003C\/strong\u003Esites\u003Cstrong\u003E\/\u003C\/strong\u003Erankit.emanuelesantanche.com\u003Cstrong\u003E\/\u003C\/strong\u003Erankitapp\u003Cem\u003E# npm install --save react-router-dom\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Esrv\u003Cstrong\u003E\/\u003C\/strong\u003Esites\u003Cstrong\u003E\/\u003C\/strong\u003Erankit.emanuelesantanche.com\u003Cstrong\u003E\/\u003C\/strong\u003Erankitapp\u003Cem\u003E# npm install --save react-dnd\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Esrv\u003Cstrong\u003E\/\u003C\/strong\u003Esites\u003Cstrong\u003E\/\u003C\/strong\u003Erankit.emanuelesantanche.com\u003Cstrong\u003E\/\u003C\/strong\u003Erankitapp\u003Cem\u003E# npm install --save react-dnd-html5-backend\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003Eroot\u003Cstrong\u003E@\u003C\/strong\u003EFREEDOMANDCOURAGE:\u003Cstrong\u003E\/\u003C\/strong\u003Esrv\u003Cstrong\u003E\/\u003C\/strong\u003Esites\u003Cstrong\u003E\/\u003C\/strong\u003Erankit.emanuelesantanche.com\u003Cstrong\u003E\/\u003C\/strong\u003Erankitapp\u003Cem\u003E# npm install --save react-motion\u003C\/em\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003E\u00a0\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-08\/react.png"
  },
  {
    "nid": "79",
    "title": "Serving static files in React",
    "body": "\u003Ch2\u003ESome context\u003C\/h2\u003E\n\n\u003Cp\u003EI\u2019m building a React application. You can see the code in this Github repository: \u003Ca href=\u0022https:\/\/github.com\/esantanche\/rankit\u0022\u003ERankit Github repository\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Cp\u003EThe live application is here: \u003Ca href=\u0022http:\/\/rankit.emanuelesantanche.com\/\u0022\u003ERankit Application\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Cp\u003ETo create the environment from scratch I used the tool \u003Ca href=\u0022https:\/\/github.com\/facebookincubator\/create-react-app\u0022\u003ECreate React App\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Cp\u003EIt\u2019s easier and you don\u2019t have to tamper with configuration files to make it work.\u003C\/p\u003E\n\n\u003Cp\u003EIt works out of the box.\u003C\/p\u003E\n\n\u003Ch2\u003EWhat I want to do\u003C\/h2\u003E\n\n\u003Cp\u003EI need to load the content of a text file into a variable.\u003C\/p\u003E\n\n\u003Cp\u003EThe text file contains a dictionary of words.\u003C\/p\u003E\n\n\u003Ch2\u003ERestrictions\u003C\/h2\u003E\n\n\u003Cp\u003EI want a solution that is as much in line with React as possible. The solution shouldn\u2019t use tricks that don\u2019t involve React.\u003C\/p\u003E\n\n\u003Cp\u003EThe web server configuration shouldn\u2019t change.\u003C\/p\u003E\n\n\u003Cp\u003EIn my case the web server, nginx, just passes all http queries to the React application server running on port 3000. It doesn\u2019t intercept any http query and doesn\u2019t serve static files.\u003C\/p\u003E\n\n\u003Cp\u003EEverything happens through React. I would like to keep it that way.\u003C\/p\u003E\n\n\u003Cp\u003EI don\u2019t want to copy and paste the file\u2019s content into the code. I want to load the file dynamically when the program runs.\u003C\/p\u003E\n\n\u003Cp\u003EI don\u2019t want to change any configuration file Webpack uses. When you create a React application by using Create React App, it does the job for you.\u003C\/p\u003E\n\n\u003Cp\u003EIt configures Webpack and you are not supposed to touch the configuration. I don\u2019t even know where it is and I don\u2019t want to know.\u003C\/p\u003E\n\n\u003Cp\u003EAdditionally, it would be great to avoid having to install an additional server process to do the job.\u003C\/p\u003E\n\n\u003Cp\u003EAn additional tool that needs another server process to run may do the job, but it would definitely be overshot.\u003C\/p\u003E\n\n\u003Ch2\u003EWhy can\u2019t I just import the file?\u003C\/h2\u003E\n\n\u003Cp\u003EI discovered that I can install a loader. Webpack uses it to load a file directly into a variable.\u003C\/p\u003E\n\n\u003Cp\u003EYou would say that the problem is solved.\u003C\/p\u003E\n\n\u003Cp\u003EI installed the loader using this command:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003E\u003Cspan\u003Eroot@FREEDOMANDCOURAGE:\/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp# \u003C\/span\u003Enpm \u003Cstrong\u003Einstall\u003C\/strong\u003E \u003Cspan\u003E--save-dev\u003C\/span\u003E raw-loader\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThen I added this instruction to my application:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eimport txt from \u0027raw-loader!.\/file.txt\u0027;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EI got this error message as well:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003ELine 10: \u00a0Unexpected \u0027!\u0027 in \u0027raw-loader!.\/file.txt\u0027. Do not use import syntax to configure webpack loaders \u00a0import\/no-webpack-loader-syntax\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThis error message comes from one of the components Create React App installs when it creates the application for you.\u003C\/p\u003E\n\n\u003Cp\u003EThe component is ESLint. It parses your code to find patterns that may cause problems or that don\u2019t comply to given guidelines.\u003C\/p\u003E\n\n\u003Cp\u003EIn this case ESLint is configured with a rule that forbids the use of webpack loaders in import statements.\u003C\/p\u003E\n\n\u003Cp\u003EI can\u2019t disable this rule because I should change ESLint configuration, which is part of the configuration that comes when you use the tool Create React App.\u003C\/p\u003E\n\n\u003Cp\u003EAmong the restrictions described above there is this one as well.\u003C\/p\u003E\n\n\u003Ch2\u003EWhat about importing the file without using webpack loaders?\u003C\/h2\u003E\n\n\u003Cp\u003EThe idea is to use this statement:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eimport txt from \u0027file.txt\u0027;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EAfter the import above runs, the variable txt won\u2019t contain the file \u2018file.txt\u2019.\u003C\/p\u003E\n\n\u003Cp\u003EIt will contain a string that is actually a JavaScript statement like this one:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Emodule.exports = __webpack_public_path__ + \u00222c2ae068be3b089e0a5b59abb1831550.eot\u0022\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EI could use this statement in my code if the variable __webpack_public_path__ was defined.\u003C\/p\u003E\n\n\u003Cp\u003EIt looks like it isn\u2019t and to have it defined I should change Webpack configuration, which thing I can\u2019t do.\u003C\/p\u003E\n\n\u003Ch2\u003ECan I use Node Express?\u003C\/h2\u003E\n\n\u003Cp\u003EExpress is a framework I can use as backend to perform many useful tasks.\u003C\/p\u003E\n\n\u003Cp\u003EHow to use it to serve static files is described \u003Ca href=\u0022https:\/\/medium.com\/@justintulk\/serving-static-html-into-a-react-component-using-node-express-8cb9fc9194df\u0022\u003Ehere\u003C\/a\u003E\u003C\/p\u003E\n\n\u003Cp\u003EJust I don\u2019t want to add another server process if I can avoid it.\u003C\/p\u003E\n\n\u003Cp\u003EIt would consume a lot of resources.\u003C\/p\u003E\n\n\u003Ch2\u003ECan I tell Webpack to use a specific loader when a file has a given extension?\u003C\/h2\u003E\n\n\u003Cp\u003EIt looks like this command:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Ewebpack \u003Cspan\u003E--module-bind\u003C\/span\u003E \u003Cspan\u003E\u0027txt=raw-loader\u0027\u003C\/span\u003E\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003Ewould just associate text files with the raw loader.\u003C\/p\u003E\n\n\u003Cp\u003EThis means that I could just use this statement:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eimport txt from \u0027file.txt\u0027;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003Eand Webpack would use the raw loader bypassing the syntax:\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Eimport txt from \u0027raw-loader!.\/file.txt\u0027;\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003Ewhich we know ESLint forbids.\u003C\/p\u003E\n\n\u003Cp\u003EThe problem is that the command \u2018webpack\u2019 is not installed and to install it we would have again to tamper with the configuration Create React App uses.\u003C\/p\u003E\n\n\u003Ch2\u003ELet\u2019s use the public folder!\u003C\/h2\u003E\n\n\u003Cp\u003EWebpack treats a folder in a special way.\u003C\/p\u003E\n\n\u003Cp\u003EIt\u2019s the public folder.\u003C\/p\u003E\n\n\u003Cp\u003EIf you put a file there, it\u2019s not going to be transformed or moved.\u003C\/p\u003E\n\n\u003Cp\u003EYou can access it with a fetch statement and load it into a variable.\u003C\/p\u003E\n\n\u003Cp\u003EThe file dictionary.txt is in the public folder, which in our case is this folder: \/srv\/sites\/rankit.emanuelesantanche.com\/rankitapp\/public\u003C\/p\u003E\n\n\u003Cp\u003EThe following fetch statement loads that file and its full content is passed to a function, t9init, as parameter.\u003C\/p\u003E\n\n\u003Col\u003E\u003Cli\u003E\n\t\u003Cp\u003Efetch(\u0022dictionary.txt\u0022)\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .then((response) =\u0026gt; response.text())\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .then(function(data) {\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 t9init(data);\u00a0 \u00a0 \u00a0\u003C\/p\u003E\n\t\u003C\/li\u003E\n\t\u003Cli\u003E\n\t\u003Cp\u003E\u00a0 \u00a0 \u00a0 \u00a0 })\u003C\/p\u003E\n\t\u003C\/li\u003E\n\u003C\/ol\u003E\u003Cp\u003EThere is no need to specify the full url of the file because Webpack will prepend the url of the public folder.\u003C\/p\u003E\n\n\u003Cp\u003EActually, if you try to use a url in your fetch statement that you think may be correct, it won\u2019t work.\u003C\/p\u003E\n\n\u003Cp\u003EIf you use these urls:\u003C\/p\u003E\n\n\u003Cul\u003E\u003Cli\u003E\/public\/dictionary.txt\u003C\/li\u003E\n\t\u003Cli\u003E\/reactapp\/public\/dictionary.txt\u003C\/li\u003E\n\t\u003Cli\u003Epublic\/dictionary.txt\u003C\/li\u003E\n\t\u003Cli\u003Ereactapp\/public\/dictionary.txt\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cp\u003Eit won\u2019t work. If the file is in the public folder, just give its url relative to the public folder.\u003C\/p\u003E\n\n\u003Cp\u003EThis Webpack peculiarity may have misled you when you were trying to fetch the file by giving its url.\u003C\/p\u003E",
    "langcode": "English",
    "field_ems_topic": "Talking about my experiences",
    "sticky": "On",
    "field_image": "\/sites\/default\/files\/2018-08\/Static_files_React.png"
  }
]